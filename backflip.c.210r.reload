
;; Function back_flip_init (back_flip_init, funcdef_no=57, decl_uid=6975, cgraph_uid=57)


********** Local #1: **********

          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 2:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 3:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 4:  (0) m  (1) x {*movdf_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 6:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 7:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 8:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 9:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 10:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=102, assigning class NO_REGS to secondary r102
   24: r102:DF=r71:DF
      REG_DEAD r71:DF
    Inserting the sec. move after:
   96: xmm5:DF=r102:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 96:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 25:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=103, assigning class NO_REGS to secondary r103
   26: r103:DF=r72:DF
      REG_DEAD r72:DF
    Inserting the sec. move after:
   97: xmm3:DF=r103:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 97:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=104, assigning class NO_REGS to secondary r104
   28: r104:DF=r74:DF
      REG_DEAD r74:DF
    Inserting the sec. move after:
   98: xmm2:DF=r104:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 98:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=105, assigning class NO_REGS to secondary r105
   29: r105:DF=r75:DF
      REG_DEAD r75:DF
    Inserting the sec. move after:
   99: xmm1:DF=r105:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 99:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=106, assigning class NO_REGS to secondary r106
   30: r106:DF=r76:DF
      REG_DEAD r76:DF
    Inserting the sec. move after:
  100: xmm0:DF=r106:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 100:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 37:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 61:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 66:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=107 from oldreg=92, assigning class GENERAL_REGS to r107
   66: {r107:DI=r107:DI<<0x4;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  101: r107:DI=r90:DI
    Inserting insn reload after:
  102: r92:DI=r107:DI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 73:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 75:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 76:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 78:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 79:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 81:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 82:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) rem {*movdi_internal_rex64}

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 93: point = 0
   Insn 90: point = 0
   Insn 86: point = 1
   Insn 83: point = 3
   Insn 82: point = 4
   Insn 81: point = 5
   Insn 80: point = 6
   Insn 79: point = 7
   Insn 78: point = 8
   Insn 77: point = 9
   Insn 76: point = 10
   Insn 75: point = 11
   Insn 74: point = 12
   Insn 73: point = 13
   Insn 72: point = 14
   Insn 71: point = 15
   Insn 70: point = 17
   Insn 69: point = 18
   Insn 68: point = 18
   Insn 67: point = 19
   Insn 102: point = 21
	Hard reg 1 is preferable by r107 with profit 1
   Insn 66: point = 23
   Insn 101: point = 23
   Insn 65: point = 24
   Insn 64: point = 26
   Insn 63: point = 28
   Insn 62: point = 30
   Insn 61: point = 31
   Insn 60: point = 32
   Insn 59: point = 33
   Insn 58: point = 35
   Insn 57: point = 36
   Insn 56: point = 36
   Insn 55: point = 37
   Insn 54: point = 39
   Insn 53: point = 40
   Insn 52: point = 41
   Insn 51: point = 42
   Insn 50: point = 44
   Insn 49: point = 45
   Insn 48: point = 45
   Insn 47: point = 46
   Insn 46: point = 48
   Insn 45: point = 49
   Insn 44: point = 50
   Insn 43: point = 51
   Insn 42: point = 53
   Insn 41: point = 54
   Insn 40: point = 54
   Insn 39: point = 55
   Insn 38: point = 57
   Insn 37: point = 58
   Insn 36: point = 59
   Insn 35: point = 60
   Insn 34: point = 61
   Insn 33: point = 62
   Insn 32: point = 63
   Insn 31: point = 64
   Insn 100: point = 64
	Hard reg 21 is preferable by r106 with profit 1
   Insn 30: point = 65
	Hard reg 21 is preferable by r106 with profit 1
	Hard reg 0 is preferable by r106 with profit 1
   Insn 99: point = 67
	Hard reg 22 is preferable by r105 with profit 1
   Insn 29: point = 68
	Hard reg 22 is preferable by r105 with profit 1
	Hard reg 1 is preferable by r105 with profit 1
   Insn 98: point = 70
	Hard reg 23 is preferable by r104 with profit 1
   Insn 28: point = 71
	Hard reg 23 is preferable by r104 with profit 1
	Hard reg 2 is preferable by r104 with profit 1
   Insn 27: point = 73
   Insn 97: point = 74
	Hard reg 24 is preferable by r103 with profit 1
   Insn 26: point = 75
	Hard reg 24 is preferable by r103 with profit 1
	Hard reg 4 is preferable by r103 with profit 1
   Insn 25: point = 77
   Insn 96: point = 77
	Hard reg 26 is preferable by r102 with profit 1
   Insn 24: point = 78
	Hard reg 26 is preferable by r102 with profit 1
	Hard reg 5 is preferable by r102 with profit 1
   Insn 23: point = 80
   Insn 22: point = 81
   Insn 21: point = 82
   Insn 20: point = 83
   Insn 19: point = 84
   Insn 18: point = 85
   Insn 17: point = 86
   Insn 16: point = 87
   Insn 15: point = 88
   Insn 14: point = 88
   Insn 10: point = 88
   Insn 9: point = 88
   Insn 8: point = 88
   Insn 7: point = 88
   Insn 6: point = 88
   Insn 5: point = 88
   Insn 4: point = 88
   Insn 3: point = 88
   Insn 2: point = 88
 r59: [61..63]
 r60: [54..55]
 r61: [49..51]
 r62: [45..46]
 r63: [40..42]
 r64: [36..37]
 r65: [31..33]
 r66: [18..19]
 r67: [13..15]
 r68: [2..3]
 r69: [0..1]
 r70: [86..87]
 r71: [79..85]
 r72: [76..84]
 r73: [73..83]
 r74: [72..82]
 r75: [69..81]
 r76: [66..80]
 r77: [61..62]
 r78: [58..60]
 r79: [58..59]
 r80: [56..57]
 r81: [52..53]
 r82: [49..50]
 r83: [47..48]
 r84: [43..44]
 r85: [40..41]
 r86: [38..39]
 r87: [34..35]
 r88: [31..32]
 r89: [29..30]
 r90: [27..28] [20..24]
 r91: [25..26]
 r92: [20..21]
 r93: [16..17]
 r94: [13..14]
 r95: [10..12]
 r96: [10..11]
 r97: [7..9]
 r98: [7..8]
 r99: [4..6]
 r100: [4..5]
 r102: [77..78]
 r103: [74..75]
 r104: [70..71]
 r105: [67..68]
 r106: [64..65]
 r107: [22..23]
Compressing live ranges: from 88 to 68 - 77%
Ranges after the compression:
 r59: [52..53]
 r60: [46..47]
 r61: [42..43]
 r62: [38..39]
 r63: [34..35]
 r64: [30..31]
 r65: [26..27]
 r66: [14..15]
 r67: [10..11]
 r68: [2..3]
 r69: [0..1]
 r70: [66..67]
 r71: [64..65]
 r72: [62..65]
 r73: [60..65]
 r74: [60..65]
 r75: [58..65]
 r76: [56..65]
 r77: [52..53]
 r78: [50..51]
 r79: [50..51]
 r80: [48..49]
 r81: [44..45]
 r82: [42..43]
 r83: [40..41]
 r84: [36..37]
 r85: [34..35]
 r86: [32..33]
 r87: [28..29]
 r88: [26..27]
 r89: [24..25]
 r90: [22..23] [16..19]
 r91: [20..21]
 r92: [16..17]
 r93: [12..13]
 r94: [10..11]
 r95: [8..9]
 r96: [8..9]
 r97: [6..7]
 r98: [6..7]
 r99: [4..5]
 r100: [4..5]
 r102: [62..63]
 r103: [60..61]
 r104: [58..59]
 r105: [56..57]
 r106: [54..55]
 r107: [18..19]
	 Assigning to 107 (cl=GENERAL_REGS, orig=92, freq=3, tfirst=107, tfreq=3)...
	   Assign 1 to reload r107 (freq=3)

********** Undoing inheritance #1: **********


********** Local #2: **********

  Slot 0 regnos (width = 8):	 102	 106	 105	 104	 103
Changing spilled pseudos to memory in insn #24
Changing spilled pseudos to memory in insn #96
Changing spilled pseudos to memory in insn #26
Changing spilled pseudos to memory in insn #97
Changing spilled pseudos to memory in insn #28
Changing spilled pseudos to memory in insn #98
Changing spilled pseudos to memory in insn #29
Changing spilled pseudos to memory in insn #99
Changing spilled pseudos to memory in insn #30
Changing spilled pseudos to memory in insn #100

********** Local #3: **********

Reusing alternative 9 for insn #100
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 100:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #99
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 99:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #98
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 98:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 28:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #97
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 97:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 26:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #96
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 96:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) ?m  (1) rC {*movdf_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=112, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=96, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 32
changing reg in insn 34
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 51
changing reg in insn 53
changing reg in insn 55
changing reg in insn 56
changing reg in insn 59
changing reg in insn 61
changing reg in insn 67
changing reg in insn 68
changing reg in insn 71
changing reg in insn 73
changing reg in insn 83
changing reg in insn 86
changing reg in insn 86
changing reg in insn 90
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 24
changing reg in insn 19
changing reg in insn 26
changing reg in insn 20
changing reg in insn 27
changing reg in insn 21
changing reg in insn 28
changing reg in insn 22
changing reg in insn 29
changing reg in insn 23
changing reg in insn 30
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 37
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 65
changing reg in insn 63
changing reg in insn 67
changing reg in insn 64
changing reg in insn 64
changing reg in insn 65
changing reg in insn 67
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 79
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 82
changing reg in insn 81
changing reg in insn 82
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 69.


back_flip_init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8]
;;  ref usage 	r0={36d,37u} r1={20d,13u} r2={8d,1u} r4={8d,1u} r5={14d,8u} r6={1d,45u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={12d} r18={6d} r19={6d} r20={1d,1u,3e} r21={8d,2u} r22={8d,2u} r23={8d,2u} r24={8d,2u} r25={8d,2u} r26={8d,2u} r27={7d,1u} r28={7d,1u} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={8d,1u} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} 
;;    total ref usage 478{346d,129u,3e} in 89{83 regular + 6 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 radius1_+0 S8 A64])
        (reg:DF 21 xmm0 [ radius1_ ])) backflip.c:17 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [ radius1_ ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 radius2_+0 S8 A64])
        (reg:DF 22 xmm1 [ radius2_ ])) backflip.c:17 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [ radius2_ ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 distance_+0 S8 A64])
        (reg:DF 23 xmm2 [ distance_ ])) backflip.c:17 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [ distance_ ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 numGrousers_+0 S8 A64])
        (reg:DI 5 di [ numGrousers_ ])) backflip.c:17 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ numGrousers_ ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 grouserHeight_+0 S8 A64])
        (reg:DF 24 xmm3 [ grouserHeight_ ])) backflip.c:17 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 24 xmm3 [ grouserHeight_ ])
        (nil)))
(insn 7 6 8 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 flipDepth_+0 S8 A64])
        (reg:DF 25 xmm4 [ flipDepth_ ])) backflip.c:17 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 25 xmm4 [ flipDepth_ ])
        (nil)))
(insn 8 7 9 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 xOffset+0 S8 A64])
        (reg:DF 26 xmm5 [ xOffset ])) backflip.c:17 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 26 xmm5 [ xOffset ])
        (nil)))
(insn 9 8 10 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 yOffset+0 S8 A64])
        (reg:DF 27 xmm6 [ yOffset ])) backflip.c:17 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 27 xmm6 [ yOffset ])
        (nil)))
(insn 10 9 11 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 zOffset+0 S8 A64])
        (reg:DF 28 xmm7 [ zOffset ])) backflip.c:17 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 28 xmm7 [ zOffset ])
        (nil)))
(note 11 10 14 2 NOTE_INSN_FUNCTION_BEG)
(insn 14 11 15 2 (set (reg:DI 5 di)
        (const_int 552 [0x228])) backflip.c:18 87 {*movdi_internal_rex64}
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x10000c9e00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backflip.c:18 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [70])
        (reg:DI 0 ax)) backflip.c:18 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 0 ax [70])
            (nil))))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])
        (reg/f:DI 0 ax [70])) backflip.c:18 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [70])
        (nil)))
(insn 18 17 19 2 (set (reg:DF 5 di [71])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 flipDepth_+0 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg:DF 4 si [72])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 grouserHeight_+0 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (reg:DI 37 r8 [73])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 numGrousers_+0 S8 A64])) backflip.c:19 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:DF 2 cx [74])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 distance_+0 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (reg:DF 1 dx [75])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 radius2_+0 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg:DF 0 ax [76])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 radius1_+0 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (nil))
(insn 24 23 96 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])
        (reg:DF 5 di [71])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 5 di [71])
        (nil)))
(insn 96 24 25 2 (set (reg:DF 26 xmm5)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 102)
        (nil)))
(insn 25 96 26 2 (set (reg:DF 25 xmm4)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 26 25 97 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])
        (reg:DF 4 si [72])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 4 si [72])
        (nil)))
(insn 97 26 27 2 (set (reg:DF 24 xmm3)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 103)
        (nil)))
(insn 27 97 28 2 (set (reg:DI 5 di)
        (reg:DI 37 r8 [73])) backflip.c:19 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [73])
        (nil)))
(insn 28 27 98 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])
        (reg:DF 2 cx [74])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 2 cx [74])
        (nil)))
(insn 98 28 29 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 104)
        (nil)))
(insn 29 98 99 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])
        (reg:DF 1 dx [75])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [75])
        (nil)))
(insn 99 29 30 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 105)
        (nil)))
(insn 30 99 100 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])
        (reg:DF 0 ax [76])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [76])
        (nil)))
(insn 100 30 31 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])) backflip.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 106)
        (nil)))
(call_insn 31 100 32 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("track_kinematic_model_init") [flags 0x41]  <function_decl 0x100008fd00 track_kinematic_model_init>) [0 track_kinematic_model_init S1 A8])
            (const_int 0 [0]))) backflip.c:19 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 26 xmm5)
        (expr_list:REG_DEAD (reg:DF 25 xmm4)
            (expr_list:REG_DEAD (reg:DF 24 xmm3)
                (expr_list:REG_DEAD (reg:DF 23 xmm2)
                    (expr_list:REG_DEAD (reg:DF 22 xmm1)
                        (expr_list:REG_DEAD (reg:DF 21 xmm0)
                            (expr_list:REG_DEAD (reg:DI 5 di)
                                (nil))))))))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (expr_list:DF (use (reg:DF 23 xmm2))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
                    (expr_list:DF (use (reg:DF 24 xmm3))
                        (expr_list:DF (use (reg:DF 25 xmm4))
                            (expr_list:DF (use (reg:DF 26 xmm5))
                                (nil)))))))))
(insn 32 31 33 2 (set (reg/f:DI 0 ax [orig:59 D.7541 ] [59])
        (reg:DI 0 ax)) backflip.c:19 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 33 32 34 2 (set (reg/f:DI 1 dx [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:19 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (mem/f/j:DI (reg/f:DI 1 dx [77]) [0 t_1->m+0 S8 A64])
        (reg/f:DI 0 ax [orig:59 D.7541 ] [59])) backflip.c:19 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [77])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.7541 ] [59])
            (nil))))
(insn 35 34 36 2 (set (reg/f:DI 1 dx [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:20 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 2 (set (reg:DF 0 ax [79])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) backflip.c:20 133 {*movdf_internal_rex64}
     (nil))
(insn 37 36 38 2 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [78])
                (const_int 8 [0x8])) [0 t_1->density+0 S8 A64])
        (reg:DF 0 ax [79])) backflip.c:20 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [79])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [78])
            (nil))))
(insn 38 37 39 2 (set (reg:DI 0 ax [80])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 numGrousers_+0 S8 A64])) backflip.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg:DI 0 ax [orig:60 D.7542 ] [60])
                (ashift:DI (reg:DI 0 ax [80])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:21 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [80])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -48 [0xffffffffffffffd0])) [0 numGrousers_+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:60 D.7542 ] [60])) backflip.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.7542 ] [60])
        (nil)))
(call_insn 41 40 42 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x10000c9e00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backflip.c:21 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 2 (set (reg/f:DI 0 ax [81])
        (reg:DI 0 ax)) backflip.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 0 ax [81])
            (nil))))
(insn 43 42 44 2 (set (reg/f:DI 1 dx [orig:61 D.7543 ] [61])
        (reg/f:DI 0 ax [81])) backflip.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [81])
        (nil)))
(insn 44 43 45 2 (set (reg/f:DI 0 ax [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [82])
                (const_int 496 [0x1f0])) [0 t_1->grouserBody+0 S8 A64])
        (reg/f:DI 1 dx [orig:61 D.7543 ] [61])) backflip.c:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [82])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:61 D.7543 ] [61])
            (nil))))
(insn 46 45 47 2 (set (reg:DI 0 ax [83])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 numGrousers_+0 S8 A64])) backflip.c:22 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 2 (parallel [
            (set (reg:DI 0 ax [orig:62 D.7542 ] [62])
                (ashift:DI (reg:DI 0 ax [83])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:22 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [83])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -48 [0xffffffffffffffd0])) [0 numGrousers_+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 48 47 49 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:62 D.7542 ] [62])) backflip.c:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 D.7542 ] [62])
        (nil)))
(call_insn 49 48 50 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x10000c9e00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backflip.c:22 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 50 49 51 2 (set (reg/f:DI 0 ax [84])
        (reg:DI 0 ax)) backflip.c:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 0 ax [84])
            (nil))))
(insn 51 50 52 2 (set (reg/f:DI 1 dx [orig:63 D.7543 ] [63])
        (reg/f:DI 0 ax [84])) backflip.c:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [84])
        (nil)))
(insn 52 51 53 2 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:22 87 {*movdi_internal_rex64}
     (nil))
(insn 53 52 54 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [85])
                (const_int 504 [0x1f8])) [0 t_1->grouserGeom+0 S8 A64])
        (reg/f:DI 1 dx [orig:63 D.7543 ] [63])) backflip.c:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [85])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:63 D.7543 ] [63])
            (nil))))
(insn 54 53 55 2 (set (reg:DI 0 ax [86])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 numGrousers_+0 S8 A64])) backflip.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 2 (parallel [
            (set (reg:DI 0 ax [orig:64 D.7542 ] [64])
                (ashift:DI (reg:DI 0 ax [86])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:23 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [86])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -48 [0xffffffffffffffd0])) [0 numGrousers_+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 56 55 57 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:64 D.7542 ] [64])) backflip.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:64 D.7542 ] [64])
        (nil)))
(call_insn 57 56 58 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x10000c9e00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backflip.c:23 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 58 57 59 2 (set (reg/f:DI 0 ax [87])
        (reg:DI 0 ax)) backflip.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 0 ax [87])
            (nil))))
(insn 59 58 60 2 (set (reg/f:DI 1 dx [orig:65 D.7543 ] [65])
        (reg/f:DI 0 ax [87])) backflip.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [87])
        (nil)))
(insn 60 59 61 2 (set (reg/f:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:23 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [88])
                (const_int 512 [0x200])) [0 t_1->grouserJoint+0 S8 A64])
        (reg/f:DI 1 dx [orig:65 D.7543 ] [65])) backflip.c:23 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [88])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:65 D.7543 ] [65])
            (nil))))
(insn 62 61 63 2 (set (reg:DI 0 ax [89])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 numGrousers_+0 S8 A64])) backflip.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 2 (set (reg:DI 0 ax [90])
        (reg:DI 0 ax [89])) backflip.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [89])
        (nil)))
(insn 64 63 65 2 (parallel [
            (set (reg:DI 0 ax [91])
                (ashift:DI (reg:DI 0 ax [90])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:24 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [90])
        (nil)))
(insn 65 64 101 2 (set (reg:DI 0 ax [90])
        (reg:DI 0 ax [91])) backflip.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [91])
        (nil)))
(insn 101 65 66 2 (set (reg:DI 1 dx [92])
        (reg:DI 0 ax [90])) backflip.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 66 101 102 2 (parallel [
            (set (reg:DI 1 dx [92])
                (ashift:DI (reg:DI 1 dx [92])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:24 513 {*ashldi3_1}
     (nil))
(insn 102 66 67 2 (set (reg:DI 1 dx [92])
        (reg:DI 1 dx [92])) backflip.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [92])
        (nil)))
(insn 67 102 68 2 (parallel [
            (set (reg:DI 0 ax [orig:66 D.7542 ] [66])
                (plus:DI (reg:DI 0 ax [90])
                    (reg:DI 1 dx [92])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:24 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [92])
        (expr_list:REG_DEAD (reg:DI 0 ax [90])
            (nil))))
(insn 68 67 69 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:66 D.7542 ] [66])) backflip.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:66 D.7542 ] [66])
        (nil)))
(call_insn 69 68 70 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x10000c9e00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backflip.c:24 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 70 69 71 2 (set (reg/f:DI 0 ax [93])
        (reg:DI 0 ax)) backflip.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 0 ax [93])
            (nil))))
(insn 71 70 72 2 (set (reg/f:DI 1 dx [orig:67 D.7543 ] [67])
        (reg/f:DI 0 ax [93])) backflip.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [93])
        (nil)))
(insn 72 71 73 2 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:24 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [94])
                (const_int 520 [0x208])) [0 t_1->grouserMass+0 S8 A64])
        (reg/f:DI 1 dx [orig:67 D.7543 ] [67])) backflip.c:24 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [94])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:67 D.7543 ] [67])
            (nil))))
(insn 74 73 75 2 (set (reg/f:DI 1 dx [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:25 87 {*movdi_internal_rex64}
     (nil))
(insn 75 74 76 2 (set (reg:DF 0 ax [96])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 xOffset+0 S8 A64])) backflip.c:25 133 {*movdf_internal_rex64}
     (nil))
(insn 76 75 77 2 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [95])
                (const_int 528 [0x210])) [0 t_1->xOffset+0 S8 A64])
        (reg:DF 0 ax [96])) backflip.c:25 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [96])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [95])
            (nil))))
(insn 77 76 78 2 (set (reg/f:DI 1 dx [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:26 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 2 (set (reg:DF 0 ax [98])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 yOffset+0 S8 A64])) backflip.c:26 133 {*movdf_internal_rex64}
     (nil))
(insn 79 78 80 2 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [97])
                (const_int 536 [0x218])) [0 t_1->yOffset+0 S8 A64])
        (reg:DF 0 ax [98])) backflip.c:26 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [98])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [97])
            (nil))))
(insn 80 79 81 2 (set (reg/f:DI 1 dx [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:27 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 82 2 (set (reg:DF 0 ax [100])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 zOffset+0 S8 A64])) backflip.c:27 133 {*movdf_internal_rex64}
     (nil))
(insn 82 81 83 2 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [99])
                (const_int 544 [0x220])) [0 t_1->zOffset+0 S8 A64])
        (reg:DF 0 ax [100])) backflip.c:27 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [100])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [99])
            (nil))))
(insn 83 82 86 2 (set (reg/f:DI 0 ax [orig:68 D.7544 ] [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:28 87 {*movdi_internal_rex64}
     (nil))
(insn 86 83 90 2 (set (reg:DI 0 ax [orig:69 <retval> ] [69])
        (reg/f:DI 0 ax [orig:68 D.7544 ] [68])) backflip.c:28 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 D.7544 ] [68])
        (nil)))
(insn 90 86 93 2 (set (reg/i:DI 0 ax)
        (reg:DI 0 ax [orig:69 <retval> ] [69])) backflip.c:30 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:69 <retval> ] [69])
        (nil)))
(insn 93 90 0 2 (use (reg/i:DI 0 ax)) backflip.c:30 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function back_flip_create (back_flip_create, funcdef_no=58, decl_uid=6980, cgraph_uid=58)


********** Local #1: **********

New elimination table:
Can't eliminate 16 to 7 (offset=576, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=544, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 27:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=564, assigning class NO_REGS to secondary r564
   28: r564:DF=r61:DF
      REG_DEAD r61:DF
    Inserting the sec. move after:
  826: xmm3:DF=r564:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 826:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=565, assigning class NO_REGS to secondary r565
   29: r565:DF=r63:DF
      REG_DEAD r63:DF
    Inserting the sec. move after:
  827: xmm2:DF=r565:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 827:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=566, assigning class NO_REGS to secondary r566
   30: r566:DF=r65:DF
      REG_DEAD r65:DF
    Inserting the sec. move after:
  828: xmm1:DF=r566:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 828:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=567, assigning class NO_REGS to secondary r567
   31: r567:DF=r66:DF
      REG_DEAD r66:DF
    Inserting the sec. move after:
  829: xmm0:DF=r567:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 829:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 35:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) rzw {*call}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 42:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 45:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 48:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 51:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 52
	 Choosing alt 0 in insn 52:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 53
	 Choosing alt 0 in insn 53:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 54:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 55:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=5,overall=615,losers=1 -- reject
          alt=6,overall=615,losers=1 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=17,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 56:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 57:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 61:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 62:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 65:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 66
	 Choosing alt 0 in insn 66:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 68:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=568, assigning class NO_REGS to secondary r568
   72: r568:DF=r360:DF
      REG_DEAD r360:DF
    Inserting the sec. move after:
  830: xmm1:DF=r568:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 830:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=569, assigning class NO_REGS to secondary r569
   73: r569:DF=r361:DF
      REG_DEAD r361:DF
    Inserting the sec. move after:
  831: xmm0:DF=r569:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 831:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 78:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 97:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 99:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 101:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 102:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 103:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 105:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 108:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 111:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 112:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 114
	 Choosing alt 0 in insn 114:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=570, assigning class NO_REGS to secondary r570
  117: r570:DF=r89:DF
      REG_DEAD r89:DF
    Inserting the sec. move after:
  832: xmm2:DF=r570:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 832:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 122:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 123:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 124:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 129:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 130:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 132:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 133:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 134
	 Choosing alt 0 in insn 134:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 136:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 137:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=571, assigning class NO_REGS to secondary r571
  140: r571:DF=r380:DF
      REG_DEAD r380:DF
    Inserting the sec. move after:
  833: xmm1:DF=r571:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 833:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=572, assigning class NO_REGS to secondary r572
  141: r572:DF=r381:DF
      REG_DEAD r381:DF
    Inserting the sec. move after:
  834: xmm0:DF=r572:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 834:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 146:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 148:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 149:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 150:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 154:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 165:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 166:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 167:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 170:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 171:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 173
	 Choosing alt 0 in insn 173:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 174:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
      Creating newreg=573 from oldreg=120, assigning class SSE_REGS to r573
  174: r573:DF=r573:DF+[frame:DI-0x1f8]
      REG_DEAD r119:DF
    Inserting insn reload before:
  835: r573:DF=r119:DF
    Inserting insn reload after:
  836: r120:DF=r573:DF

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 176:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 179:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 180:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 182
	 Choosing alt 0 in insn 182:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=574, assigning class NO_REGS to secondary r574
  185: r574:DF=r114:DF
      REG_DEAD r114:DF
    Inserting the sec. move after:
  837: xmm2:DF=r574:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 837:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 191:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 192:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 197:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 198:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 200:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 201:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 202:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=575, assigning class NO_REGS to secondary r575
  203: r575:DF=r129:DF
      REG_DEAD r129:DF
    Inserting the sec. move after:
  838: xmm1:DF=r575:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 838:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=576, assigning class NO_REGS to secondary r576
  204: r576:DF=r131:DF
      REG_DEAD r131:DF
    Inserting the sec. move after:
  839: xmm0:DF=r576:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 839:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 208:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 209:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 210:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 211:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 215:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 216:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 221:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 222:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 223:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 224:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 225:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 227:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 228:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 229:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=577, assigning class NO_REGS to secondary r577
  230: r577:DF=r136:DF
      REG_DEAD r136:DF
    Inserting the sec. move after:
  840: xmm2:DF=r577:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 840:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=578, assigning class NO_REGS to secondary r578
  231: r578:DF=r138:DF
      REG_DEAD r138:DF
    Inserting the sec. move after:
  841: xmm1:DF=r578:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 841:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=579, assigning class NO_REGS to secondary r579
  233: r579:DF=r139:DF
      REG_DEAD r139:DF
    Inserting the sec. move after:
  842: xmm0:DF=r579:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 842:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 236:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 240:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 241:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 243:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 245:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 249:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 250:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 251:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 252:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 256:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 257:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 258:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 259:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 261:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 262:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 263:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=580, assigning class NO_REGS to secondary r580
  264: r580:DF=r146:DF
      REG_DEAD r146:DF
    Inserting the sec. move after:
  843: xmm2:DF=r580:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 843:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=581, assigning class NO_REGS to secondary r581
  265: r581:DF=r147:DF
      REG_DEAD r147:DF
    Inserting the sec. move after:
  844: xmm1:DF=r581:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 844:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=582, assigning class NO_REGS to secondary r582
  266: r582:DF=r148:DF
      REG_DEAD r148:DF
    Inserting the sec. move after:
  845: xmm0:DF=r582:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 845:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) rzw {*call}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 269:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 270:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 271:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 272:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 275:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 276:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 277:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 280:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 281:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 286:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 287:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 288:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 289:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 291:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 292:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 293:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 298:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 299:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 300:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 301:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 302:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 303:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 304:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 305:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=583, assigning class NO_REGS to secondary r583
  306: r583:DF=r155:DF
      REG_DEAD r155:DF
    Inserting the sec. move after:
  846: xmm2:DF=r583:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 846:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=584, assigning class NO_REGS to secondary r584
  307: r584:DF=r156:DF
      REG_DEAD r156:DF
    Inserting the sec. move after:
  847: xmm1:DF=r584:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 847:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=585, assigning class NO_REGS to secondary r585
  308: r585:DF=r157:DF
      REG_DEAD r157:DF
    Inserting the sec. move after:
  848: xmm0:DF=r585:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 848:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 310:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 311:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 312:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 313:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 314:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 315:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 318:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 319:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 320:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 321:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 322:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 323:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 324:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=586, assigning class NO_REGS to secondary r586
  325: r586:DF=r161:DF
      REG_DEAD r161:DF
    Inserting the sec. move after:
  849: xmm1:DF=r586:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 849:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=587, assigning class NO_REGS to secondary r587
  326: r587:DF=r163:DF
      REG_DEAD r163:DF
    Inserting the sec. move after:
  850: xmm0:DF=r587:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 850:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 330:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 331:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 332:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 333:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 337:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 338:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 341:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 342:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 343:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 344:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 345:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 346:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 347:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 348:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 349:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 350:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 351:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=588, assigning class NO_REGS to secondary r588
  352: r588:DF=r168:DF
      REG_DEAD r168:DF
    Inserting the sec. move after:
  851: xmm2:DF=r588:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 851:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=589, assigning class NO_REGS to secondary r589
  353: r589:DF=r170:DF
      REG_DEAD r170:DF
    Inserting the sec. move after:
  852: xmm1:DF=r589:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 852:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 354:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=590, assigning class NO_REGS to secondary r590
  355: r590:DF=r171:DF
      REG_DEAD r171:DF
    Inserting the sec. move after:
  853: xmm0:DF=r590:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 853:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 358:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 360:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 362:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 363:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 364:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 365:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 366:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 367:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 371:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 373:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 374:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 377:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 378:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 379:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 380:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 381:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 382:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 383:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 384:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 385:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 386:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 387
	 Choosing alt 0 in insn 387:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 388:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 389:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=591, assigning class NO_REGS to secondary r591
  390: r591:DF=r178:DF
      REG_DEAD r178:DF
    Inserting the sec. move after:
  854: xmm2:DF=r591:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 854:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=592, assigning class NO_REGS to secondary r592
  391: r592:DF=r179:DF
      REG_DEAD r179:DF
    Inserting the sec. move after:
  855: xmm1:DF=r592:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 855:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) rzw {*call}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 395:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 396:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 397:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 398:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 401:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 402:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 403:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 407:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 412:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 413:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 414:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 415:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 416:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 417:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 418:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 419:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 424:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 425:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 426:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 427:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 428:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 429:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 430:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 431:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 432:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 433
	 Choosing alt 0 in insn 433:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 434:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 435:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=593, assigning class NO_REGS to secondary r593
  436: r593:DF=r190:DF
      REG_DEAD r190:DF
    Inserting the sec. move after:
  856: xmm2:DF=r593:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 856:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=594, assigning class NO_REGS to secondary r594
  437: r594:DF=r191:DF
      REG_DEAD r191:DF
    Inserting the sec. move after:
  857: xmm1:DF=r594:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 857:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 440:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 441:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 442:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 443:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 444:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 445:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 448:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 449:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 450:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=595, assigning class NO_REGS to secondary r595
  451: r595:DF=r467:DF
      REG_DEAD r467:DF
    Inserting the sec. move after:
  858: xmm0:DF=r595:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 858:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 452:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) rzw {*call}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 455:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 456:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 457:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 458:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 459:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 463:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 464:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 465:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 467:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 468:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 469:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 470:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 471:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 472:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 473:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 474:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 475:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 476:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 477:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 478:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=596, assigning class NO_REGS to secondary r596
  480: r596:DF=r208:DF
      REG_DEAD r208:DF
    Inserting the sec. move after:
  859: xmm1:DF=r596:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 859:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=597, assigning class NO_REGS to secondary r597
  481: r597:DF=r210:DF
      REG_DEAD r210:DF
    Inserting the sec. move after:
  860: xmm0:DF=r597:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 860:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 483:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 485:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 486:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 487:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 488:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 489:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 490:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 491:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 494:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 495:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 496:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 497:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 498:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 499:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 500:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 503:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 504:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 505:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 506:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 507:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
      Creating newreg=598 from oldreg=222, assigning class SSE_REGS to r598
  507: r598:DF=r598:DF*[frame:DI-0x1e8]
      REG_DEAD r221:DF
    Inserting insn reload before:
  861: r598:DF=r221:DF
    Inserting insn reload after:
  862: r222:DF=r598:DF

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 508:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 509:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 510:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 511:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 512:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 513:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 514:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 515:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 516:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 517
	 Choosing alt 0 in insn 517:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 518:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 519:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 520:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 522:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 524:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=599 from oldreg=489, assigning class GENERAL_REGS to r599
  524: {r599:DI=r599:DI<<0x4;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  863: r599:DI=r487:DI
    Inserting insn reload after:
  864: r489:DI=r599:DI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 525:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 526
	 Choosing alt 0 in insn 526:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=600, assigning class NO_REGS to secondary r600
  528: r600:DF=r224:DF
      REG_DEAD r224:DF
    Inserting the sec. move after:
  865: xmm2:DF=r600:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 865:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=601, assigning class NO_REGS to secondary r601
  529: r601:DF=r226:DF
      REG_DEAD r226:DF
    Inserting the sec. move after:
  866: xmm1:DF=r601:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 866:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 532:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 533:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 534:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 535:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 536:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 537:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 538:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 542:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 543:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 544:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 545:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 547:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 549:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=602 from oldreg=497, assigning class GENERAL_REGS to r602
  549: {r602:DI=r602:DI<<0x4;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  867: r602:DI=r495:DI
    Inserting insn reload after:
  868: r497:DI=r602:DI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 551:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 552:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 553:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 554:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 557:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 560:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 561:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 562:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 563:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 565:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 566:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 567:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 568:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 569:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 571:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 572:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 576:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 577:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 578:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 579:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 580:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 586:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 587:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 588:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 589:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
      Creating newreg=603 from oldreg=254, assigning class SSE_REGS to r603
  589: r603:DF=r603:DF+r253:DF
      REG_DEAD r253:DF
      REG_DEAD r252:DF
    Inserting insn reload before:
  869: r603:DF=r252:DF
    Inserting insn reload after:
  870: r254:DF=r603:DF

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 590:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 591:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 592:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 593:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 594:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 595:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 596:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 597
	 Choosing alt 0 in insn 597:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 598:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 599:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 600:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 601:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 604:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 610:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 611:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 612:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 614:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 615:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 616:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (0) rzw {*call}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 620:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 623:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 624:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 625:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 627:  (0) r  (1) rm {*cmpdi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 630:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 634:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 635:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 636:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 637:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 638:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 639:  (0) =a  (1) =&d  (2) 0  (3) rm {*udivmoddi4}
      Creating newreg=604 from oldreg=520, assigning class AREG to r604
  639: {r604:DI=udiv(r604:DI,r274:DI);r519:DI=umod(r604:DI,r274:DI);clobber flags:CC;}
      REG_DEAD r274:DI
      REG_DEAD r272:DI
      REG_UNUSED r520:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  871: r604:DI=r272:DI

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 640:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 641:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =x  (1) r {*floatdidf2_sse_interunit}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 648:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
      Creating newreg=605 from oldreg=523, assigning class GENERAL_REGS to r605
  648: {r605:DI=r605:DI 0>>0x1;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  872: r605:DI=r521:DI
    Inserting insn reload after:
  873: r523:DI=r605:DI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 649:  (0) =r  (1) %0  (2) Z {*anddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 650:  (0) =r  (1) %0  (2) rme {*iordi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 651:  (0) =x  (1) r {*floatdidf2_sse_interunit}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 652:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 654:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 655:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 656:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 657:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 659:  (0) =x  (1) r {*floatdidf2_sse_interunit}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 663:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
      Creating newreg=606 from oldreg=527, assigning class GENERAL_REGS to r606
  663: {r606:DI=r606:DI 0>>0x1;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  874: r606:DI=r277:DI
    Inserting insn reload after:
  875: r527:DI=r606:DI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 664:  (0) =r  (1) %0  (2) Z {*anddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 665:  (0) =r  (1) %0  (2) rme {*iordi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 666:  (0) =x  (1) r {*floatdidf2_sse_interunit}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 667:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 669:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 670:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 671:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 672:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 673:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 674:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 680:  (0) rzw {*call}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 681:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 682:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 683:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 685:  (1) rzw {*call_value}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=620,losers=2,rld_nregs=1
          alt=4,overall=629,losers=3 -- reject
          alt=8,overall=13,losers=2,rld_nregs=1
          alt=9,overall=23,losers=3 -- reject
          alt=10,overall=9,losers=1,rld_nregs=0
      Creating newreg=607, assigning class NO_REGS to secondary r607
  686: r607:DF=xmm0:DF
      REG_DEAD xmm0:DF
    Inserting the sec. move after:
  876: r534:DF=r607:DF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=7,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 876:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 687:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 688:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 689:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 690:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 692:  (1) rzw {*call_value}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=620,losers=2,rld_nregs=1
          alt=4,overall=629,losers=3 -- reject
          alt=8,overall=13,losers=2,rld_nregs=1
          alt=9,overall=23,losers=3 -- reject
          alt=10,overall=9,losers=1,rld_nregs=0
      Creating newreg=608, assigning class NO_REGS to secondary r608
  693: r608:DF=xmm0:DF
      REG_DEAD xmm0:DF
    Inserting the sec. move after:
  877: r536:DF=r608:DF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=7,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 877:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 694:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 695:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 696:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 697:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 698:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 699:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 700:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 701:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 702:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 703:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
      Creating newreg=609 from oldreg=539, assigning class SSE_REGS to r609
  703: r609:DF=r609:DF-r290:DF
      REG_DEAD r290:DF
      REG_DEAD r285:DF
    Inserting insn reload before:
  878: r609:DF=r285:DF
    Inserting insn reload after:
  879: r539:DF=r609:DF

          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=5,overall=615,losers=1 -- reject
          alt=6,overall=615,losers=1 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=17,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 704:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 705:  (0) x  (1) m {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 706:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 707:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 708:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 709:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 710:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 711:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 712:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 713:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
      Creating newreg=610 from oldreg=542, assigning class SSE_REGS to r610
  713: r610:DF=r610:DF-r296:DF
      REG_DEAD r296:DF
      REG_DEAD r291:DF
    Inserting insn reload before:
  880: r610:DF=r291:DF
    Inserting insn reload after:
  881: r542:DF=r610:DF

          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=5,overall=615,losers=1 -- reject
          alt=6,overall=615,losers=1 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=17,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 714:  (0) m  (1) x {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 715:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 716:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 717:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 718:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 719:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 720:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 721:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 722:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 723:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=5,overall=615,losers=1 -- reject
          alt=6,overall=615,losers=1 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=17,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 724:  (0) m  (1) x {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 725:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 726:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 727:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 728:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 729:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 730:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 731:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 732:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 733:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=5,overall=615,losers=1 -- reject
          alt=6,overall=615,losers=1 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=17,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 734:  (0) m  (1) x {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 735:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 736:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 737:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 738:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 739:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 740:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 741:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 743:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 745:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 746:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 747:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 748:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 749:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 750:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 751:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 752:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 753:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 754:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 755:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 756:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 757:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 758:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 759:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 760:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 761:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 762:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 763:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 767:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 768:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 769:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 770:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 771:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 772:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 773:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 774:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 775:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 776:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 777
	 Choosing alt 0 in insn 777:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 778:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 779:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 780:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 781:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 782:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 783:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=611, assigning class NO_REGS to secondary r611
  785: r611:DF=r330:DF
      REG_DEAD r330:DF
    Inserting the sec. move after:
  882: xmm1:DF=r611:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 882:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 788:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 789:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 790:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 791:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 792:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 793:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 794:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 795:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 796:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 797:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 799:  (0) rzw {*call}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 800:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 803:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 804:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 805:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 807:  (0) r  (1) rm {*cmpdi_1}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14

********** Pseudo live ranges #1: **********

  BB 14
  BB 13
   Insn 808: point = 0
   Insn 807: point = 0
   Insn 805: point = 1
   Insn 804: point = 3
   Insn 803: point = 5
  BB 5
   Insn 820: point = 6
   Insn 630: point = 6
  BB 4
   Insn 628: point = 6
   Insn 627: point = 6
   Insn 625: point = 7
   Insn 624: point = 9
   Insn 623: point = 11
  BB 2
   Insn 818: point = 12
   Insn 459: point = 12
   Insn 458: point = 12
   Insn 457: point = 13
   Insn 456: point = 14
   Insn 455: point = 15
   Insn 454: point = 16
   Insn 453: point = 16
   Insn 452: point = 17
   Insn 858: point = 17
	Hard reg 21 is preferable by r595 with profit 1
   Insn 451: point = 18
	Hard reg 21 is preferable by r595 with profit 1
	Hard reg 0 is preferable by r595 with profit 1
   Insn 450: point = 20
   Insn 449: point = 21
   Insn 448: point = 23
   Insn 447: point = 24
   Insn 446: point = 24
   Insn 445: point = 25
   Insn 444: point = 25
   Insn 443: point = 25
   Insn 442: point = 25
   Insn 441: point = 27
   Insn 440: point = 28
   Insn 439: point = 28
   Insn 438: point = 29
   Insn 857: point = 30
	Hard reg 22 is preferable by r594 with profit 1
   Insn 437: point = 31
	Hard reg 22 is preferable by r594 with profit 1
	Hard reg 0 is preferable by r594 with profit 1
   Insn 856: point = 33
	Hard reg 23 is preferable by r593 with profit 1
   Insn 436: point = 34
	Hard reg 23 is preferable by r593 with profit 1
	Hard reg 1 is preferable by r593 with profit 1
   Insn 435: point = 36
   Insn 434: point = 38
   Insn 433: point = 39
   Insn 432: point = 41
   Insn 431: point = 43
   Insn 430: point = 45
   Insn 429: point = 46
   Insn 428: point = 48
   Insn 427: point = 49
   Insn 426: point = 51
   Insn 425: point = 52
   Insn 424: point = 54
   Insn 423: point = 55
   Insn 422: point = 55
   Insn 421: point = 56
   Insn 420: point = 57
   Insn 419: point = 58
   Insn 418: point = 60
   Insn 417: point = 61
   Insn 416: point = 63
   Insn 415: point = 64
   Insn 414: point = 66
   Insn 413: point = 67
   Insn 412: point = 68
   Insn 411: point = 69
   Insn 410: point = 70
   Insn 409: point = 70
   Insn 408: point = 71
   Insn 407: point = 71
   Insn 406: point = 72
   Insn 405: point = 72
   Insn 404: point = 73
   Insn 403: point = 74
   Insn 402: point = 75
   Insn 401: point = 77
   Insn 400: point = 78
   Insn 399: point = 78
   Insn 398: point = 79
   Insn 397: point = 79
   Insn 396: point = 79
   Insn 395: point = 79
   Insn 394: point = 80
   Insn 393: point = 80
   Insn 392: point = 81
   Insn 855: point = 82
	Hard reg 22 is preferable by r592 with profit 1
   Insn 391: point = 83
	Hard reg 22 is preferable by r592 with profit 1
	Hard reg 0 is preferable by r592 with profit 1
   Insn 854: point = 85
	Hard reg 23 is preferable by r591 with profit 1
   Insn 390: point = 86
	Hard reg 23 is preferable by r591 with profit 1
	Hard reg 1 is preferable by r591 with profit 1
   Insn 389: point = 88
   Insn 388: point = 90
   Insn 387: point = 91
   Insn 386: point = 93
   Insn 385: point = 95
   Insn 384: point = 97
   Insn 383: point = 98
   Insn 382: point = 100
   Insn 381: point = 101
   Insn 380: point = 103
   Insn 379: point = 104
   Insn 378: point = 106
   Insn 377: point = 107
   Insn 376: point = 107
   Insn 375: point = 108
   Insn 374: point = 109
   Insn 373: point = 111
   Insn 372: point = 112
   Insn 371: point = 114
   Insn 370: point = 115
   Insn 369: point = 115
   Insn 368: point = 116
   Insn 367: point = 117
   Insn 366: point = 119
   Insn 365: point = 120
   Insn 364: point = 122
   Insn 363: point = 123
   Insn 362: point = 124
   Insn 361: point = 125
   Insn 360: point = 126
   Insn 359: point = 126
   Insn 358: point = 127
   Insn 357: point = 128
   Insn 356: point = 128
   Insn 853: point = 129
	Hard reg 21 is preferable by r590 with profit 1
   Insn 355: point = 130
	Hard reg 21 is preferable by r590 with profit 1
	Hard reg 0 is preferable by r590 with profit 1
   Insn 354: point = 132
   Insn 852: point = 132
	Hard reg 22 is preferable by r589 with profit 1
   Insn 353: point = 133
	Hard reg 22 is preferable by r589 with profit 1
	Hard reg 1 is preferable by r589 with profit 1
   Insn 851: point = 135
	Hard reg 23 is preferable by r588 with profit 1
   Insn 352: point = 136
	Hard reg 23 is preferable by r588 with profit 1
	Hard reg 2 is preferable by r588 with profit 1
   Insn 351: point = 138
   Insn 350: point = 140
   Insn 349: point = 141
   Insn 348: point = 143
   Insn 347: point = 144
   Insn 346: point = 146
   Insn 345: point = 148
   Insn 344: point = 149
   Insn 343: point = 151
   Insn 342: point = 153
   Insn 341: point = 154
   Insn 340: point = 154
   Insn 339: point = 155
   Insn 338: point = 155
   Insn 337: point = 157
   Insn 336: point = 158
   Insn 335: point = 158
   Insn 334: point = 159
   Insn 333: point = 159
   Insn 332: point = 161
   Insn 331: point = 162
   Insn 330: point = 163
   Insn 329: point = 164
   Insn 328: point = 165
   Insn 327: point = 165
   Insn 850: point = 166
	Hard reg 21 is preferable by r587 with profit 1
   Insn 326: point = 167
	Hard reg 21 is preferable by r587 with profit 1
	Hard reg 0 is preferable by r587 with profit 1
   Insn 849: point = 169
	Hard reg 22 is preferable by r586 with profit 1
   Insn 325: point = 170
	Hard reg 22 is preferable by r586 with profit 1
	Hard reg 1 is preferable by r586 with profit 1
   Insn 324: point = 172
   Insn 323: point = 173
   Insn 322: point = 175
   Insn 321: point = 177
   Insn 320: point = 178
   Insn 319: point = 180
   Insn 318: point = 182
   Insn 317: point = 183
   Insn 316: point = 183
   Insn 315: point = 184
   Insn 314: point = 184
   Insn 313: point = 184
   Insn 312: point = 184
   Insn 311: point = 186
   Insn 310: point = 187
   Insn 309: point = 187
   Insn 848: point = 188
	Hard reg 21 is preferable by r585 with profit 1
   Insn 308: point = 189
	Hard reg 21 is preferable by r585 with profit 1
	Hard reg 0 is preferable by r585 with profit 1
   Insn 847: point = 191
	Hard reg 22 is preferable by r584 with profit 1
   Insn 307: point = 192
	Hard reg 22 is preferable by r584 with profit 1
	Hard reg 1 is preferable by r584 with profit 1
   Insn 846: point = 194
	Hard reg 23 is preferable by r583 with profit 1
   Insn 306: point = 195
	Hard reg 23 is preferable by r583 with profit 1
	Hard reg 2 is preferable by r583 with profit 1
   Insn 305: point = 197
   Insn 304: point = 199
   Insn 303: point = 200
   Insn 302: point = 202
   Insn 301: point = 203
   Insn 300: point = 205
   Insn 299: point = 206
   Insn 298: point = 208
   Insn 297: point = 209
   Insn 296: point = 209
   Insn 295: point = 210
   Insn 294: point = 211
   Insn 293: point = 212
   Insn 292: point = 214
   Insn 291: point = 215
   Insn 290: point = 217
   Insn 289: point = 218
   Insn 288: point = 220
   Insn 287: point = 221
   Insn 286: point = 222
   Insn 285: point = 223
   Insn 284: point = 224
   Insn 283: point = 224
   Insn 282: point = 225
   Insn 281: point = 225
   Insn 280: point = 226
   Insn 279: point = 226
   Insn 278: point = 227
   Insn 277: point = 228
   Insn 276: point = 229
   Insn 275: point = 231
   Insn 274: point = 232
   Insn 273: point = 232
   Insn 272: point = 233
   Insn 271: point = 233
   Insn 270: point = 233
   Insn 269: point = 233
   Insn 268: point = 234
   Insn 267: point = 234
   Insn 845: point = 235
	Hard reg 21 is preferable by r582 with profit 1
   Insn 266: point = 236
	Hard reg 21 is preferable by r582 with profit 1
	Hard reg 0 is preferable by r582 with profit 1
   Insn 844: point = 238
	Hard reg 22 is preferable by r581 with profit 1
   Insn 265: point = 239
	Hard reg 22 is preferable by r581 with profit 1
	Hard reg 1 is preferable by r581 with profit 1
   Insn 843: point = 241
	Hard reg 23 is preferable by r580 with profit 1
   Insn 264: point = 242
	Hard reg 23 is preferable by r580 with profit 1
	Hard reg 2 is preferable by r580 with profit 1
   Insn 263: point = 244
   Insn 262: point = 246
   Insn 261: point = 247
   Insn 260: point = 249
   Insn 259: point = 250
   Insn 258: point = 252
   Insn 257: point = 253
   Insn 256: point = 255
   Insn 255: point = 256
   Insn 254: point = 256
   Insn 253: point = 257
   Insn 252: point = 258
   Insn 251: point = 260
   Insn 250: point = 261
   Insn 249: point = 263
   Insn 248: point = 264
   Insn 247: point = 264
   Insn 246: point = 265
   Insn 245: point = 266
   Insn 244: point = 268
   Insn 243: point = 269
   Insn 242: point = 271
   Insn 241: point = 272
   Insn 240: point = 273
   Insn 239: point = 274
   Insn 238: point = 275
   Insn 237: point = 275
   Insn 236: point = 276
   Insn 235: point = 277
   Insn 234: point = 277
   Insn 842: point = 278
	Hard reg 21 is preferable by r579 with profit 1
   Insn 233: point = 279
	Hard reg 21 is preferable by r579 with profit 1
	Hard reg 0 is preferable by r579 with profit 1
   Insn 232: point = 281
   Insn 841: point = 281
	Hard reg 22 is preferable by r578 with profit 1
   Insn 231: point = 282
	Hard reg 22 is preferable by r578 with profit 1
	Hard reg 1 is preferable by r578 with profit 1
   Insn 840: point = 284
	Hard reg 23 is preferable by r577 with profit 1
   Insn 230: point = 285
	Hard reg 23 is preferable by r577 with profit 1
	Hard reg 2 is preferable by r577 with profit 1
   Insn 229: point = 287
   Insn 228: point = 289
   Insn 227: point = 290
   Insn 226: point = 292
   Insn 225: point = 293
   Insn 224: point = 295
   Insn 223: point = 297
   Insn 222: point = 298
   Insn 221: point = 300
   Insn 220: point = 302
   Insn 219: point = 303
   Insn 218: point = 303
   Insn 217: point = 304
   Insn 216: point = 304
   Insn 215: point = 306
   Insn 214: point = 307
   Insn 213: point = 307
   Insn 212: point = 308
   Insn 211: point = 308
   Insn 210: point = 310
   Insn 209: point = 311
   Insn 208: point = 312
   Insn 207: point = 313
   Insn 206: point = 314
   Insn 205: point = 314
   Insn 839: point = 315
	Hard reg 21 is preferable by r576 with profit 1
   Insn 204: point = 316
	Hard reg 21 is preferable by r576 with profit 1
	Hard reg 0 is preferable by r576 with profit 1
   Insn 838: point = 318
	Hard reg 22 is preferable by r575 with profit 1
   Insn 203: point = 319
	Hard reg 22 is preferable by r575 with profit 1
	Hard reg 1 is preferable by r575 with profit 1
   Insn 202: point = 321
   Insn 201: point = 322
   Insn 200: point = 324
   Insn 199: point = 326
   Insn 198: point = 327
   Insn 197: point = 329
   Insn 196: point = 331
   Insn 195: point = 332
   Insn 194: point = 332
   Insn 193: point = 333
   Insn 192: point = 334
   Insn 191: point = 335
   Insn 190: point = 337
   Insn 189: point = 338
   Insn 188: point = 338
   Insn 187: point = 339
   Insn 186: point = 340
   Insn 837: point = 341
	Hard reg 23 is preferable by r574 with profit 1
   Insn 185: point = 342
	Hard reg 23 is preferable by r574 with profit 1
	Hard reg 0 is preferable by r574 with profit 1
   Insn 184: point = 344
   Insn 183: point = 346
   Insn 182: point = 347
   Insn 181: point = 349
   Insn 180: point = 351
   Insn 179: point = 352
   Insn 178: point = 354
   Insn 177: point = 356
   Insn 176: point = 357
   Insn 175: point = 359
   Insn 836: point = 360
	Hard reg 22 is preferable by r573 with profit 1
   Insn 174: point = 362
   Insn 835: point = 362
	Hard reg 22 is preferable by r573 with profit 1
	Hard reg 21 is preferable by r573 with profit 1
   Insn 173: point = 364
   Insn 172: point = 366
   Insn 171: point = 368
   Insn 170: point = 369
   Insn 169: point = 371
   Insn 168: point = 373
   Insn 167: point = 374
   Insn 166: point = 376
   Insn 165: point = 377
   Insn 164: point = 379
   Insn 163: point = 380
   Insn 162: point = 380
   Insn 161: point = 381
   Insn 160: point = 381
   Insn 159: point = 383
   Insn 158: point = 384
   Insn 157: point = 384
   Insn 156: point = 385
   Insn 155: point = 385
   Insn 154: point = 387
   Insn 153: point = 388
   Insn 152: point = 388
   Insn 151: point = 389
   Insn 150: point = 390
   Insn 149: point = 392
   Insn 148: point = 393
   Insn 147: point = 395
   Insn 146: point = 396
   Insn 145: point = 397
   Insn 144: point = 398
   Insn 143: point = 399
   Insn 142: point = 399
   Insn 834: point = 400
	Hard reg 21 is preferable by r572 with profit 1
   Insn 141: point = 401
	Hard reg 21 is preferable by r572 with profit 1
	Hard reg 0 is preferable by r572 with profit 1
   Insn 833: point = 403
	Hard reg 22 is preferable by r571 with profit 1
   Insn 140: point = 404
	Hard reg 22 is preferable by r571 with profit 1
	Hard reg 1 is preferable by r571 with profit 1
   Insn 139: point = 406
   Insn 138: point = 407
   Insn 137: point = 408
   Insn 136: point = 409
   Insn 135: point = 410
   Insn 134: point = 412
   Insn 133: point = 414
   Insn 132: point = 416
   Insn 131: point = 418
   Insn 130: point = 419
   Insn 129: point = 421
   Insn 128: point = 423
   Insn 127: point = 424
   Insn 126: point = 424
   Insn 125: point = 425
   Insn 124: point = 426
   Insn 123: point = 427
   Insn 122: point = 429
   Insn 121: point = 430
   Insn 120: point = 430
   Insn 119: point = 431
   Insn 118: point = 432
   Insn 832: point = 433
	Hard reg 23 is preferable by r570 with profit 1
   Insn 117: point = 434
	Hard reg 23 is preferable by r570 with profit 1
	Hard reg 0 is preferable by r570 with profit 1
   Insn 116: point = 436
   Insn 115: point = 438
   Insn 114: point = 439
   Insn 113: point = 441
   Insn 112: point = 443
   Insn 111: point = 444
   Insn 110: point = 446
   Insn 109: point = 448
   Insn 108: point = 449
   Insn 107: point = 451
   Insn 106: point = 452
   Insn 105: point = 454
   Insn 104: point = 456
   Insn 103: point = 458
   Insn 102: point = 459
   Insn 101: point = 461
   Insn 100: point = 463
   Insn 99: point = 464
   Insn 98: point = 466
   Insn 97: point = 467
   Insn 96: point = 469
   Insn 95: point = 470
   Insn 94: point = 470
   Insn 93: point = 471
   Insn 92: point = 471
   Insn 91: point = 473
   Insn 90: point = 474
   Insn 89: point = 474
   Insn 88: point = 475
   Insn 87: point = 475
   Insn 86: point = 477
   Insn 85: point = 478
   Insn 84: point = 478
   Insn 83: point = 479
   Insn 82: point = 480
   Insn 81: point = 482
   Insn 80: point = 483
   Insn 79: point = 485
   Insn 78: point = 486
   Insn 77: point = 487
   Insn 76: point = 488
   Insn 75: point = 489
   Insn 74: point = 489
   Insn 831: point = 490
	Hard reg 21 is preferable by r569 with profit 1
   Insn 73: point = 491
	Hard reg 21 is preferable by r569 with profit 1
	Hard reg 0 is preferable by r569 with profit 1
   Insn 830: point = 493
	Hard reg 22 is preferable by r568 with profit 1
   Insn 72: point = 494
	Hard reg 22 is preferable by r568 with profit 1
	Hard reg 1 is preferable by r568 with profit 1
   Insn 71: point = 496
   Insn 70: point = 497
   Insn 69: point = 498
   Insn 68: point = 499
   Insn 67: point = 500
   Insn 66: point = 502
   Insn 65: point = 504
   Insn 64: point = 506
   Insn 63: point = 508
   Insn 62: point = 509
   Insn 61: point = 511
   Insn 60: point = 513
   Insn 59: point = 514
   Insn 58: point = 514
   Insn 57: point = 515
   Insn 56: point = 516
   Insn 55: point = 517
   Insn 54: point = 519
   Insn 53: point = 520
   Insn 52: point = 522
   Insn 51: point = 524
   Insn 50: point = 526
   Insn 49: point = 528
   Insn 48: point = 529
   Insn 47: point = 531
   Insn 46: point = 533
   Insn 45: point = 534
   Insn 44: point = 536
   Insn 43: point = 538
   Insn 42: point = 539
   Insn 41: point = 540
   Insn 40: point = 541
   Insn 39: point = 541
   Insn 38: point = 542
   Insn 37: point = 543
   Insn 36: point = 545
   Insn 35: point = 546
   Insn 34: point = 548
   Insn 33: point = 549
   Insn 32: point = 549
   Insn 829: point = 550
	Hard reg 21 is preferable by r567 with profit 1
   Insn 31: point = 551
	Hard reg 21 is preferable by r567 with profit 1
	Hard reg 0 is preferable by r567 with profit 1
   Insn 828: point = 553
	Hard reg 22 is preferable by r566 with profit 1
   Insn 30: point = 554
	Hard reg 22 is preferable by r566 with profit 1
	Hard reg 1 is preferable by r566 with profit 1
   Insn 827: point = 556
	Hard reg 23 is preferable by r565 with profit 1
   Insn 29: point = 557
	Hard reg 23 is preferable by r565 with profit 1
	Hard reg 2 is preferable by r565 with profit 1
   Insn 826: point = 559
	Hard reg 24 is preferable by r564 with profit 1
   Insn 28: point = 560
	Hard reg 24 is preferable by r564 with profit 1
	Hard reg 4 is preferable by r564 with profit 1
   Insn 27: point = 562
   Insn 26: point = 564
   Insn 25: point = 565
   Insn 24: point = 567
   Insn 23: point = 568
   Insn 22: point = 570
   Insn 21: point = 572
   Insn 20: point = 573
   Insn 19: point = 575
   Insn 18: point = 577
   Insn 17: point = 578
   Insn 16: point = 580
   Insn 15: point = 582
   Insn 14: point = 583
   Insn 13: point = 584
   Insn 12: point = 585
   Insn 11: point = 586
   Insn 10: point = 586
   Insn 9: point = 587
   Insn 5: point = 588
   Insn 4: point = 588
   Insn 3: point = 588
   Insn 2: point = 588
  BB 3
   Insn 620: point = 588
   Insn 619: point = 588
   Insn 618: point = 588
   Insn 617: point = 589
   Insn 616: point = 590
   Insn 615: point = 591
   Insn 614: point = 593
   Insn 613: point = 595
   Insn 612: point = 597
   Insn 611: point = 598
   Insn 610: point = 600
   Insn 609: point = 601
   Insn 608: point = 601
   Insn 607: point = 602
   Insn 606: point = 603
   Insn 605: point = 604
   Insn 604: point = 605
   Insn 603: point = 607
   Insn 602: point = 609
   Insn 601: point = 611
   Insn 600: point = 612
   Insn 599: point = 614
   Insn 598: point = 615
   Insn 597: point = 617
   Insn 596: point = 619
   Insn 595: point = 620
   Insn 594: point = 622
   Insn 593: point = 623
   Insn 592: point = 625
   Insn 591: point = 626
   Insn 590: point = 628
   Insn 870: point = 629
	Hard reg 23 is preferable by r603 with profit 1
   Insn 589: point = 631
   Insn 869: point = 632
	Hard reg 23 is preferable by r603 with profit 1
	Hard reg 22 is preferable by r603 with profit 1
   Insn 588: point = 634
   Insn 587: point = 635
   Insn 586: point = 637
   Insn 585: point = 638
   Insn 584: point = 638
   Insn 583: point = 639
   Insn 582: point = 640
   Insn 581: point = 641
   Insn 580: point = 642
   Insn 579: point = 643
   Insn 578: point = 644
   Insn 577: point = 645
   Insn 576: point = 647
   Insn 575: point = 648
   Insn 574: point = 648
   Insn 573: point = 649
   Insn 572: point = 650
   Insn 571: point = 652
   Insn 570: point = 654
   Insn 569: point = 656
   Insn 568: point = 657
   Insn 567: point = 659
   Insn 566: point = 660
   Insn 565: point = 662
   Insn 564: point = 664
   Insn 563: point = 666
   Insn 562: point = 667
   Insn 561: point = 669
   Insn 560: point = 670
   Insn 559: point = 670
   Insn 558: point = 671
   Insn 557: point = 672
   Insn 556: point = 674
   Insn 555: point = 676
   Insn 554: point = 678
   Insn 553: point = 679
   Insn 552: point = 681
   Insn 551: point = 682
   Insn 550: point = 684
   Insn 868: point = 686
	Hard reg 2 is preferable by r602 with profit 1
   Insn 549: point = 688
   Insn 867: point = 688
   Insn 548: point = 689
   Insn 547: point = 691
   Insn 546: point = 693
   Insn 545: point = 695
   Insn 544: point = 696
   Insn 543: point = 698
   Insn 542: point = 699
   Insn 541: point = 700
   Insn 540: point = 701
   Insn 539: point = 701
   Insn 538: point = 702
   Insn 537: point = 703
   Insn 536: point = 705
   Insn 535: point = 707
   Insn 534: point = 708
   Insn 533: point = 710
   Insn 532: point = 711
   Insn 531: point = 711
   Insn 530: point = 712
   Insn 866: point = 713
	Hard reg 22 is preferable by r601 with profit 1
   Insn 529: point = 714
	Hard reg 22 is preferable by r601 with profit 1
	Hard reg 1 is preferable by r601 with profit 1
   Insn 865: point = 716
	Hard reg 23 is preferable by r600 with profit 1
   Insn 528: point = 717
	Hard reg 23 is preferable by r600 with profit 1
	Hard reg 2 is preferable by r600 with profit 1
   Insn 527: point = 719
   Insn 526: point = 720
   Insn 525: point = 722
   Insn 864: point = 724
	Hard reg 5 is preferable by r599 with profit 1
   Insn 524: point = 726
   Insn 863: point = 726
   Insn 523: point = 727
   Insn 522: point = 729
   Insn 521: point = 731
   Insn 520: point = 733
   Insn 519: point = 734
   Insn 518: point = 736
   Insn 517: point = 737
   Insn 516: point = 739
   Insn 515: point = 740
   Insn 514: point = 742
   Insn 513: point = 743
   Insn 512: point = 745
   Insn 511: point = 747
   Insn 510: point = 748
   Insn 509: point = 750
   Insn 508: point = 752
   Insn 862: point = 753
	Hard reg 22 is preferable by r598 with profit 1
   Insn 507: point = 755
   Insn 861: point = 755
	Hard reg 22 is preferable by r598 with profit 1
	Hard reg 21 is preferable by r598 with profit 1
   Insn 506: point = 757
   Insn 505: point = 759
   Insn 504: point = 761
   Insn 503: point = 762
   Insn 502: point = 762
   Insn 501: point = 763
   Insn 500: point = 763
   Insn 499: point = 765
   Insn 498: point = 767
   Insn 497: point = 769
   Insn 496: point = 770
   Insn 495: point = 772
   Insn 494: point = 773
   Insn 493: point = 773
   Insn 492: point = 774
   Insn 491: point = 774
   Insn 490: point = 776
   Insn 489: point = 778
   Insn 488: point = 780
   Insn 487: point = 781
   Insn 486: point = 783
   Insn 485: point = 784
   Insn 484: point = 785
   Insn 483: point = 786
   Insn 482: point = 786
   Insn 860: point = 787
	Hard reg 21 is preferable by r597 with profit 1
   Insn 481: point = 788
	Hard reg 21 is preferable by r597 with profit 1
	Hard reg 0 is preferable by r597 with profit 1
   Insn 859: point = 790
	Hard reg 22 is preferable by r596 with profit 1
   Insn 480: point = 791
	Hard reg 22 is preferable by r596 with profit 1
	Hard reg 1 is preferable by r596 with profit 1
   Insn 479: point = 793
   Insn 478: point = 794
   Insn 477: point = 795
   Insn 476: point = 797
   Insn 475: point = 799
   Insn 474: point = 800
   Insn 473: point = 802
   Insn 472: point = 804
   Insn 471: point = 805
   Insn 470: point = 807
   Insn 469: point = 809
   Insn 468: point = 811
   Insn 467: point = 812
   Insn 466: point = 814
   Insn 465: point = 816
   Insn 464: point = 817
   Insn 463: point = 819
  BB 12
   Insn 800: point = 820
   Insn 799: point = 820
   Insn 798: point = 820
   Insn 797: point = 821
   Insn 796: point = 821
   Insn 795: point = 821
   Insn 794: point = 821
   Insn 793: point = 823
   Insn 792: point = 825
   Insn 791: point = 827
   Insn 790: point = 828
   Insn 789: point = 830
   Insn 788: point = 831
   Insn 787: point = 831
   Insn 786: point = 832
   Insn 882: point = 833
	Hard reg 22 is preferable by r611 with profit 1
   Insn 785: point = 834
	Hard reg 22 is preferable by r611 with profit 1
	Hard reg 0 is preferable by r611 with profit 1
   Insn 784: point = 836
   Insn 783: point = 837
   Insn 782: point = 839
   Insn 781: point = 841
   Insn 780: point = 843
   Insn 779: point = 844
   Insn 778: point = 846
   Insn 777: point = 847
   Insn 776: point = 849
   Insn 775: point = 850
   Insn 774: point = 852
   Insn 773: point = 853
   Insn 772: point = 855
   Insn 771: point = 856
   Insn 770: point = 858
   Insn 769: point = 859
   Insn 768: point = 861
   Insn 767: point = 862
   Insn 766: point = 862
   Insn 765: point = 863
   Insn 764: point = 864
   Insn 763: point = 865
   Insn 762: point = 867
   Insn 761: point = 869
   Insn 760: point = 871
   Insn 759: point = 872
   Insn 758: point = 874
   Insn 757: point = 875
   Insn 756: point = 877
   Insn 755: point = 879
   Insn 754: point = 881
   Insn 753: point = 882
   Insn 752: point = 884
   Insn 751: point = 885
   Insn 750: point = 887
   Insn 749: point = 889
   Insn 748: point = 891
   Insn 747: point = 892
   Insn 746: point = 894
   Insn 745: point = 895
   Insn 744: point = 896
   Insn 743: point = 897
   Insn 742: point = 897
   Insn 741: point = 898
   Insn 740: point = 898
   Insn 739: point = 899
   Insn 738: point = 901
   Insn 737: point = 903
   Insn 736: point = 904
   Insn 735: point = 906
   Insn 734: point = 907
   Insn 733: point = 908
   Insn 732: point = 910
   Insn 731: point = 911
   Insn 730: point = 913
   Insn 729: point = 915
   Insn 728: point = 916
   Insn 727: point = 918
   Insn 726: point = 920
   Insn 725: point = 922
   Insn 724: point = 923
   Insn 723: point = 924
   Insn 722: point = 926
   Insn 721: point = 927
   Insn 720: point = 929
   Insn 719: point = 931
   Insn 718: point = 932
   Insn 717: point = 934
   Insn 716: point = 936
   Insn 715: point = 938
   Insn 714: point = 939
   Insn 881: point = 940
	Hard reg 21 is preferable by r610 with profit 1
   Insn 713: point = 942
   Insn 880: point = 943
	Hard reg 21 is preferable by r610 with profit 1
	Hard reg 22 is preferable by r610 with profit 1
   Insn 712: point = 945
   Insn 711: point = 947
   Insn 710: point = 949
   Insn 709: point = 950
   Insn 708: point = 952
   Insn 707: point = 954
   Insn 706: point = 956
   Insn 705: point = 957
   Insn 704: point = 958
   Insn 879: point = 959
	Hard reg 21 is preferable by r609 with profit 1
   Insn 703: point = 961
   Insn 878: point = 962
	Hard reg 21 is preferable by r609 with profit 1
	Hard reg 22 is preferable by r609 with profit 1
   Insn 702: point = 964
   Insn 701: point = 966
   Insn 700: point = 968
   Insn 699: point = 969
   Insn 698: point = 971
   Insn 697: point = 973
   Insn 696: point = 975
   Insn 695: point = 976
   Insn 694: point = 977
   Insn 877: point = 978
	Hard reg 0 is preferable by r608 with profit 1
   Insn 693: point = 980
	Hard reg 0 is preferable by r608 with profit 1
	Hard reg 21 is preferable by r608 with profit 1
   Insn 692: point = 981
   Insn 691: point = 981
   Insn 690: point = 982
   Insn 689: point = 984
   Insn 688: point = 985
   Insn 687: point = 986
   Insn 876: point = 987
	Hard reg 0 is preferable by r607 with profit 1
   Insn 686: point = 989
	Hard reg 0 is preferable by r607 with profit 1
	Hard reg 21 is preferable by r607 with profit 1
   Insn 685: point = 990
   Insn 684: point = 990
   Insn 683: point = 991
   Insn 682: point = 993
   Insn 681: point = 994
   Insn 680: point = 995
   Insn 679: point = 995
   Insn 678: point = 996
   Insn 677: point = 997
   Insn 676: point = 998
   Insn 675: point = 999
   Insn 674: point = 1000
   Insn 673: point = 1001
   Insn 672: point = 1002
   Insn 671: point = 1003
   Insn 670: point = 1005
   Insn 669: point = 1006
  BB 10
   Insn 824: point = 1009
   Insn 659: point = 1009
  BB 11
   Insn 667: point = 1012
   Insn 666: point = 1014
   Insn 665: point = 1016
   Insn 664: point = 1017
   Insn 875: point = 1019
	Hard reg 1 is preferable by r606 with profit 1
   Insn 663: point = 1021
   Insn 874: point = 1021
  BB 9
   Insn 658: point = 1023
   Insn 657: point = 1023
   Insn 656: point = 1023
   Insn 655: point = 1025
   Insn 654: point = 1027
  BB 7
   Insn 822: point = 1029
   Insn 644: point = 1029
  BB 8
   Insn 652: point = 1032
   Insn 651: point = 1034
   Insn 650: point = 1036
   Insn 649: point = 1037
   Insn 873: point = 1039
	Hard reg 1 is preferable by r605 with profit 1
   Insn 648: point = 1041
   Insn 872: point = 1041
  BB 6
   Insn 643: point = 1043
   Insn 642: point = 1043
   Insn 641: point = 1043
   Insn 640: point = 1044
   Insn 639: point = 1045
   Insn 871: point = 1047
	Hard reg 1 is preferable by r604 with profit 1
   Insn 638: point = 1049
   Insn 637: point = 1051
   Insn 636: point = 1053
   Insn 635: point = 1054
   Insn 634: point = 1056
 r59: [583..585]
 r60: [579..580]
 r61: [561..578]
 r62: [574..575]
 r63: [558..573]
 r64: [569..570]
 r65: [555..568]
 r66: [552..565]
 r67: [549..562]
 r68: [542..546]
 r69: [541..543]
 r70: [535..536]
 r71: [521..534]
 r72: [530..531]
 r73: [523..529]
 r74: [525..526]
 r75: [523..524]
 r76: [521..522]
 r77: [518..520]
 r78: [510..511]
 r79: [503..509]
 r80: [505..506]
 r81: [503..504]
 r82: [501..502]
 r83: [496..500]
 r84: [486..488]
 r85: [479..483]
 r86: [478..480]
 r87: [474..475]
 r88: [470..471]
 r89: [435..467]
 r90: [453..464]
 r91: [460..461]
 r92: [457..459]
 r93: [455..456]
 r94: [453..454]
 r95: [432..452]
 r96: [440..449]
 r97: [445..446]
 r98: [442..444]
 r99: [440..441]
 r100: [431..439]
 r101: [430..436]
 r102: [424..427]
 r103: [420..421]
 r104: [413..419]
 r105: [415..416]
 r106: [413..414]
 r107: [411..412]
 r108: [406..410]
 r109: [396..398]
 r110: [389..393]
 r111: [388..390]
 r112: [384..385]
 r113: [380..381]
 r114: [343..377]
 r115: [365..374]
 r116: [370..371]
 r117: [367..369]
 r118: [365..366]
 r119: [363..364]
 r120: [340..360]
 r121: [348..357]
 r122: [353..354]
 r123: [350..352]
 r124: [348..349]
 r125: [339..347]
 r126: [338..344]
 r127: [332..335]
 r128: [328..329]
 r129: [320..327]
 r130: [323..324]
 r131: [317..322]
 r132: [311..313]
 r133: [307..308]
 r134: [303..304]
 r135: [299..300]
 r136: [286..298]
 r137: [294..295]
 r138: [283..293]
 r139: [280..290]
 r140: [277..287]
 r141: [272..274]
 r142: [265..269]
 r143: [264..266]
 r144: [257..261]
 r145: [256..258]
 r146: [243..253]
 r147: [240..250]
 r148: [237..247]
 r149: [234..244]
 r150: [226..229]
 r151: [221..223]
 r152: [211..218]
 r153: [210..215]
 r154: [209..212]
 r155: [196..206]
 r156: [193..203]
 r157: [190..200]
 r158: [187..197]
 r159: [183..184]
 r160: [179..180]
 r161: [171..178]
 r162: [174..175]
 r163: [168..173]
 r164: [162..164]
 r165: [158..159]
 r166: [154..155]
 r167: [150..151]
 r168: [137..149]
 r169: [145..146]
 r170: [134..144]
 r171: [131..141]
 r172: [128..138]
 r173: [123..125]
 r174: [116..120]
 r175: [115..117]
 r176: [108..112]
 r177: [107..109]
 r178: [87..104]
 r179: [84..101]
 r180: [92..98]
 r181: [94..95]
 r182: [92..93]
 r183: [81..91]
 r184: [80..88]
 r185: [72..75]
 r186: [67..69]
 r187: [57..64]
 r188: [56..61]
 r189: [55..58]
 r190: [35..52]
 r191: [32..49]
 r192: [40..46]
 r193: [42..43]
 r194: [40..41]
 r195: [29..39]
 r196: [28..36]
 r197: [24..25]
 r198: [16..21]
 r199: [8..9]
 r200: [6..7]
 r201: [813..817]
 r202: [813..814]
 r203: [784..812]
 r204: [808..809]
 r205: [806..807]
 r206: [793..805]
 r207: [801..802]
 r208: [792..800]
 r209: [796..797]
 r210: [789..795]
 r211: [784..785]
 r212: [777..781]
 r213: [777..778]
 r214: [775..776]
 r215: [773..774]
 r216: [766..770]
 r217: [766..767]
 r218: [764..765]
 r219: [762..763]
 r220: [758..759]
 r221: [756..757]
 r222: [719..753]
 r223: [749..750]
 r224: [718..748]
 r225: [744..745]
 r226: [715..743]
 r227: [738..740]
 r228: [712..737]
 r229: [721..734]
 r230: [721..722]
 r231: [711..720]
 r232: [704..708]
 r233: [704..705]
 r234: [699..703]
 r235: [699..700]
 r236: [683..696]
 r237: [683..684]
 r238: [671..682]
 r239: [675..679]
 r240: [675..676]
 r241: [673..674]
 r242: [670..672]
 r243: [663..667]
 r244: [663..664]
 r245: [661..662]
 r246: [649..660]
 r247: [653..657]
 r248: [653..654]
 r249: [651..652]
 r250: [648..650]
 r251: [638..645]
 r252: [633..635]
 r253: [631..634]
 r254: [604..629]
 r255: [624..626]
 r256: [624..625]
 r257: [603..623]
 r258: [618..620]
 r259: [618..619]
 r260: [616..617]
 r261: [602..615]
 r262: [608..612]
 r263: [608..609]
 r264: [606..607]
 r265: [601..605]
 r266: [594..598]
 r267: [594..595]
 r268: [592..593]
 r269: [588..591]
 r270: [2..3]
 r271: [0..1]
 r272: [1048..1054]
 r273: [1050..1051]
 r274: [1046..1049]
 r275: [1032..1032] [1007..1029]
 r276: [1024..1025]
 r277: [1018..1023] [1010..1011]
 r278: [1012..1012] [1007..1009]
 r279: [996..1006]
 r280: [995..1003]
 r281: [992..994]
 r282: [990..991]
 r283: [983..985]
 r284: [981..982]
 r285: [963..976]
 r286: [972..973]
 r287: [970..971]
 r288: [967..969]
 r289: [965..966]
 r290: [961..964]
 r291: [944..957]
 r292: [953..954]
 r293: [951..952]
 r294: [948..950]
 r295: [946..947]
 r296: [942..945]
 r297: [935..936]
 r298: [933..934]
 r299: [930..932]
 r300: [928..929]
 r301: [925..927]
 r302: [925..926]
 r303: [923..924]
 r304: [919..920]
 r305: [917..918]
 r306: [914..916]
 r307: [912..913]
 r308: [909..911]
 r309: [909..910]
 r310: [907..908]
 r311: [900..904]
 r312: [900..901]
 r313: [895..899]
 r314: [895..896]
 r315: [888..892]
 r316: [888..889]
 r317: [886..887]
 r318: [864..885]
 r319: [878..882]
 r320: [878..879]
 r321: [876..877]
 r322: [863..875]
 r323: [868..872]
 r324: [868..869]
 r325: [866..867]
 r326: [862..865]
 r327: [857..859]
 r328: [857..858]
 r329: [836..856]
 r330: [835..853]
 r331: [848..850]
 r332: [848..849]
 r333: [832..847]
 r334: [840..844]
 r335: [840..841]
 r336: [838..839]
 r337: [831..837]
 r338: [824..828]
 r339: [824..825]
 r340: [822..823]
 r341: [820..821]
 r342: [586..587]
 r343: [583..584]
 r344: [581..582]
 r345: [576..577]
 r346: [571..572]
 r347: [566..567]
 r348: [563..564]
 r349: [547..548]
 r350: [544..545]
 r351: [539..540]
 r352: [537..538]
 r353: [532..533]
 r354: [527..528]
 r355: [516..517]
 r356: [518..519]
 r357: [514..515]
 r358: [512..513]
 r359: [507..508]
 r360: [495..499]
 r361: [492..498]
 r362: [489..497]
 r363: [486..487]
 r364: [484..485]
 r365: [481..482]
 r366: [476..477]
 r367: [472..473]
 r368: [468..469]
 r369: [465..466]
 r370: [462..463]
 r371: [457..458]
 r372: [450..451]
 r373: [447..448]
 r374: [442..443]
 r375: [437..438]
 r376: [428..429]
 r377: [425..426]
 r378: [422..423]
 r379: [417..418]
 r380: [405..409]
 r381: [402..408]
 r382: [399..407]
 r383: [396..397]
 r384: [394..395]
 r385: [391..392]
 r386: [386..387]
 r387: [382..383]
 r388: [378..379]
 r389: [375..376]
 r390: [372..373]
 r391: [367..368]
 r392: [358..359]
 r393: [355..356]
 r394: [350..351]
 r395: [345..346]
 r396: [336..337]
 r397: [333..334]
 r398: [330..331]
 r399: [325..326]
 r400: [314..321]
 r401: [311..312]
 r402: [309..310]
 r403: [305..306]
 r404: [301..302]
 r405: [296..297]
 r406: [291..292]
 r407: [288..289]
 r408: [275..276]
 r409: [272..273]
 r410: [270..271]
 r411: [267..268]
 r412: [262..263]
 r413: [259..260]
 r414: [254..255]
 r415: [251..252]
 r416: [248..249]
 r417: [245..246]
 r418: [232..233]
 r419: [230..231]
 r420: [227..228]
 r421: [224..225]
 r422: [221..222]
 r423: [219..220]
 r424: [216..217]
 r425: [213..214]
 r426: [207..208]
 r427: [204..205]
 r428: [201..202]
 r429: [198..199]
 r430: [185..186]
 r431: [181..182]
 r432: [176..177]
 r433: [165..172]
 r434: [162..163]
 r435: [160..161]
 r436: [156..157]
 r437: [152..153]
 r438: [147..148]
 r439: [142..143]
 r440: [139..140]
 r441: [126..127]
 r442: [123..124]
 r443: [121..122]
 r444: [118..119]
 r445: [113..114]
 r446: [110..111]
 r447: [105..106]
 r448: [102..103]
 r449: [99..100]
 r450: [96..97]
 r451: [89..90]
 r452: [78..79]
 r453: [76..77]
 r454: [73..74]
 r455: [70..71]
 r456: [67..68]
 r457: [65..66]
 r458: [62..63]
 r459: [59..60]
 r460: [53..54]
 r461: [50..51]
 r462: [47..48]
 r463: [44..45]
 r464: [37..38]
 r465: [26..27]
 r466: [22..23]
 r467: [19..20]
 r468: [14..15]
 r469: [12..13]
 r470: [818..819]
 r471: [815..816]
 r472: [810..811]
 r473: [803..804]
 r474: [798..799]
 r475: [786..794]
 r476: [782..783]
 r477: [779..780]
 r478: [771..772]
 r479: [768..769]
 r480: [760..761]
 r481: [751..752]
 r482: [746..747]
 r483: [741..742]
 r484: [738..739]
 r485: [735..736]
 r486: [732..733]
 r487: [730..731] [723..727]
 r488: [728..729]
 r489: [723..724]
 r490: [709..710]
 r491: [706..707]
 r492: [701..702]
 r493: [697..698]
 r494: [694..695]
 r495: [692..693] [685..689]
 r496: [690..691]
 r497: [685..686]
 r498: [680..681]
 r499: [677..678]
 r500: [668..669]
 r501: [665..666]
 r502: [658..659]
 r503: [655..656]
 r504: [646..647]
 r505: [641..644]
 r506: [640..643]
 r507: [639..642]
 r508: [636..637]
 r509: [627..628]
 r510: [621..622]
 r511: [613..614]
 r512: [610..611]
 r513: [599..600]
 r514: [596..597]
 r515: [589..590]
 r516: [10..11]
 r517: [1055..1056]
 r518: [1052..1053]
 r519: [1044..1046]
 r521: [1038..1043] [1030..1031]
 r522: [1033..1034]
 r523: [1035..1039]
 r524: [1036..1037]
 r525: [1026..1027]
 r526: [1013..1014]
 r527: [1015..1019]
 r528: [1016..1017]
 r529: [1004..1005]
 r530: [999..1002]
 r531: [998..1001]
 r532: [997..1000]
 r533: [992..993]
 r534: [986..987]
 r535: [983..984]
 r536: [977..978]
 r537: [974..975]
 r538: [967..968]
 r539: [958..959]
 r540: [955..956]
 r541: [948..949]
 r542: [939..940]
 r543: [937..938]
 r544: [930..931]
 r545: [921..922]
 r546: [914..915]
 r547: [905..906]
 r548: [902..903]
 r549: [897..898]
 r550: [893..894]
 r551: [890..891]
 r552: [883..884]
 r553: [880..881]
 r554: [873..874]
 r555: [870..871]
 r556: [860..861]
 r557: [854..855]
 r558: [851..852]
 r559: [845..846]
 r560: [842..843]
 r561: [829..830]
 r562: [826..827]
 r563: [4..5]
 r564: [559..560]
 r565: [556..557]
 r566: [553..554]
 r567: [550..551]
 r568: [493..494]
 r569: [490..491]
 r570: [433..434]
 r571: [403..404]
 r572: [400..401]
 r573: [361..362]
 r574: [341..342]
 r575: [318..319]
 r576: [315..316]
 r577: [284..285]
 r578: [281..282]
 r579: [278..279]
 r580: [241..242]
 r581: [238..239]
 r582: [235..236]
 r583: [194..195]
 r584: [191..192]
 r585: [188..189]
 r586: [169..170]
 r587: [166..167]
 r588: [135..136]
 r589: [132..133]
 r590: [129..130]
 r591: [85..86]
 r592: [82..83]
 r593: [33..34]
 r594: [30..31]
 r595: [17..18]
 r596: [790..791]
 r597: [787..788]
 r598: [754..755]
 r599: [725..726]
 r600: [716..717]
 r601: [713..714]
 r602: [687..688]
 r603: [630..632]
 r604: [1045..1047]
 r605: [1040..1041]
 r606: [1020..1021]
 r607: [988..989]
 r608: [979..980]
 r609: [960..962]
 r610: [941..943]
 r611: [833..834]
Compressing live ranges: from 1057 to 823 - 77%
Ranges after the compression:
 r59: [452..453]
 r60: [448..449]
 r61: [434..447]
 r62: [444..445]
 r63: [432..443]
 r64: [440..441]
 r65: [430..439]
 r66: [428..437]
 r67: [426..435]
 r68: [420..423]
 r69: [420..421]
 r70: [414..415]
 r71: [402..413]
 r72: [410..411]
 r73: [404..409]
 r74: [406..407]
 r75: [404..405]
 r76: [402..403]
 r77: [400..401]
 r78: [392..393]
 r79: [386..391]
 r80: [388..389]
 r81: [386..387]
 r82: [384..385]
 r83: [382..383]
 r84: [376..377]
 r85: [370..373]
 r86: [370..371]
 r87: [366..367]
 r88: [362..363]
 r89: [334..359]
 r90: [348..357]
 r91: [354..355]
 r92: [352..353]
 r93: [350..351]
 r94: [348..349]
 r95: [332..347]
 r96: [338..345]
 r97: [342..343]
 r98: [340..341]
 r99: [338..339]
 r100: [332..337]
 r101: [332..335]
 r102: [328..329]
 r103: [324..325]
 r104: [318..323]
 r105: [320..321]
 r106: [318..319]
 r107: [316..317]
 r108: [314..315]
 r109: [308..309]
 r110: [302..305]
 r111: [302..303]
 r112: [298..299]
 r113: [294..295]
 r114: [264..291]
 r115: [282..289]
 r116: [286..287]
 r117: [284..285]
 r118: [282..283]
 r119: [280..281]
 r120: [262..277]
 r121: [268..275]
 r122: [272..273]
 r123: [270..271]
 r124: [268..269]
 r125: [262..267]
 r126: [262..265]
 r127: [258..259]
 r128: [254..255]
 r129: [248..253]
 r130: [250..251]
 r131: [246..249]
 r132: [242..243]
 r133: [238..239]
 r134: [234..235]
 r135: [230..231]
 r136: [220..229]
 r137: [226..227]
 r138: [218..225]
 r139: [216..223]
 r140: [214..221]
 r141: [210..211]
 r142: [204..207]
 r143: [204..205]
 r144: [198..201]
 r145: [198..199]
 r146: [188..195]
 r147: [186..193]
 r148: [184..191]
 r149: [182..189]
 r150: [176..177]
 r151: [172..173]
 r152: [164..169]
 r153: [164..167]
 r154: [164..165]
 r155: [154..161]
 r156: [152..159]
 r157: [150..157]
 r158: [148..155]
 r159: [144..145]
 r160: [140..141]
 r161: [134..139]
 r162: [136..137]
 r163: [132..135]
 r164: [128..129]
 r165: [124..125]
 r166: [120..121]
 r167: [116..117]
 r168: [106..115]
 r169: [112..113]
 r170: [104..111]
 r171: [102..109]
 r172: [100..107]
 r173: [96..97]
 r174: [90..93]
 r175: [90..91]
 r176: [84..87]
 r177: [84..85]
 r178: [68..81]
 r179: [66..79]
 r180: [72..77]
 r181: [74..75]
 r182: [72..73]
 r183: [64..71]
 r184: [64..69]
 r185: [58..59]
 r186: [54..55]
 r187: [46..51]
 r188: [46..49]
 r189: [46..47]
 r190: [30..43]
 r191: [28..41]
 r192: [34..39]
 r193: [36..37]
 r194: [34..35]
 r195: [26..33]
 r196: [26..31]
 r197: [22..23]
 r198: [16..19]
 r199: [8..9]
 r200: [6..7]
 r201: [630..633]
 r202: [630..631]
 r203: [608..629]
 r204: [626..627]
 r205: [624..625]
 r206: [614..623]
 r207: [620..621]
 r208: [614..619]
 r209: [616..617]
 r210: [612..615]
 r211: [608..609]
 r212: [602..605]
 r213: [602..603]
 r214: [600..601]
 r215: [598..599]
 r216: [592..595]
 r217: [592..593]
 r218: [590..591]
 r219: [588..589]
 r220: [584..585]
 r221: [582..583]
 r222: [552..579]
 r223: [576..577]
 r224: [552..575]
 r225: [572..573]
 r226: [550..571]
 r227: [568..569]
 r228: [548..567]
 r229: [554..565]
 r230: [554..555]
 r231: [548..553]
 r232: [542..545]
 r233: [542..543]
 r234: [538..541]
 r235: [538..539]
 r236: [524..535]
 r237: [524..525]
 r238: [514..523]
 r239: [518..521]
 r240: [518..519]
 r241: [516..517]
 r242: [514..515]
 r243: [508..511]
 r244: [508..509]
 r245: [506..507]
 r246: [496..505]
 r247: [500..503]
 r248: [500..501]
 r249: [498..499]
 r250: [496..497]
 r251: [492..493]
 r252: [488..489]
 r253: [486..489]
 r254: [466..485]
 r255: [482..483]
 r256: [482..483]
 r257: [466..481]
 r258: [478..479]
 r259: [478..479]
 r260: [476..477]
 r261: [466..475]
 r262: [470..473]
 r263: [470..471]
 r264: [468..469]
 r265: [466..467]
 r266: [460..463]
 r267: [460..461]
 r268: [458..459]
 r269: [456..457]
 r270: [2..3]
 r271: [0..1]
 r272: [815..820]
 r273: [817..818]
 r274: [813..816]
 r275: [803..803] [784..800]
 r276: [797..798]
 r277: [793..796] [786..787]
 r278: [788..788] [784..785]
 r279: [780..783]
 r280: [780..781]
 r281: [778..779]
 r282: [776..777]
 r283: [770..771]
 r284: [768..769]
 r285: [752..763]
 r286: [760..761]
 r287: [758..759]
 r288: [756..757]
 r289: [754..755]
 r290: [750..753]
 r291: [736..747]
 r292: [744..745]
 r293: [742..743]
 r294: [740..741]
 r295: [738..739]
 r296: [734..737]
 r297: [728..729]
 r298: [726..727]
 r299: [724..725]
 r300: [722..723]
 r301: [720..721]
 r302: [720..721]
 r303: [718..719]
 r304: [714..715]
 r305: [712..713]
 r306: [710..711]
 r307: [708..709]
 r308: [706..707]
 r309: [706..707]
 r310: [704..705]
 r311: [698..701]
 r312: [698..699]
 r313: [694..697]
 r314: [694..695]
 r315: [688..691]
 r316: [688..689]
 r317: [686..687]
 r318: [668..685]
 r319: [680..683]
 r320: [680..681]
 r321: [678..679]
 r322: [668..677]
 r323: [672..675]
 r324: [672..673]
 r325: [670..671]
 r326: [668..669]
 r327: [664..665]
 r328: [664..665]
 r329: [648..663]
 r330: [648..661]
 r331: [658..659]
 r332: [658..659]
 r333: [646..657]
 r334: [652..655]
 r335: [652..653]
 r336: [650..651]
 r337: [646..649]
 r338: [640..643]
 r339: [640..641]
 r340: [638..639]
 r341: [636..637]
 r342: [454..455]
 r343: [452..453]
 r344: [450..451]
 r345: [446..447]
 r346: [442..443]
 r347: [438..439]
 r348: [436..437]
 r349: [424..425]
 r350: [422..423]
 r351: [418..419]
 r352: [416..417]
 r353: [412..413]
 r354: [408..409]
 r355: [398..399]
 r356: [400..401]
 r357: [396..397]
 r358: [394..395]
 r359: [390..391]
 r360: [382..383]
 r361: [380..383]
 r362: [378..383]
 r363: [376..377]
 r364: [374..375]
 r365: [372..373]
 r366: [368..369]
 r367: [364..365]
 r368: [360..361]
 r369: [358..359]
 r370: [356..357]
 r371: [352..353]
 r372: [346..347]
 r373: [344..345]
 r374: [340..341]
 r375: [336..337]
 r376: [330..331]
 r377: [328..329]
 r378: [326..327]
 r379: [322..323]
 r380: [314..315]
 r381: [312..315]
 r382: [310..315]
 r383: [308..309]
 r384: [306..307]
 r385: [304..305]
 r386: [300..301]
 r387: [296..297]
 r388: [292..293]
 r389: [290..291]
 r390: [288..289]
 r391: [284..285]
 r392: [276..277]
 r393: [274..275]
 r394: [270..271]
 r395: [266..267]
 r396: [260..261]
 r397: [258..259]
 r398: [256..257]
 r399: [252..253]
 r400: [244..249]
 r401: [242..243]
 r402: [240..241]
 r403: [236..237]
 r404: [232..233]
 r405: [228..229]
 r406: [224..225]
 r407: [222..223]
 r408: [212..213]
 r409: [210..211]
 r410: [208..209]
 r411: [206..207]
 r412: [202..203]
 r413: [200..201]
 r414: [196..197]
 r415: [194..195]
 r416: [192..193]
 r417: [190..191]
 r418: [180..181]
 r419: [178..179]
 r420: [176..177]
 r421: [174..175]
 r422: [172..173]
 r423: [170..171]
 r424: [168..169]
 r425: [166..167]
 r426: [162..163]
 r427: [160..161]
 r428: [158..159]
 r429: [156..157]
 r430: [146..147]
 r431: [142..143]
 r432: [138..139]
 r433: [130..135]
 r434: [128..129]
 r435: [126..127]
 r436: [122..123]
 r437: [118..119]
 r438: [114..115]
 r439: [110..111]
 r440: [108..109]
 r441: [98..99]
 r442: [96..97]
 r443: [94..95]
 r444: [92..93]
 r445: [88..89]
 r446: [86..87]
 r447: [82..83]
 r448: [80..81]
 r449: [78..79]
 r450: [76..77]
 r451: [70..71]
 r452: [62..63]
 r453: [60..61]
 r454: [58..59]
 r455: [56..57]
 r456: [54..55]
 r457: [52..53]
 r458: [50..51]
 r459: [48..49]
 r460: [44..45]
 r461: [42..43]
 r462: [40..41]
 r463: [38..39]
 r464: [32..33]
 r465: [24..25]
 r466: [20..21]
 r467: [18..19]
 r468: [14..15]
 r469: [12..13]
 r470: [634..635]
 r471: [632..633]
 r472: [628..629]
 r473: [622..623]
 r474: [618..619]
 r475: [610..615]
 r476: [606..607]
 r477: [604..605]
 r478: [596..597]
 r479: [594..595]
 r480: [586..587]
 r481: [578..579]
 r482: [574..575]
 r483: [570..571]
 r484: [568..569]
 r485: [566..567]
 r486: [564..565]
 r487: [562..563] [556..559]
 r488: [560..561]
 r489: [556..557]
 r490: [546..547]
 r491: [544..545]
 r492: [540..541]
 r493: [536..537]
 r494: [534..535]
 r495: [532..533] [526..529]
 r496: [530..531]
 r497: [526..527]
 r498: [522..523]
 r499: [520..521]
 r500: [512..513]
 r501: [510..511]
 r502: [504..505]
 r503: [502..503]
 r504: [494..495]
 r505: [492..493]
 r506: [492..493]
 r507: [492..493]
 r508: [490..491]
 r509: [484..485]
 r510: [480..481]
 r511: [474..475]
 r512: [472..473]
 r513: [464..465]
 r514: [462..463]
 r515: [456..457]
 r516: [10..11]
 r517: [821..822]
 r518: [819..820]
 r519: [812..813]
 r521: [808..811] [801..802]
 r522: [804..805]
 r523: [806..809]
 r524: [806..807]
 r525: [799..800]
 r526: [789..790]
 r527: [791..794]
 r528: [791..792]
 r529: [782..783]
 r530: [780..781]
 r531: [780..781]
 r532: [780..781]
 r533: [778..779]
 r534: [772..773]
 r535: [770..771]
 r536: [764..765]
 r537: [762..763]
 r538: [756..757]
 r539: [748..749]
 r540: [746..747]
 r541: [740..741]
 r542: [732..733]
 r543: [730..731]
 r544: [724..725]
 r545: [716..717]
 r546: [710..711]
 r547: [702..703]
 r548: [700..701]
 r549: [696..697]
 r550: [692..693]
 r551: [690..691]
 r552: [684..685]
 r553: [682..683]
 r554: [676..677]
 r555: [674..675]
 r556: [666..667]
 r557: [662..663]
 r558: [660..661]
 r559: [656..657]
 r560: [654..655]
 r561: [644..645]
 r562: [642..643]
 r563: [4..5]
 r564: [432..433]
 r565: [430..431]
 r566: [428..429]
 r567: [426..427]
 r568: [380..381]
 r569: [378..379]
 r570: [332..333]
 r571: [312..313]
 r572: [310..311]
 r573: [278..279]
 r574: [262..263]
 r575: [246..247]
 r576: [244..245]
 r577: [218..219]
 r578: [216..217]
 r579: [214..215]
 r580: [186..187]
 r581: [184..185]
 r582: [182..183]
 r583: [152..153]
 r584: [150..151]
 r585: [148..149]
 r586: [132..133]
 r587: [130..131]
 r588: [104..105]
 r589: [102..103]
 r590: [100..101]
 r591: [66..67]
 r592: [64..65]
 r593: [28..29]
 r594: [26..27]
 r595: [16..17]
 r596: [612..613]
 r597: [610..611]
 r598: [580..581]
 r599: [558..559]
 r600: [550..551]
 r601: [548..549]
 r602: [528..529]
 r603: [486..487]
 r604: [812..814]
 r605: [810..811]
 r606: [795..796]
 r607: [774..775]
 r608: [766..767]
 r609: [750..751]
 r610: [734..735]
 r611: [646..647]
	 Assigning to 604 (cl=AREG, orig=520, freq=2, tfirst=604, tfreq=2)...
	   Assign 0 to reload r604 (freq=2)
	 Assigning to 599 (cl=GENERAL_REGS, orig=489, freq=3, tfirst=599, tfreq=3)...
	   Assign 5 to reload r599 (freq=3)
	 Assigning to 602 (cl=GENERAL_REGS, orig=497, freq=3, tfirst=602, tfreq=3)...
	   Assign 2 to reload r602 (freq=3)
	 Assigning to 605 (cl=GENERAL_REGS, orig=523, freq=3, tfirst=605, tfreq=3)...
	   Assign 1 to reload r605 (freq=3)
	 Assigning to 606 (cl=GENERAL_REGS, orig=527, freq=3, tfirst=606, tfreq=3)...
	   Assign 1 to reload r606 (freq=3)
	 Assigning to 573 (cl=SSE_REGS, orig=120, freq=3, tfirst=573, tfreq=3)...
	   Assign 22 to reload r573 (freq=3)
	 Assigning to 598 (cl=SSE_REGS, orig=222, freq=3, tfirst=598, tfreq=3)...
	   Assign 22 to reload r598 (freq=3)
	 Assigning to 603 (cl=SSE_REGS, orig=254, freq=3, tfirst=603, tfreq=3)...
	   Assign 23 to reload r603 (freq=3)
	 Assigning to 609 (cl=SSE_REGS, orig=539, freq=3, tfirst=609, tfreq=3)...
	   Assign 22 to reload r609 (freq=3)
	 Assigning to 610 (cl=SSE_REGS, orig=542, freq=3, tfirst=610, tfreq=3)...
	   Assign 22 to reload r610 (freq=3)

********** Undoing inheritance #1: **********


********** Local #2: **********

  Slot 0 regnos (width = 8):	 564	 611	 608	 607	 601	 600	 597	 596	 595	 594	 593	 592	 591	 590	 589	 588	 587	 586	 585	 584	 583	 582	 581	 580	 579	 578	 577	 576	 575	 574	 572	 571	 570	 569	 568	 567	 566	 565
Changing spilled pseudos to memory in insn #28
Changing spilled pseudos to memory in insn #826
Changing spilled pseudos to memory in insn #29
Changing spilled pseudos to memory in insn #827
Changing spilled pseudos to memory in insn #30
Changing spilled pseudos to memory in insn #828
Changing spilled pseudos to memory in insn #31
Changing spilled pseudos to memory in insn #829
Changing spilled pseudos to memory in insn #72
Changing spilled pseudos to memory in insn #830
Changing spilled pseudos to memory in insn #73
Changing spilled pseudos to memory in insn #831
Changing spilled pseudos to memory in insn #117
Changing spilled pseudos to memory in insn #832
Changing spilled pseudos to memory in insn #140
Changing spilled pseudos to memory in insn #833
Changing spilled pseudos to memory in insn #141
Changing spilled pseudos to memory in insn #834
Changing spilled pseudos to memory in insn #185
Changing spilled pseudos to memory in insn #837
Changing spilled pseudos to memory in insn #203
Changing spilled pseudos to memory in insn #838
Changing spilled pseudos to memory in insn #204
Changing spilled pseudos to memory in insn #839
Changing spilled pseudos to memory in insn #230
Changing spilled pseudos to memory in insn #840
Changing spilled pseudos to memory in insn #231
Changing spilled pseudos to memory in insn #841
Changing spilled pseudos to memory in insn #233
Changing spilled pseudos to memory in insn #842
Changing spilled pseudos to memory in insn #264
Changing spilled pseudos to memory in insn #843
Changing spilled pseudos to memory in insn #265
Changing spilled pseudos to memory in insn #844
Changing spilled pseudos to memory in insn #266
Changing spilled pseudos to memory in insn #845
Changing spilled pseudos to memory in insn #306
Changing spilled pseudos to memory in insn #846
Changing spilled pseudos to memory in insn #307
Changing spilled pseudos to memory in insn #847
Changing spilled pseudos to memory in insn #308
Changing spilled pseudos to memory in insn #848
Changing spilled pseudos to memory in insn #325
Changing spilled pseudos to memory in insn #849
Changing spilled pseudos to memory in insn #326
Changing spilled pseudos to memory in insn #850
Changing spilled pseudos to memory in insn #352
Changing spilled pseudos to memory in insn #851
Changing spilled pseudos to memory in insn #353
Changing spilled pseudos to memory in insn #852
Changing spilled pseudos to memory in insn #355
Changing spilled pseudos to memory in insn #853
Changing spilled pseudos to memory in insn #390
Changing spilled pseudos to memory in insn #854
Changing spilled pseudos to memory in insn #391
Changing spilled pseudos to memory in insn #855
Changing spilled pseudos to memory in insn #436
Changing spilled pseudos to memory in insn #856
Changing spilled pseudos to memory in insn #437
Changing spilled pseudos to memory in insn #857
Changing spilled pseudos to memory in insn #451
Changing spilled pseudos to memory in insn #858
Changing spilled pseudos to memory in insn #480
Changing spilled pseudos to memory in insn #859
Changing spilled pseudos to memory in insn #481
Changing spilled pseudos to memory in insn #860
Changing spilled pseudos to memory in insn #528
Changing spilled pseudos to memory in insn #865
Changing spilled pseudos to memory in insn #529
Changing spilled pseudos to memory in insn #866
Changing spilled pseudos to memory in insn #686
Changing spilled pseudos to memory in insn #876
Changing spilled pseudos to memory in insn #693
Changing spilled pseudos to memory in insn #877
Changing spilled pseudos to memory in insn #785
Changing spilled pseudos to memory in insn #882

********** Local #3: **********

Reusing alternative 9 for insn #882
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 882:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 785:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 3 for insn #877
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 877:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 693:  (0) m  (1) x {*movdf_internal_rex64}
Reusing alternative 3 for insn #876
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 876:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=19,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 686:  (0) m  (1) x {*movdf_internal_rex64}
Reusing alternative 9 for insn #866
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 866:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 529:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #865
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 865:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 528:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #860
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 860:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 481:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #859
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 859:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 480:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #858
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 858:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 451:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #857
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 857:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 437:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #856
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 856:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 436:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #855
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 855:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 391:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #854
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 854:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 390:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #853
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 853:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 355:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #852
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 852:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 353:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #851
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 851:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 352:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #850
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 850:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 326:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #849
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 849:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 325:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #848
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 848:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 308:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #847
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 847:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 307:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #846
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 846:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 306:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #845
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 845:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 266:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #844
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 844:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 265:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #843
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 843:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 264:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #842
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 842:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 233:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #841
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 841:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 231:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #840
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 840:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 230:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #839
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 839:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 204:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #838
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 838:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 203:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #837
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 837:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 185:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #834
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 834:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 141:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #833
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 833:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 140:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #832
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 832:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 117:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #831
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 831:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 73:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #830
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 830:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 72:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #829
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 829:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 31:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #828
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 828:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #827
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 827:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) ?m  (1) rC {*movdf_internal_rex64}
Reusing alternative 9 for insn #826
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 826:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 28:  (0) ?m  (1) rC {*movdf_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=592, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=560, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 12
changing reg in insn 14
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 28
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 29
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 30
changing reg in insn 25
changing reg in insn 31
changing reg in insn 27
changing reg in insn 32
changing reg in insn 35
changing reg in insn 38
changing reg in insn 37
changing reg in insn 39
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 55
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 67
changing reg in insn 71
changing reg in insn 76
changing reg in insn 78
changing reg in insn 80
changing reg in insn 83
changing reg in insn 82
changing reg in insn 84
changing reg in insn 87
changing reg in insn 89
changing reg in insn 92
changing reg in insn 94
changing reg in insn 97
changing reg in insn 117
changing reg in insn 99
changing reg in insn 106
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 104
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 118
changing reg in insn 108
changing reg in insn 110
changing reg in insn 111
changing reg in insn 111
changing reg in insn 113
changing reg in insn 113
changing reg in insn 114
changing reg in insn 119
changing reg in insn 116
changing reg in insn 120
changing reg in insn 123
changing reg in insn 126
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 132
changing reg in insn 133
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 135
changing reg in insn 135
changing reg in insn 139
changing reg in insn 144
changing reg in insn 146
changing reg in insn 148
changing reg in insn 151
changing reg in insn 150
changing reg in insn 152
changing reg in insn 155
changing reg in insn 157
changing reg in insn 160
changing reg in insn 162
changing reg in insn 165
changing reg in insn 185
changing reg in insn 167
changing reg in insn 169
changing reg in insn 170
changing reg in insn 170
changing reg in insn 172
changing reg in insn 172
changing reg in insn 173
changing reg in insn 186
changing reg in insn 176
changing reg in insn 178
changing reg in insn 179
changing reg in insn 179
changing reg in insn 181
changing reg in insn 181
changing reg in insn 182
changing reg in insn 187
changing reg in insn 184
changing reg in insn 188
changing reg in insn 191
changing reg in insn 194
changing reg in insn 197
changing reg in insn 198
changing reg in insn 198
changing reg in insn 203
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 204
changing reg in insn 207
changing reg in insn 209
changing reg in insn 211
changing reg in insn 213
changing reg in insn 216
changing reg in insn 218
changing reg in insn 221
changing reg in insn 222
changing reg in insn 222
changing reg in insn 230
changing reg in insn 224
changing reg in insn 225
changing reg in insn 225
changing reg in insn 231
changing reg in insn 227
changing reg in insn 233
changing reg in insn 229
changing reg in insn 234
changing reg in insn 239
changing reg in insn 241
changing reg in insn 243
changing reg in insn 246
changing reg in insn 245
changing reg in insn 247
changing reg in insn 250
changing reg in insn 253
changing reg in insn 252
changing reg in insn 254
changing reg in insn 257
changing reg in insn 264
changing reg in insn 259
changing reg in insn 265
changing reg in insn 261
changing reg in insn 266
changing reg in insn 263
changing reg in insn 267
changing reg in insn 276
changing reg in insn 279
changing reg in insn 285
changing reg in insn 287
changing reg in insn 289
changing reg in insn 294
changing reg in insn 291
changing reg in insn 295
changing reg in insn 293
changing reg in insn 296
changing reg in insn 299
changing reg in insn 306
changing reg in insn 301
changing reg in insn 307
changing reg in insn 303
changing reg in insn 308
changing reg in insn 305
changing reg in insn 309
changing reg in insn 312
changing reg in insn 316
changing reg in insn 319
changing reg in insn 320
changing reg in insn 320
changing reg in insn 325
changing reg in insn 322
changing reg in insn 323
changing reg in insn 323
changing reg in insn 326
changing reg in insn 329
changing reg in insn 331
changing reg in insn 333
changing reg in insn 335
changing reg in insn 338
changing reg in insn 340
changing reg in insn 343
changing reg in insn 344
changing reg in insn 344
changing reg in insn 352
changing reg in insn 346
changing reg in insn 347
changing reg in insn 347
changing reg in insn 353
changing reg in insn 349
changing reg in insn 355
changing reg in insn 351
changing reg in insn 356
changing reg in insn 361
changing reg in insn 363
changing reg in insn 365
changing reg in insn 368
changing reg in insn 367
changing reg in insn 369
changing reg in insn 372
changing reg in insn 375
changing reg in insn 374
changing reg in insn 376
changing reg in insn 379
changing reg in insn 390
changing reg in insn 381
changing reg in insn 391
changing reg in insn 383
changing reg in insn 385
changing reg in insn 386
changing reg in insn 386
changing reg in insn 387
changing reg in insn 392
changing reg in insn 389
changing reg in insn 393
changing reg in insn 402
changing reg in insn 405
changing reg in insn 411
changing reg in insn 413
changing reg in insn 415
changing reg in insn 420
changing reg in insn 417
changing reg in insn 421
changing reg in insn 419
changing reg in insn 422
changing reg in insn 425
changing reg in insn 436
changing reg in insn 427
changing reg in insn 437
changing reg in insn 429
changing reg in insn 431
changing reg in insn 432
changing reg in insn 432
changing reg in insn 433
changing reg in insn 438
changing reg in insn 435
changing reg in insn 439
changing reg in insn 442
changing reg in insn 446
changing reg in insn 449
changing reg in insn 453
changing reg in insn 624
changing reg in insn 625
changing reg in insn 625
changing reg in insn 627
changing reg in insn 464
changing reg in insn 467
changing reg in insn 466
changing reg in insn 467
changing reg in insn 467
changing reg in insn 485
changing reg in insn 469
changing reg in insn 470
changing reg in insn 470
changing reg in insn 471
changing reg in insn 471
changing reg in insn 479
changing reg in insn 473
changing reg in insn 474
changing reg in insn 474
changing reg in insn 480
changing reg in insn 476
changing reg in insn 477
changing reg in insn 477
changing reg in insn 481
changing reg in insn 484
changing reg in insn 485
changing reg in insn 487
changing reg in insn 490
changing reg in insn 489
changing reg in insn 490
changing reg in insn 490
changing reg in insn 491
changing reg in insn 491
changing reg in insn 493
changing reg in insn 496
changing reg in insn 499
changing reg in insn 498
changing reg in insn 499
changing reg in insn 499
changing reg in insn 500
changing reg in insn 500
changing reg in insn 502
changing reg in insn 505
changing reg in insn 506
changing reg in insn 506
changing reg in insn 527
changing reg in insn 509
changing reg in insn 510
changing reg in insn 510
changing reg in insn 528
changing reg in insn 512
changing reg in insn 513
changing reg in insn 513
changing reg in insn 529
changing reg in insn 515
changing reg in insn 517
changing reg in insn 530
changing reg in insn 519
changing reg in insn 525
changing reg in insn 526
changing reg in insn 531
changing reg in insn 534
changing reg in insn 537
changing reg in insn 536
changing reg in insn 537
changing reg in insn 537
changing reg in insn 542
changing reg in insn 541
changing reg in insn 542
changing reg in insn 544
changing reg in insn 551
changing reg in insn 550
changing reg in insn 551
changing reg in insn 551
changing reg in insn 558
changing reg in insn 553
changing reg in insn 556
changing reg in insn 555
changing reg in insn 556
changing reg in insn 556
changing reg in insn 557
changing reg in insn 557
changing reg in insn 559
changing reg in insn 562
changing reg in insn 565
changing reg in insn 564
changing reg in insn 565
changing reg in insn 565
changing reg in insn 566
changing reg in insn 566
changing reg in insn 573
changing reg in insn 568
changing reg in insn 571
changing reg in insn 570
changing reg in insn 571
changing reg in insn 571
changing reg in insn 572
changing reg in insn 572
changing reg in insn 574
changing reg in insn 577
changing reg in insn 584
changing reg in insn 587
changing reg in insn 588
changing reg in insn 589
changing reg in insn 605
changing reg in insn 591
changing reg in insn 593
changing reg in insn 592
changing reg in insn 593
changing reg in insn 593
changing reg in insn 606
changing reg in insn 595
changing reg in insn 596
changing reg in insn 597
changing reg in insn 598
changing reg in insn 598
changing reg in insn 607
changing reg in insn 600
changing reg in insn 603
changing reg in insn 602
changing reg in insn 603
changing reg in insn 603
changing reg in insn 604
changing reg in insn 604
changing reg in insn 608
changing reg in insn 611
changing reg in insn 614
changing reg in insn 613
changing reg in insn 614
changing reg in insn 614
changing reg in insn 615
changing reg in insn 615
changing reg in insn 618
changing reg in insn 804
changing reg in insn 805
changing reg in insn 805
changing reg in insn 807
changing reg in insn 635
changing reg in insn 637
changing reg in insn 638
changing reg in insn 638
changing reg in insn 639
changing reg in insn 639
changing reg in insn 652
changing reg in insn 644
changing reg in insn 669
changing reg in insn 655
changing reg in insn 656
changing reg in insn 656
changing reg in insn 664
changing reg in insn 659
changing reg in insn 657
changing reg in insn 667
changing reg in insn 659
changing reg in insn 669
changing reg in insn 669
changing reg in insn 678
changing reg in insn 671
changing reg in insn 679
changing reg in insn 681
changing reg in insn 683
changing reg in insn 683
changing reg in insn 684
changing reg in insn 688
changing reg in insn 690
changing reg in insn 690
changing reg in insn 691
changing reg in insn 695
changing reg in insn 697
changing reg in insn 698
changing reg in insn 698
changing reg in insn 699
changing reg in insn 699
changing reg in insn 701
changing reg in insn 701
changing reg in insn 702
changing reg in insn 702
changing reg in insn 703
changing reg in insn 705
changing reg in insn 707
changing reg in insn 708
changing reg in insn 708
changing reg in insn 709
changing reg in insn 709
changing reg in insn 711
changing reg in insn 711
changing reg in insn 712
changing reg in insn 712
changing reg in insn 713
changing reg in insn 716
changing reg in insn 717
changing reg in insn 717
changing reg in insn 718
changing reg in insn 718
changing reg in insn 720
changing reg in insn 720
changing reg in insn 721
changing reg in insn 721
changing reg in insn 723
changing reg in insn 722
changing reg in insn 723
changing reg in insn 723
changing reg in insn 724
changing reg in insn 726
changing reg in insn 727
changing reg in insn 727
changing reg in insn 728
changing reg in insn 728
changing reg in insn 730
changing reg in insn 730
changing reg in insn 731
changing reg in insn 731
changing reg in insn 733
changing reg in insn 732
changing reg in insn 733
changing reg in insn 733
changing reg in insn 734
changing reg in insn 736
changing reg in insn 739
changing reg in insn 738
changing reg in insn 739
changing reg in insn 739
changing reg in insn 745
changing reg in insn 744
changing reg in insn 745
changing reg in insn 747
changing reg in insn 750
changing reg in insn 749
changing reg in insn 750
changing reg in insn 750
changing reg in insn 751
changing reg in insn 751
changing reg in insn 764
changing reg in insn 753
changing reg in insn 756
changing reg in insn 755
changing reg in insn 756
changing reg in insn 756
changing reg in insn 757
changing reg in insn 757
changing reg in insn 765
changing reg in insn 759
changing reg in insn 762
changing reg in insn 761
changing reg in insn 762
changing reg in insn 762
changing reg in insn 763
changing reg in insn 763
changing reg in insn 766
changing reg in insn 769
changing reg in insn 771
changing reg in insn 770
changing reg in insn 771
changing reg in insn 771
changing reg in insn 784
changing reg in insn 773
changing reg in insn 785
changing reg in insn 775
changing reg in insn 776
changing reg in insn 777
changing reg in insn 786
changing reg in insn 779
changing reg in insn 782
changing reg in insn 781
changing reg in insn 782
changing reg in insn 782
changing reg in insn 783
changing reg in insn 783
changing reg in insn 787
changing reg in insn 790
changing reg in insn 793
changing reg in insn 792
changing reg in insn 793
changing reg in insn 793
changing reg in insn 794
changing reg in insn 794
changing reg in insn 798
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 46
changing reg in insn 47
changing reg in insn 49
changing reg in insn 50
changing reg in insn 55
changing reg in insn 56
changing reg in insn 54
changing reg in insn 55
changing reg in insn 57
changing reg in insn 58
changing reg in insn 60
changing reg in insn 61
changing reg in insn 63
changing reg in insn 64
changing reg in insn 68
changing reg in insn 72
changing reg in insn 69
changing reg in insn 73
changing reg in insn 70
changing reg in insn 74
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 86
changing reg in insn 87
changing reg in insn 91
changing reg in insn 92
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 103
changing reg in insn 104
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 112
changing reg in insn 113
changing reg in insn 115
changing reg in insn 116
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 128
changing reg in insn 129
changing reg in insn 131
changing reg in insn 132
changing reg in insn 136
changing reg in insn 140
changing reg in insn 137
changing reg in insn 141
changing reg in insn 138
changing reg in insn 142
changing reg in insn 145
changing reg in insn 146
changing reg in insn 147
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 154
changing reg in insn 155
changing reg in insn 159
changing reg in insn 160
changing reg in insn 164
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 168
changing reg in insn 169
changing reg in insn 171
changing reg in insn 172
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 180
changing reg in insn 181
changing reg in insn 183
changing reg in insn 184
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 193
changing reg in insn 196
changing reg in insn 197
changing reg in insn 199
changing reg in insn 200
changing reg in insn 202
changing reg in insn 205
changing reg in insn 208
changing reg in insn 209
changing reg in insn 210
changing reg in insn 211
changing reg in insn 215
changing reg in insn 216
changing reg in insn 220
changing reg in insn 221
changing reg in insn 223
changing reg in insn 224
changing reg in insn 226
changing reg in insn 227
changing reg in insn 228
changing reg in insn 229
changing reg in insn 236
changing reg in insn 237
changing reg in insn 240
changing reg in insn 241
changing reg in insn 242
changing reg in insn 243
changing reg in insn 244
changing reg in insn 245
changing reg in insn 249
changing reg in insn 250
changing reg in insn 251
changing reg in insn 252
changing reg in insn 256
changing reg in insn 257
changing reg in insn 258
changing reg in insn 259
changing reg in insn 260
changing reg in insn 261
changing reg in insn 262
changing reg in insn 263
changing reg in insn 269
changing reg in insn 273
changing reg in insn 275
changing reg in insn 276
changing reg in insn 277
changing reg in insn 278
changing reg in insn 281
changing reg in insn 283
changing reg in insn 286
changing reg in insn 287
changing reg in insn 288
changing reg in insn 289
changing reg in insn 290
changing reg in insn 291
changing reg in insn 292
changing reg in insn 293
changing reg in insn 298
changing reg in insn 299
changing reg in insn 300
changing reg in insn 301
changing reg in insn 302
changing reg in insn 303
changing reg in insn 304
changing reg in insn 305
changing reg in insn 311
changing reg in insn 312
changing reg in insn 318
changing reg in insn 319
changing reg in insn 321
changing reg in insn 322
changing reg in insn 324
changing reg in insn 327
changing reg in insn 330
changing reg in insn 331
changing reg in insn 332
changing reg in insn 333
changing reg in insn 337
changing reg in insn 338
changing reg in insn 342
changing reg in insn 343
changing reg in insn 345
changing reg in insn 346
changing reg in insn 348
changing reg in insn 349
changing reg in insn 350
changing reg in insn 351
changing reg in insn 358
changing reg in insn 359
changing reg in insn 362
changing reg in insn 363
changing reg in insn 364
changing reg in insn 365
changing reg in insn 366
changing reg in insn 367
changing reg in insn 371
changing reg in insn 372
changing reg in insn 373
changing reg in insn 374
changing reg in insn 378
changing reg in insn 379
changing reg in insn 380
changing reg in insn 381
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 385
changing reg in insn 388
changing reg in insn 389
changing reg in insn 395
changing reg in insn 399
changing reg in insn 401
changing reg in insn 402
changing reg in insn 403
changing reg in insn 404
changing reg in insn 407
changing reg in insn 409
changing reg in insn 412
changing reg in insn 413
changing reg in insn 414
changing reg in insn 415
changing reg in insn 416
changing reg in insn 417
changing reg in insn 418
changing reg in insn 419
changing reg in insn 424
changing reg in insn 425
changing reg in insn 426
changing reg in insn 427
changing reg in insn 428
changing reg in insn 429
changing reg in insn 430
changing reg in insn 431
changing reg in insn 434
changing reg in insn 435
changing reg in insn 441
changing reg in insn 442
changing reg in insn 448
changing reg in insn 449
changing reg in insn 450
changing reg in insn 451
changing reg in insn 455
changing reg in insn 456
changing reg in insn 457
changing reg in insn 458
changing reg in insn 463
changing reg in insn 464
changing reg in insn 465
changing reg in insn 466
changing reg in insn 468
changing reg in insn 469
changing reg in insn 472
changing reg in insn 473
changing reg in insn 475
changing reg in insn 476
changing reg in insn 478
changing reg in insn 482
changing reg in insn 486
changing reg in insn 487
changing reg in insn 488
changing reg in insn 489
changing reg in insn 495
changing reg in insn 496
changing reg in insn 497
changing reg in insn 498
changing reg in insn 504
changing reg in insn 505
changing reg in insn 508
changing reg in insn 509
changing reg in insn 511
changing reg in insn 512
changing reg in insn 514
changing reg in insn 515
changing reg in insn 516
changing reg in insn 518
changing reg in insn 519
changing reg in insn 520
changing reg in insn 521
changing reg in insn 523
changing reg in insn 521
changing reg in insn 525
changing reg in insn 522
changing reg in insn 522
changing reg in insn 523
changing reg in insn 525
changing reg in insn 533
changing reg in insn 534
changing reg in insn 535
changing reg in insn 536
changing reg in insn 538
changing reg in insn 539
changing reg in insn 543
changing reg in insn 544
changing reg in insn 545
changing reg in insn 546
changing reg in insn 548
changing reg in insn 546
changing reg in insn 550
changing reg in insn 547
changing reg in insn 547
changing reg in insn 548
changing reg in insn 550
changing reg in insn 552
changing reg in insn 553
changing reg in insn 554
changing reg in insn 555
changing reg in insn 561
changing reg in insn 562
changing reg in insn 563
changing reg in insn 564
changing reg in insn 567
changing reg in insn 568
changing reg in insn 569
changing reg in insn 570
changing reg in insn 576
changing reg in insn 577
changing reg in insn 578
changing reg in insn 581
changing reg in insn 579
changing reg in insn 582
changing reg in insn 580
changing reg in insn 583
changing reg in insn 586
changing reg in insn 587
changing reg in insn 590
changing reg in insn 591
changing reg in insn 594
changing reg in insn 595
changing reg in insn 599
changing reg in insn 600
changing reg in insn 601
changing reg in insn 602
changing reg in insn 610
changing reg in insn 611
changing reg in insn 612
changing reg in insn 613
changing reg in insn 616
changing reg in insn 617
changing reg in insn 623
changing reg in insn 624
changing reg in insn 634
changing reg in insn 635
changing reg in insn 636
changing reg in insn 637
changing reg in insn 639
changing reg in insn 640
changing reg in insn 641
changing reg in insn 649
changing reg in insn 644
changing reg in insn 642
changing reg in insn 651
changing reg in insn 652
changing reg in insn 652
changing reg in insn 650
changing reg in insn 651
changing reg in insn 650
changing reg in insn 649
changing reg in insn 650
changing reg in insn 654
changing reg in insn 655
changing reg in insn 666
changing reg in insn 667
changing reg in insn 667
changing reg in insn 665
changing reg in insn 666
changing reg in insn 665
changing reg in insn 664
changing reg in insn 665
changing reg in insn 670
changing reg in insn 671
changing reg in insn 672
changing reg in insn 675
changing reg in insn 673
changing reg in insn 676
changing reg in insn 674
changing reg in insn 677
changing reg in insn 682
changing reg in insn 683
changing reg in insn 687
changing reg in insn 689
changing reg in insn 690
changing reg in insn 694
changing reg in insn 696
changing reg in insn 697
changing reg in insn 700
changing reg in insn 701
changing reg in insn 704
changing reg in insn 706
changing reg in insn 707
changing reg in insn 710
changing reg in insn 711
changing reg in insn 714
changing reg in insn 715
changing reg in insn 716
changing reg in insn 719
changing reg in insn 720
changing reg in insn 725
changing reg in insn 726
changing reg in insn 729
changing reg in insn 730
changing reg in insn 735
changing reg in insn 736
changing reg in insn 737
changing reg in insn 738
changing reg in insn 740
changing reg in insn 742
changing reg in insn 746
changing reg in insn 747
changing reg in insn 748
changing reg in insn 749
changing reg in insn 752
changing reg in insn 753
changing reg in insn 754
changing reg in insn 755
changing reg in insn 758
changing reg in insn 759
changing reg in insn 760
changing reg in insn 761
changing reg in insn 768
changing reg in insn 769
changing reg in insn 772
changing reg in insn 773
changing reg in insn 774
changing reg in insn 775
changing reg in insn 778
changing reg in insn 779
changing reg in insn 780
changing reg in insn 781
changing reg in insn 789
changing reg in insn 790
changing reg in insn 791
changing reg in insn 792
changing reg in insn 803
changing reg in insn 804
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 163.
verify found no changes in insn with uid = 189.
verify found no changes in insn with uid = 195.
verify found no changes in insn with uid = 206.
verify found no changes in insn with uid = 214.
verify found no changes in insn with uid = 219.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 238.
verify found no changes in insn with uid = 248.
verify found no changes in insn with uid = 255.
verify found no changes in insn with uid = 268.
verify found no changes in insn with uid = 274.
verify found no changes in insn with uid = 280.
verify found no changes in insn with uid = 284.
verify found no changes in insn with uid = 297.
verify found no changes in insn with uid = 310.
verify found no changes in insn with uid = 317.
verify found no changes in insn with uid = 328.
verify found no changes in insn with uid = 336.
verify found no changes in insn with uid = 341.
verify found no changes in insn with uid = 357.
verify found no changes in insn with uid = 360.
verify found no changes in insn with uid = 370.
verify found no changes in insn with uid = 377.
verify found no changes in insn with uid = 394.
verify found no changes in insn with uid = 400.
verify found no changes in insn with uid = 406.
verify found no changes in insn with uid = 410.
verify found no changes in insn with uid = 423.
verify found no changes in insn with uid = 440.
verify found no changes in insn with uid = 447.
verify found no changes in insn with uid = 454.
verify found no changes in insn with uid = 483.
verify found no changes in insn with uid = 494.
verify found no changes in insn with uid = 503.
verify found no changes in insn with uid = 532.
verify found no changes in insn with uid = 540.
verify found no changes in insn with uid = 560.
verify found no changes in insn with uid = 575.
verify found no changes in insn with uid = 585.
verify found no changes in insn with uid = 609.
verify found no changes in insn with uid = 619.
verify found no changes in insn with uid = 680.
verify found no changes in insn with uid = 685.
verify found no changes in insn with uid = 692.
verify found no changes in insn with uid = 743.
verify found no changes in insn with uid = 767.
verify found no changes in insn with uid = 788.
verify found no changes in insn with uid = 799.


back_flip_create

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3]
;;  ref usage 	r0={322d,279u} r1={162d,100u} r2={103d,42u} r3={3d,3u} r4={110d,48u} r5={130d,68u} r6={1d,322u} r7={1d,76u} r8={62d} r9={62d} r10={62d} r11={62d} r12={62d} r13={62d} r14={62d} r15={62d} r17={133d,4u} r18={62d} r19={62d} r20={1d,1u,22e} r21={156d,97u} r22={120d,57u} r23={95d,32u} r24={68d,5u} r25={63d} r26={63d} r27={63d} r28={63d} r29={62d} r30={62d} r31={62d} r32={62d} r33={62d} r34={62d} r35={62d} r36={62d} r37={63d} r38={63d} r39={62d} r40={62d} r45={62d} r46={62d} r47={62d} r48={62d} r49={62d} r50={62d} r51={62d} r52={62d} 
;;    total ref usage 4675{3519d,1134u,22e} in 844{782 regular + 62 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])
        (reg:DI 5 di [ f ])) backflip.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ f ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 t+0 S8 A64])
        (reg:DI 4 si [ t ])) backflip.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ t ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 world+0 S8 A64])
        (reg:DI 1 dx [ world ])) backflip.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ world ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -560 [0xfffffffffffffdd0])) [0 space+0 S8 A64])
        (reg:DI 2 cx [ space ])) backflip.c:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ space ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 0 ax [342])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 world+0 S8 A64])) backflip.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [342])) backflip.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [342])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dBodyCreate") [flags 0x41]  <function_decl 0x1000054700 dBodyCreate>) [0 dBodyCreate S1 A8])
            (const_int 0 [0]))) backflip.c:35 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [orig:59 D.7546 ] [59])
        (reg:DI 0 ax)) backflip.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 1 dx [343])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [343])
                (const_int 16 [0x10])) [0 f_5(D)->flipBody+0 S8 A64])
        (reg/f:DI 0 ax [orig:59 D.7546 ] [59])) backflip.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [343])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.7546 ] [59])
            (nil))))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [344])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [orig:60 D.7547 ] [60])
        (mem/f/j:DI (reg/f:DI 0 ax [344]) [0 f_5(D)->m+0 S8 A64])) backflip.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [344])
        (nil)))
(insn 17 16 18 2 (set (reg:DF 4 si [orig:61 D.7548 ] [61])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:60 D.7547 ] [60])
                (const_int 56 [0x38])) [0 _6->flipDepth+0 S8 A64])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.7547 ] [60])
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 0 ax [345])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [orig:62 D.7547 ] [62])
        (mem/f/j:DI (reg/f:DI 0 ax [345]) [0 f_5(D)->m+0 S8 A64])) backflip.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [345])
        (nil)))
(insn 20 19 21 2 (set (reg:DF 2 cx [orig:63 D.7548 ] [63])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:62 D.7547 ] [62])
                (const_int 8 [0x8])) [0 _8->radius2+0 S8 A64])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.7547 ] [62])
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [346])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 0 ax [orig:64 D.7547 ] [64])
        (mem/f/j:DI (reg/f:DI 0 ax [346]) [0 f_5(D)->m+0 S8 A64])) backflip.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [346])
        (nil)))
(insn 23 22 24 2 (set (reg:DF 1 dx [orig:65 D.7548 ] [65])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:64 D.7547 ] [64])
                (const_int 16 [0x10])) [0 _10->distance+0 S8 A64])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.7547 ] [64])
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 0 ax [347])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 25 24 26 2 (set (reg:DF 0 ax [orig:66 D.7548 ] [66])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [347])
                (const_int 8 [0x8])) [0 f_5(D)->density+0 S8 A64])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [347])
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 5 di [348])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:36 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 5 di [orig:67 D.7549 ] [67])
                (plus:DI (reg/f:DI 5 di [348])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:36 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 5 di [348])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -520 [0xfffffffffffffdf8])) [0 f+0 S8 A64])
                (const_int 40 [0x28]))
            (nil))))
(insn 28 27 826 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 4 si [orig:61 D.7548 ] [61])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 4 si [orig:61 D.7548 ] [61])
        (nil)))
(insn 826 28 29 2 (set (reg:DF 24 xmm3)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 564)
        (nil)))
(insn 29 826 827 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 2 cx [orig:63 D.7548 ] [63])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 2 cx [orig:63 D.7548 ] [63])
        (nil)))
(insn 827 29 30 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 565)
        (nil)))
(insn 30 827 828 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:65 D.7548 ] [65])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:65 D.7548 ] [65])
        (nil)))
(insn 828 30 31 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 566)
        (nil)))
(insn 31 828 829 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:66 D.7548 ] [66])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:66 D.7548 ] [66])
        (nil)))
(insn 829 31 32 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:36 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 567)
        (nil)))
(insn 32 829 33 2 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:67 D.7549 ] [67])) backflip.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:67 D.7549 ] [67])
        (nil)))
(call_insn 33 32 34 2 (call (mem:QI (symbol_ref:DI ("dMassSetBox") [flags 0x41]  <function_decl 0x10000c4a00 dMassSetBox>) [0 dMassSetBox S1 A8])
        (const_int 0 [0])) backflip.c:36 656 {*call}
     (expr_list:REG_DEAD (reg:DF 24 xmm3)
        (expr_list:REG_DEAD (reg:DF 23 xmm2)
            (expr_list:REG_DEAD (reg:DF 22 xmm1)
                (expr_list:REG_DEAD (reg:DF 21 xmm0)
                    (expr_list:REG_DEAD (reg:DI 5 di)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (expr_list:DF (use (reg:DF 24 xmm3))
                        (nil)))))))
(insn 34 33 35 2 (set (reg/f:DI 0 ax [349])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:37 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg/f:DI 1 dx [orig:68 D.7549 ] [68])
                (plus:DI (reg/f:DI 0 ax [349])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:37 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [349])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -520 [0xfffffffffffffdf8])) [0 f+0 S8 A64])
                (const_int 40 [0x28]))
            (nil))))
(insn 36 35 37 2 (set (reg/f:DI 0 ax [350])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:37 87 {*movdi_internal_rex64}
     (nil))
(insn 37 36 38 2 (set (reg/f:DI 0 ax [orig:69 D.7546 ] [69])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [350])
                (const_int 16 [0x10])) [0 f_5(D)->flipBody+0 S8 A64])) backflip.c:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [350])
        (nil)))
(insn 38 37 39 2 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:68 D.7549 ] [68])) backflip.c:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:68 D.7549 ] [68])
        (nil)))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:69 D.7546 ] [69])) backflip.c:37 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 D.7546 ] [69])
        (nil)))
(call_insn 40 39 41 2 (call (mem:QI (symbol_ref:DI ("dBodySetMass") [flags 0x41]  <function_decl 0x100005b200 dBodySetMass>) [0 dBodySetMass S1 A8])
        (const_int 0 [0])) backflip.c:37 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 41 40 42 2 (set (reg:DF 0 ax [351])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S8 A64])) backflip.c:41 133 {*movdf_internal_rex64}
     (nil))
(insn 42 41 43 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -504 [0xfffffffffffffe08])) [0 planeYCompliance+0 S8 A64])
        (reg:DF 0 ax [351])) backflip.c:41 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [351])
        (nil)))
(insn 43 42 44 2 (set (reg/f:DI 0 ax [352])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:45 87 {*movdi_internal_rex64}
     (nil))
(insn 44 43 45 2 (set (reg/f:DI 0 ax [orig:70 D.7547 ] [70])
        (mem/f/j:DI (reg/f:DI 0 ax [352]) [0 f_5(D)->m+0 S8 A64])) backflip.c:45 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [352])
        (nil)))
(insn 45 44 46 2 (set (reg:DF 22 xmm1 [orig:71 D.7548 ] [71])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:70 D.7547 ] [70])
                (const_int 16 [0x10])) [0 _17->distance+0 S8 A64])) backflip.c:45 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.7547 ] [70])
        (nil)))
(insn 46 45 47 2 (set (reg/f:DI 0 ax [353])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:45 87 {*movdi_internal_rex64}
     (nil))
(insn 47 46 48 2 (set (reg/f:DI 0 ax [orig:72 D.7547 ] [72])
        (mem/f/j:DI (reg/f:DI 0 ax [353]) [0 f_5(D)->m+0 S8 A64])) backflip.c:45 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [353])
        (nil)))
(insn 48 47 49 2 (set (reg:DF 23 xmm2 [orig:73 D.7548 ] [73])
        (mem/j:DF (reg/f:DI 0 ax [orig:72 D.7547 ] [72]) [0 _19->radius1+0 S8 A64])) backflip.c:45 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:72 D.7547 ] [72])
        (nil)))
(insn 49 48 50 2 (set (reg/f:DI 0 ax [354])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:45 87 {*movdi_internal_rex64}
     (nil))
(insn 50 49 51 2 (set (reg/f:DI 0 ax [orig:74 D.7547 ] [74])
        (mem/f/j:DI (reg/f:DI 0 ax [354]) [0 f_5(D)->m+0 S8 A64])) backflip.c:45 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [354])
        (nil)))
(insn 51 50 52 2 (set (reg:DF 21 xmm0 [orig:75 D.7548 ] [75])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:74 D.7547 ] [74])
                (const_int 8 [0x8])) [0 _21->radius2+0 S8 A64])) backflip.c:45 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:74 D.7547 ] [74])
        (nil)))
(insn 52 51 53 2 (set (reg:DF 21 xmm0 [orig:76 D.7548 ] [76])
        (plus:DF (reg:DF 21 xmm0 [orig:75 D.7548 ] [75])
            (reg:DF 23 xmm2 [orig:73 D.7548 ] [73]))) backflip.c:45 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:75 D.7548 ] [75])
        (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:73 D.7548 ] [73])
            (nil))))
(insn 53 52 54 2 (set (reg:DF 21 xmm0 [orig:77 D.7548 ] [77])
        (plus:DF (reg:DF 21 xmm0 [orig:76 D.7548 ] [76])
            (reg:DF 22 xmm1 [orig:71 D.7548 ] [71]))) backflip.c:45 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:76 D.7548 ] [76])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:71 D.7548 ] [71])
            (nil))))
(insn 54 53 55 2 (set (reg:DF 22 xmm1 [356])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S8 A64])) backflip.c:45 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 2.00000000000000011102230246251565404236316680908203125e-1 [0x0.ccccccccccccdp-2])
        (nil)))
(insn 55 54 56 2 (set (reg:DF 21 xmm0 [355])
        (plus:DF (reg:DF 21 xmm0 [orig:77 D.7548 ] [77])
            (reg:DF 22 xmm1 [356]))) backflip.c:45 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [356])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:77 D.7548 ] [77])
            (nil))))
(insn 56 55 57 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -496 [0xfffffffffffffe10])) [0 track_l+0 S8 A64])
        (reg:DF 21 xmm0 [355])) backflip.c:45 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [355])
        (nil)))
(insn 57 56 58 2 (parallel [
            (set (reg:DI 0 ax [357])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -400 [0xfffffffffffffe70])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:47 274 {*adddi_1}
     (nil))
(insn 58 57 59 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [357])) backflip.c:47 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [357])
        (nil)))
(call_insn 59 58 60 2 (call (mem:QI (symbol_ref:DI ("dRSetIdentity") [flags 0x41]  <function_decl 0x10000d1b00 dRSetIdentity>) [0 dRSetIdentity S1 A8])
        (const_int 0 [0])) backflip.c:47 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 60 59 61 2 (set (reg/f:DI 0 ax [358])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:48 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 2 (set (reg/f:DI 0 ax [orig:78 D.7547 ] [78])
        (mem/f/j:DI (reg/f:DI 0 ax [358]) [0 f_5(D)->m+0 S8 A64])) backflip.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [358])
        (nil)))
(insn 62 61 63 2 (set (reg:DF 22 xmm1 [orig:79 D.7548 ] [79])
        (mem/j:DF (reg/f:DI 0 ax [orig:78 D.7547 ] [78]) [0 _26->radius1+0 S8 A64])) backflip.c:48 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:78 D.7547 ] [78])
        (nil)))
(insn 63 62 64 2 (set (reg/f:DI 0 ax [359])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:48 87 {*movdi_internal_rex64}
     (nil))
(insn 64 63 65 2 (set (reg/f:DI 0 ax [orig:80 D.7547 ] [80])
        (mem/f/j:DI (reg/f:DI 0 ax [359]) [0 f_5(D)->m+0 S8 A64])) backflip.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [359])
        (nil)))
(insn 65 64 66 2 (set (reg:DF 21 xmm0 [orig:81 D.7548 ] [81])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:80 D.7547 ] [80])
                (const_int 8 [0x8])) [0 _28->radius2+0 S8 A64])) backflip.c:48 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:80 D.7547 ] [80])
        (nil)))
(insn 66 65 67 2 (set (reg:DF 21 xmm0 [orig:82 D.7548 ] [82])
        (plus:DF (reg:DF 21 xmm0 [orig:81 D.7548 ] [81])
            (reg:DF 22 xmm1 [orig:79 D.7548 ] [79]))) backflip.c:48 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:81 D.7548 ] [81])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:79 D.7548 ] [79])
            (nil))))
(insn 67 66 68 2 (set (reg:DF 21 xmm0 [orig:83 D.7548 ] [83])
        (plus:DF (reg:DF 21 xmm0 [orig:82 D.7548 ] [82])
            (reg:DF 21 xmm0 [orig:82 D.7548 ] [82]))) backflip.c:48 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:82 D.7548 ] [82])
        (nil)))
(insn 68 67 69 2 (set (reg:DF 1 dx [360])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S8 A64])) backflip.c:48 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000208166817117216851329430937767028809e-2 [0x0.a3d70a3d70a3d8p-6])
        (nil)))
(insn 69 68 70 2 (set (reg:DF 0 ax [361])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -496 [0xfffffffffffffe10])) [0 track_l+0 S8 A64])) backflip.c:48 133 {*movdf_internal_rex64}
     (nil))
(insn 70 69 71 2 (set (reg:DI 2 cx [362])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -560 [0xfffffffffffffdd0])) [0 space+0 S8 A64])) backflip.c:48 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 72 2 (set (reg:DF 23 xmm2)
        (reg:DF 21 xmm0 [orig:83 D.7548 ] [83])) backflip.c:48 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:83 D.7548 ] [83])
        (nil)))
(insn 72 71 830 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [360])) backflip.c:48 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [360])
        (nil)))
(insn 830 72 73 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:48 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 568)
        (nil)))
(insn 73 830 831 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [361])) backflip.c:48 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [361])
        (nil)))
(insn 831 73 74 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:48 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 569)
        (nil)))
(insn 74 831 75 2 (set (reg:DI 5 di)
        (reg:DI 2 cx [362])) backflip.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [362])
        (nil)))
(call_insn 75 74 76 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dCreateBox") [flags 0x41]  <function_decl 0x1000041200 dCreateBox>) [0 dCreateBox S1 A8])
            (const_int 0 [0]))) backflip.c:48 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 76 75 77 2 (set (reg/f:DI 0 ax [orig:84 D.7550 ] [84])
        (reg:DI 0 ax)) backflip.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 77 76 78 2 (set (reg/f:DI 1 dx [363])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:48 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [363])
                (const_int 464 [0x1d0])) [0 f_5(D)->planeGeom1+0 S8 A64])
        (reg/f:DI 0 ax [orig:84 D.7550 ] [84])) backflip.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [363])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:84 D.7550 ] [84])
            (nil))))
(insn 79 78 80 2 (set (reg/f:DI 0 ax [364])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:49 87 {*movdi_internal_rex64}
     (nil))
(insn 80 79 81 2 (set (reg/f:DI 1 dx [orig:85 D.7546 ] [85])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [364])
                (const_int 16 [0x10])) [0 f_5(D)->flipBody+0 S8 A64])) backflip.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [364])
        (nil)))
(insn 81 80 82 2 (set (reg/f:DI 0 ax [365])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:49 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 2 (set (reg/f:DI 0 ax [orig:86 D.7550 ] [86])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [365])
                (const_int 464 [0x1d0])) [0 f_5(D)->planeGeom1+0 S8 A64])) backflip.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [365])
        (nil)))
(insn 83 82 84 2 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:85 D.7546 ] [85])) backflip.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:85 D.7546 ] [85])
        (nil)))
(insn 84 83 85 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:86 D.7550 ] [86])) backflip.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:86 D.7550 ] [86])
        (nil)))
(call_insn 85 84 86 2 (call (mem:QI (symbol_ref:DI ("dGeomSetBody") [flags 0x41]  <function_decl 0x10000f3900 dGeomSetBody>) [0 dGeomSetBody S1 A8])
        (const_int 0 [0])) backflip.c:49 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 86 85 87 2 (set (reg/f:DI 0 ax [366])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:50 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 2 (set (reg/f:DI 0 ax [orig:87 D.7550 ] [87])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [366])
                (const_int 464 [0x1d0])) [0 f_5(D)->planeGeom1+0 S8 A64])) backflip.c:50 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [366])
        (nil)))
(insn 88 87 89 2 (set (reg:DI 4 si)
        (const_int 16 [0x10])) backflip.c:50 87 {*movdi_internal_rex64}
     (nil))
(insn 89 88 90 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 D.7550 ] [87])) backflip.c:50 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 D.7550 ] [87])
        (nil)))
(call_insn 90 89 91 2 (call (mem:QI (symbol_ref:DI ("dGeomSetCategoryBits") [flags 0x41]  <function_decl 0x10000f9d00 dGeomSetCategoryBits>) [0 dGeomSetCategoryBits S1 A8])
        (const_int 0 [0])) backflip.c:50 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 91 90 92 2 (set (reg/f:DI 0 ax [367])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:51 87 {*movdi_internal_rex64}
     (nil))
(insn 92 91 93 2 (set (reg/f:DI 0 ax [orig:88 D.7550 ] [88])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [367])
                (const_int 464 [0x1d0])) [0 f_5(D)->planeGeom1+0 S8 A64])) backflip.c:51 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [367])
        (nil)))
(insn 93 92 94 2 (set (reg:DI 4 si)
        (const_int 11 [0xb])) backflip.c:51 87 {*movdi_internal_rex64}
     (nil))
(insn 94 93 95 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:88 D.7550 ] [88])) backflip.c:51 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:88 D.7550 ] [88])
        (nil)))
(call_insn 95 94 96 2 (call (mem:QI (symbol_ref:DI ("dGeomSetCollideBits") [flags 0x41]  <function_decl 0x10000fa100 dGeomSetCollideBits>) [0 dGeomSetCollideBits S1 A8])
        (const_int 0 [0])) backflip.c:51 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 96 95 97 2 (set (reg/f:DI 0 ax [368])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:53 87 {*movdi_internal_rex64}
     (nil))
(insn 97 96 98 2 (set (reg:DF 0 ax [orig:89 D.7548 ] [89])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [368])
                (const_int 544 [0x220])) [0 f_5(D)->zOffset+0 S8 A64])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [368])
        (nil)))
(insn 98 97 99 2 (set (reg/f:DI 1 dx [369])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:53 87 {*movdi_internal_rex64}
     (nil))
(insn 99 98 100 2 (set (reg:DF 22 xmm1 [orig:90 D.7548 ] [90])
        (mem/j:DF (plus:DI (reg/f:DI 1 dx [369])
                (const_int 536 [0x218])) [0 f_5(D)->yOffset+0 S8 A64])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [369])
        (nil)))
(insn 100 99 101 2 (set (reg/f:DI 1 dx [370])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:53 87 {*movdi_internal_rex64}
     (nil))
(insn 101 100 102 2 (set (reg/f:DI 1 dx [orig:91 D.7547 ] [91])
        (mem/f/j:DI (reg/f:DI 1 dx [370]) [0 f_5(D)->m+0 S8 A64])) backflip.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [370])
        (nil)))
(insn 102 101 103 2 (set (reg:DF 21 xmm0 [orig:92 D.7548 ] [92])
        (mem/j:DF (plus:DI (reg/f:DI 1 dx [orig:91 D.7547 ] [91])
                (const_int 56 [0x38])) [0 _40->flipDepth+0 S8 A64])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:91 D.7547 ] [91])
        (nil)))
(insn 103 102 104 2 (set (reg:DF 23 xmm2 [371])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 104 103 105 2 (set (reg:DF 21 xmm0 [orig:93 D.7548 ] [93])
        (div:DF (reg:DF 21 xmm0 [orig:92 D.7548 ] [92])
            (reg:DF 23 xmm2 [371]))) backflip.c:53 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [371])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:92 D.7548 ] [92])
            (nil))))
(insn 105 104 106 2 (set (reg:DF 21 xmm0 [orig:94 D.7548 ] [94])
        (plus:DF (reg:DF 21 xmm0 [orig:93 D.7548 ] [93])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -504 [0xfffffffffffffe08])) [0 planeYCompliance+0 S8 A64]))) backflip.c:53 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:93 D.7548 ] [93])
        (nil)))
(insn 106 105 107 2 (set (reg:DF 22 xmm1 [orig:95 D.7548 ] [95])
        (minus:DF (reg:DF 22 xmm1 [orig:90 D.7548 ] [90])
            (reg:DF 21 xmm0 [orig:94 D.7548 ] [94]))) backflip.c:53 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:94 D.7548 ] [94])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:90 D.7548 ] [90])
            (nil))))
(insn 107 106 108 2 (set (reg/f:DI 1 dx [372])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:53 87 {*movdi_internal_rex64}
     (nil))
(insn 108 107 109 2 (set (reg:DF 23 xmm2 [orig:96 D.7548 ] [96])
        (mem/j:DF (plus:DI (reg/f:DI 1 dx [372])
                (const_int 528 [0x210])) [0 f_5(D)->xOffset+0 S8 A64])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [372])
        (nil)))
(insn 109 108 110 2 (set (reg/f:DI 1 dx [373])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:53 87 {*movdi_internal_rex64}
     (nil))
(insn 110 109 111 2 (set (reg/f:DI 1 dx [orig:97 D.7547 ] [97])
        (mem/f/j:DI (reg/f:DI 1 dx [373]) [0 f_5(D)->m+0 S8 A64])) backflip.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [373])
        (nil)))
(insn 111 110 112 2 (set (reg:DF 21 xmm0 [orig:98 D.7548 ] [98])
        (mem/j:DF (plus:DI (reg/f:DI 1 dx [orig:97 D.7547 ] [97])
                (const_int 16 [0x10])) [0 _46->distance+0 S8 A64])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:97 D.7547 ] [97])
        (nil)))
(insn 112 111 113 2 (set (reg:DF 24 xmm3 [374])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 113 112 114 2 (set (reg:DF 21 xmm0 [orig:99 D.7548 ] [99])
        (div:DF (reg:DF 21 xmm0 [orig:98 D.7548 ] [98])
            (reg:DF 24 xmm3 [374]))) backflip.c:53 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 24 xmm3 [374])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:98 D.7548 ] [98])
            (nil))))
(insn 114 113 115 2 (set (reg:DF 21 xmm0 [orig:100 D.7548 ] [100])
        (plus:DF (reg:DF 21 xmm0 [orig:99 D.7548 ] [99])
            (reg:DF 23 xmm2 [orig:96 D.7548 ] [96]))) backflip.c:53 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:99 D.7548 ] [99])
        (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:96 D.7548 ] [96])
            (nil))))
(insn 115 114 116 2 (set (reg/f:DI 1 dx [375])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:53 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 117 2 (set (reg/f:DI 1 dx [orig:101 D.7550 ] [101])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [375])
                (const_int 464 [0x1d0])) [0 f_5(D)->planeGeom1+0 S8 A64])) backflip.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [375])
        (nil)))
(insn 117 116 832 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:89 D.7548 ] [89])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:89 D.7548 ] [89])
        (nil)))
(insn 832 117 118 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 570)
        (nil)))
(insn 118 832 119 2 (set (reg:DF 22 xmm1)
        (reg:DF 22 xmm1 [orig:95 D.7548 ] [95])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:95 D.7548 ] [95])
        (nil)))
(insn 119 118 120 2 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:100 D.7548 ] [100])) backflip.c:53 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:100 D.7548 ] [100])
        (nil)))
(insn 120 119 121 2 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:101 D.7550 ] [101])) backflip.c:53 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:101 D.7550 ] [101])
        (nil)))
(call_insn 121 120 122 2 (call (mem:QI (symbol_ref:DI ("dGeomSetOffsetPosition") [flags 0x41]  <function_decl 0x1000037800 dGeomSetOffsetPosition>) [0 dGeomSetOffsetPosition S1 A8])
        (const_int 0 [0])) backflip.c:53 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 122 121 123 2 (set (reg/f:DI 0 ax [376])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:54 87 {*movdi_internal_rex64}
     (nil))
(insn 123 122 124 2 (set (reg/f:DI 0 ax [orig:102 D.7550 ] [102])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [376])
                (const_int 464 [0x1d0])) [0 f_5(D)->planeGeom1+0 S8 A64])) backflip.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [376])
        (nil)))
(insn 124 123 125 2 (parallel [
            (set (reg:DI 1 dx [377])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -400 [0xfffffffffffffe70])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:54 274 {*adddi_1}
     (nil))
(insn 125 124 126 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [377])) backflip.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [377])
        (nil)))
(insn 126 125 127 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:102 D.7550 ] [102])) backflip.c:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:102 D.7550 ] [102])
        (nil)))
(call_insn 127 126 128 2 (call (mem:QI (symbol_ref:DI ("dGeomSetRotation") [flags 0x41]  <function_decl 0x10000f3f00 dGeomSetRotation>) [0 dGeomSetRotation S1 A8])
        (const_int 0 [0])) backflip.c:54 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 128 127 129 2 (set (reg/f:DI 0 ax [378])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 129 128 130 2 (set (reg/f:DI 0 ax [orig:103 D.7547 ] [103])
        (mem/f/j:DI (reg/f:DI 0 ax [378]) [0 f_5(D)->m+0 S8 A64])) backflip.c:61 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [378])
        (nil)))
(insn 130 129 131 2 (set (reg:DF 22 xmm1 [orig:104 D.7548 ] [104])
        (mem/j:DF (reg/f:DI 0 ax [orig:103 D.7547 ] [103]) [0 _52->radius1+0 S8 A64])) backflip.c:61 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:103 D.7547 ] [103])
        (nil)))
(insn 131 130 132 2 (set (reg/f:DI 0 ax [379])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 132 131 133 2 (set (reg/f:DI 0 ax [orig:105 D.7547 ] [105])
        (mem/f/j:DI (reg/f:DI 0 ax [379]) [0 f_5(D)->m+0 S8 A64])) backflip.c:61 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [379])
        (nil)))
(insn 133 132 134 2 (set (reg:DF 21 xmm0 [orig:106 D.7548 ] [106])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:105 D.7547 ] [105])
                (const_int 8 [0x8])) [0 _54->radius2+0 S8 A64])) backflip.c:61 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:105 D.7547 ] [105])
        (nil)))
(insn 134 133 135 2 (set (reg:DF 21 xmm0 [orig:107 D.7548 ] [107])
        (plus:DF (reg:DF 21 xmm0 [orig:106 D.7548 ] [106])
            (reg:DF 22 xmm1 [orig:104 D.7548 ] [104]))) backflip.c:61 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:106 D.7548 ] [106])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:104 D.7548 ] [104])
            (nil))))
(insn 135 134 136 2 (set (reg:DF 21 xmm0 [orig:108 D.7548 ] [108])
        (plus:DF (reg:DF 21 xmm0 [orig:107 D.7548 ] [107])
            (reg:DF 21 xmm0 [orig:107 D.7548 ] [107]))) backflip.c:61 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:107 D.7548 ] [107])
        (nil)))
(insn 136 135 137 2 (set (reg:DF 1 dx [380])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S8 A64])) backflip.c:61 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000208166817117216851329430937767028809e-2 [0x0.a3d70a3d70a3d8p-6])
        (nil)))
(insn 137 136 138 2 (set (reg:DF 0 ax [381])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -496 [0xfffffffffffffe10])) [0 track_l+0 S8 A64])) backflip.c:61 133 {*movdf_internal_rex64}
     (nil))
(insn 138 137 139 2 (set (reg:DI 2 cx [382])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -560 [0xfffffffffffffdd0])) [0 space+0 S8 A64])) backflip.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 139 138 140 2 (set (reg:DF 23 xmm2)
        (reg:DF 21 xmm0 [orig:108 D.7548 ] [108])) backflip.c:61 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:108 D.7548 ] [108])
        (nil)))
(insn 140 139 833 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [380])) backflip.c:61 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [380])
        (nil)))
(insn 833 140 141 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:61 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 571)
        (nil)))
(insn 141 833 834 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [381])) backflip.c:61 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [381])
        (nil)))
(insn 834 141 142 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:61 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 572)
        (nil)))
(insn 142 834 143 2 (set (reg:DI 5 di)
        (reg:DI 2 cx [382])) backflip.c:61 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [382])
        (nil)))
(call_insn 143 142 144 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dCreateBox") [flags 0x41]  <function_decl 0x1000041200 dCreateBox>) [0 dCreateBox S1 A8])
            (const_int 0 [0]))) backflip.c:61 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 144 143 145 2 (set (reg/f:DI 0 ax [orig:109 D.7550 ] [109])
        (reg:DI 0 ax)) backflip.c:61 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 145 144 146 2 (set (reg/f:DI 1 dx [383])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:61 87 {*movdi_internal_rex64}
     (nil))
(insn 146 145 147 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [383])
                (const_int 472 [0x1d8])) [0 f_5(D)->planeGeom2+0 S8 A64])
        (reg/f:DI 0 ax [orig:109 D.7550 ] [109])) backflip.c:61 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [383])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:109 D.7550 ] [109])
            (nil))))
(insn 147 146 148 2 (set (reg/f:DI 0 ax [384])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:62 87 {*movdi_internal_rex64}
     (nil))
(insn 148 147 149 2 (set (reg/f:DI 1 dx [orig:110 D.7546 ] [110])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [384])
                (const_int 16 [0x10])) [0 f_5(D)->flipBody+0 S8 A64])) backflip.c:62 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [384])
        (nil)))
(insn 149 148 150 2 (set (reg/f:DI 0 ax [385])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:62 87 {*movdi_internal_rex64}
     (nil))
(insn 150 149 151 2 (set (reg/f:DI 0 ax [orig:111 D.7550 ] [111])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [385])
                (const_int 472 [0x1d8])) [0 f_5(D)->planeGeom2+0 S8 A64])) backflip.c:62 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [385])
        (nil)))
(insn 151 150 152 2 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:110 D.7546 ] [110])) backflip.c:62 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:110 D.7546 ] [110])
        (nil)))
(insn 152 151 153 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:111 D.7550 ] [111])) backflip.c:62 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:111 D.7550 ] [111])
        (nil)))
(call_insn 153 152 154 2 (call (mem:QI (symbol_ref:DI ("dGeomSetBody") [flags 0x41]  <function_decl 0x10000f3900 dGeomSetBody>) [0 dGeomSetBody S1 A8])
        (const_int 0 [0])) backflip.c:62 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 154 153 155 2 (set (reg/f:DI 0 ax [386])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:63 87 {*movdi_internal_rex64}
     (nil))
(insn 155 154 156 2 (set (reg/f:DI 0 ax [orig:112 D.7550 ] [112])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [386])
                (const_int 472 [0x1d8])) [0 f_5(D)->planeGeom2+0 S8 A64])) backflip.c:63 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [386])
        (nil)))
(insn 156 155 157 2 (set (reg:DI 4 si)
        (const_int 16 [0x10])) backflip.c:63 87 {*movdi_internal_rex64}
     (nil))
(insn 157 156 158 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:112 D.7550 ] [112])) backflip.c:63 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:112 D.7550 ] [112])
        (nil)))
(call_insn 158 157 159 2 (call (mem:QI (symbol_ref:DI ("dGeomSetCategoryBits") [flags 0x41]  <function_decl 0x10000f9d00 dGeomSetCategoryBits>) [0 dGeomSetCategoryBits S1 A8])
        (const_int 0 [0])) backflip.c:63 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 159 158 160 2 (set (reg/f:DI 0 ax [387])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:64 87 {*movdi_internal_rex64}
     (nil))
(insn 160 159 161 2 (set (reg/f:DI 0 ax [orig:113 D.7550 ] [113])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [387])
                (const_int 472 [0x1d8])) [0 f_5(D)->planeGeom2+0 S8 A64])) backflip.c:64 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [387])
        (nil)))
(insn 161 160 162 2 (set (reg:DI 4 si)
        (const_int 11 [0xb])) backflip.c:64 87 {*movdi_internal_rex64}
     (nil))
(insn 162 161 163 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:113 D.7550 ] [113])) backflip.c:64 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:113 D.7550 ] [113])
        (nil)))
(call_insn 163 162 164 2 (call (mem:QI (symbol_ref:DI ("dGeomSetCollideBits") [flags 0x41]  <function_decl 0x10000fa100 dGeomSetCollideBits>) [0 dGeomSetCollideBits S1 A8])
        (const_int 0 [0])) backflip.c:64 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 164 163 165 2 (set (reg/f:DI 0 ax [388])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:65 87 {*movdi_internal_rex64}
     (nil))
(insn 165 164 166 2 (set (reg:DF 0 ax [orig:114 D.7548 ] [114])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [388])
                (const_int 544 [0x220])) [0 f_5(D)->zOffset+0 S8 A64])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [388])
        (nil)))
(insn 166 165 167 2 (set (reg/f:DI 1 dx [389])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:65 87 {*movdi_internal_rex64}
     (nil))
(insn 167 166 168 2 (set (reg:DF 22 xmm1 [orig:115 D.7548 ] [115])
        (mem/j:DF (plus:DI (reg/f:DI 1 dx [389])
                (const_int 536 [0x218])) [0 f_5(D)->yOffset+0 S8 A64])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [389])
        (nil)))
(insn 168 167 169 2 (set (reg/f:DI 1 dx [390])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:65 87 {*movdi_internal_rex64}
     (nil))
(insn 169 168 170 2 (set (reg/f:DI 1 dx [orig:116 D.7547 ] [116])
        (mem/f/j:DI (reg/f:DI 1 dx [390]) [0 f_5(D)->m+0 S8 A64])) backflip.c:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [390])
        (nil)))
(insn 170 169 171 2 (set (reg:DF 21 xmm0 [orig:117 D.7548 ] [117])
        (mem/j:DF (plus:DI (reg/f:DI 1 dx [orig:116 D.7547 ] [116])
                (const_int 56 [0x38])) [0 _65->flipDepth+0 S8 A64])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:116 D.7547 ] [116])
        (nil)))
(insn 171 170 172 2 (set (reg:DF 23 xmm2 [391])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 172 171 173 2 (set (reg:DF 21 xmm0 [orig:118 D.7548 ] [118])
        (div:DF (reg:DF 21 xmm0 [orig:117 D.7548 ] [117])
            (reg:DF 23 xmm2 [391]))) backflip.c:65 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [391])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:117 D.7548 ] [117])
            (nil))))
(insn 173 172 835 2 (set (reg:DF 21 xmm0 [orig:119 D.7548 ] [119])
        (plus:DF (reg:DF 21 xmm0 [orig:118 D.7548 ] [118])
            (reg:DF 22 xmm1 [orig:115 D.7548 ] [115]))) backflip.c:65 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:118 D.7548 ] [118])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:115 D.7548 ] [115])
            (nil))))
(insn 835 173 174 2 (set (reg:DF 22 xmm1 [orig:120 D.7548 ] [120])
        (reg:DF 21 xmm0 [orig:119 D.7548 ] [119])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:119 D.7548 ] [119])
        (nil)))
(insn 174 835 836 2 (set (reg:DF 22 xmm1 [orig:120 D.7548 ] [120])
        (plus:DF (reg:DF 22 xmm1 [orig:120 D.7548 ] [120])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -504 [0xfffffffffffffe08])) [0 planeYCompliance+0 S8 A64]))) backflip.c:65 778 {*fop_df_comm_sse}
     (nil))
(insn 836 174 175 2 (set (reg:DF 22 xmm1 [orig:120 D.7548 ] [120])
        (reg:DF 22 xmm1 [orig:120 D.7548 ] [120])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:120 D.7548 ] [120])
        (nil)))
(insn 175 836 176 2 (set (reg/f:DI 1 dx [392])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:65 87 {*movdi_internal_rex64}
     (nil))
(insn 176 175 177 2 (set (reg:DF 23 xmm2 [orig:121 D.7548 ] [121])
        (mem/j:DF (plus:DI (reg/f:DI 1 dx [392])
                (const_int 528 [0x210])) [0 f_5(D)->xOffset+0 S8 A64])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [392])
        (nil)))
(insn 177 176 178 2 (set (reg/f:DI 1 dx [393])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:65 87 {*movdi_internal_rex64}
     (nil))
(insn 178 177 179 2 (set (reg/f:DI 1 dx [orig:122 D.7547 ] [122])
        (mem/f/j:DI (reg/f:DI 1 dx [393]) [0 f_5(D)->m+0 S8 A64])) backflip.c:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [393])
        (nil)))
(insn 179 178 180 2 (set (reg:DF 21 xmm0 [orig:123 D.7548 ] [123])
        (mem/j:DF (plus:DI (reg/f:DI 1 dx [orig:122 D.7547 ] [122])
                (const_int 16 [0x10])) [0 _71->distance+0 S8 A64])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:122 D.7547 ] [122])
        (nil)))
(insn 180 179 181 2 (set (reg:DF 24 xmm3 [394])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S8 A64])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 181 180 182 2 (set (reg:DF 21 xmm0 [orig:124 D.7548 ] [124])
        (div:DF (reg:DF 21 xmm0 [orig:123 D.7548 ] [123])
            (reg:DF 24 xmm3 [394]))) backflip.c:65 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 24 xmm3 [394])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:123 D.7548 ] [123])
            (nil))))
(insn 182 181 183 2 (set (reg:DF 21 xmm0 [orig:125 D.7548 ] [125])
        (plus:DF (reg:DF 21 xmm0 [orig:124 D.7548 ] [124])
            (reg:DF 23 xmm2 [orig:121 D.7548 ] [121]))) backflip.c:65 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:124 D.7548 ] [124])
        (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:121 D.7548 ] [121])
            (nil))))
(insn 183 182 184 2 (set (reg/f:DI 1 dx [395])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:65 87 {*movdi_internal_rex64}
     (nil))
(insn 184 183 185 2 (set (reg/f:DI 1 dx [orig:126 D.7550 ] [126])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [395])
                (const_int 472 [0x1d8])) [0 f_5(D)->planeGeom2+0 S8 A64])) backflip.c:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [395])
        (nil)))
(insn 185 184 837 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:114 D.7548 ] [114])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:114 D.7548 ] [114])
        (nil)))
(insn 837 185 186 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 574)
        (nil)))
(insn 186 837 187 2 (set (reg:DF 22 xmm1)
        (reg:DF 22 xmm1 [orig:120 D.7548 ] [120])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:120 D.7548 ] [120])
        (nil)))
(insn 187 186 188 2 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:125 D.7548 ] [125])) backflip.c:65 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:125 D.7548 ] [125])
        (nil)))
(insn 188 187 189 2 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:126 D.7550 ] [126])) backflip.c:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:126 D.7550 ] [126])
        (nil)))
(call_insn 189 188 190 2 (call (mem:QI (symbol_ref:DI ("dGeomSetOffsetPosition") [flags 0x41]  <function_decl 0x1000037800 dGeomSetOffsetPosition>) [0 dGeomSetOffsetPosition S1 A8])
        (const_int 0 [0])) backflip.c:65 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 190 189 191 2 (set (reg/f:DI 0 ax [396])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:66 87 {*movdi_internal_rex64}
     (nil))
(insn 191 190 192 2 (set (reg/f:DI 0 ax [orig:127 D.7550 ] [127])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [396])
                (const_int 472 [0x1d8])) [0 f_5(D)->planeGeom2+0 S8 A64])) backflip.c:66 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [396])
        (nil)))
(insn 192 191 193 2 (parallel [
            (set (reg:DI 1 dx [397])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -400 [0xfffffffffffffe70])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:66 274 {*adddi_1}
     (nil))
(insn 193 192 194 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [397])) backflip.c:66 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [397])
        (nil)))
(insn 194 193 195 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:127 D.7550 ] [127])) backflip.c:66 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:127 D.7550 ] [127])
        (nil)))
(call_insn 195 194 196 2 (call (mem:QI (symbol_ref:DI ("dGeomSetRotation") [flags 0x41]  <function_decl 0x10000f3f00 dGeomSetRotation>) [0 dGeomSetRotation S1 A8])
        (const_int 0 [0])) backflip.c:66 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 196 195 197 2 (set (reg/f:DI 0 ax [398])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:70 87 {*movdi_internal_rex64}
     (nil))
(insn 197 196 198 2 (set (reg/f:DI 0 ax [orig:128 D.7547 ] [128])
        (mem/f/j:DI (reg/f:DI 0 ax [398]) [0 f_5(D)->m+0 S8 A64])) backflip.c:70 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [398])
        (nil)))
(insn 198 197 199 2 (set (reg:DF 1 dx [orig:129 D.7548 ] [129])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:128 D.7547 ] [128])
                (const_int 56 [0x38])) [0 _77->flipDepth+0 S8 A64])) backflip.c:70 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:128 D.7547 ] [128])
        (nil)))
(insn 199 198 200 2 (set (reg/f:DI 0 ax [399])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:70 87 {*movdi_internal_rex64}
     (nil))
(insn 200 199 201 2 (set (reg/f:DI 0 ax [orig:130 D.7547 ] [130])
        (mem/f/j:DI (reg/f:DI 0 ax [399]) [0 f_5(D)->m+0 S8 A64])) backflip.c:70 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [399])
        (nil)))
(insn 201 200 202 2 (set (reg:DF 0 ax [orig:131 D.7548 ] [131])
        (mem/j:DF (reg/f:DI 0 ax [orig:130 D.7547 ] [130]) [0 _79->radius1+0 S8 A64])) backflip.c:70 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:130 D.7547 ] [130])
        (nil)))
(insn 202 201 203 2 (set (reg:DI 2 cx [400])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -560 [0xfffffffffffffdd0])) [0 space+0 S8 A64])) backflip.c:70 87 {*movdi_internal_rex64}
     (nil))
(insn 203 202 838 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:129 D.7548 ] [129])) backflip.c:70 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:129 D.7548 ] [129])
        (nil)))
(insn 838 203 204 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:70 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 575)
        (nil)))
(insn 204 838 839 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:131 D.7548 ] [131])) backflip.c:70 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:131 D.7548 ] [131])
        (nil)))
(insn 839 204 205 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:70 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 576)
        (nil)))
(insn 205 839 206 2 (set (reg:DI 5 di)
        (reg:DI 2 cx [400])) backflip.c:70 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [400])
        (nil)))
(call_insn 206 205 207 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dCreateCylinder") [flags 0x41]  <function_decl 0x100004e400 dCreateCylinder>) [0 dCreateCylinder S1 A8])
            (const_int 0 [0]))) backflip.c:70 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_DEAD (reg:DF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (nil)))))
(insn 207 206 208 2 (set (reg/f:DI 0 ax [orig:132 D.7550 ] [132])
        (reg:DI 0 ax)) backflip.c:70 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 208 207 209 2 (set (reg/f:DI 1 dx [401])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:70 87 {*movdi_internal_rex64}
     (nil))
(insn 209 208 210 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [401])
                (const_int 448 [0x1c0])) [0 f_5(D)->wheel1Geom+0 S8 A64])
        (reg/f:DI 0 ax [orig:132 D.7550 ] [132])) backflip.c:70 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [401])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:132 D.7550 ] [132])
            (nil))))
(insn 210 209 211 2 (set (reg/f:DI 0 ax [402])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:71 87 {*movdi_internal_rex64}
     (nil))
(insn 211 210 212 2 (set (reg/f:DI 0 ax [orig:133 D.7550 ] [133])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [402])
                (const_int 448 [0x1c0])) [0 f_5(D)->wheel1Geom+0 S8 A64])) backflip.c:71 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [402])
        (nil)))
(insn 212 211 213 2 (set (reg:DI 4 si)
        (const_int 9 [0x9])) backflip.c:71 87 {*movdi_internal_rex64}
     (nil))
(insn 213 212 214 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:133 D.7550 ] [133])) backflip.c:71 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:133 D.7550 ] [133])
        (nil)))
(call_insn 214 213 215 2 (call (mem:QI (symbol_ref:DI ("dGeomSetCategoryBits") [flags 0x41]  <function_decl 0x10000f9d00 dGeomSetCategoryBits>) [0 dGeomSetCategoryBits S1 A8])
        (const_int 0 [0])) backflip.c:71 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 215 214 216 2 (set (reg/f:DI 0 ax [403])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 216 215 217 2 (set (reg/f:DI 0 ax [orig:134 D.7550 ] [134])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [403])
                (const_int 448 [0x1c0])) [0 f_5(D)->wheel1Geom+0 S8 A64])) backflip.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [403])
        (nil)))
(insn 217 216 218 2 (set (reg:DI 4 si)
        (const_int 18 [0x12])) backflip.c:72 87 {*movdi_internal_rex64}
     (nil))
(insn 218 217 219 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:134 D.7550 ] [134])) backflip.c:72 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:134 D.7550 ] [134])
        (nil)))
(call_insn 219 218 220 2 (call (mem:QI (symbol_ref:DI ("dGeomSetCollideBits") [flags 0x41]  <function_decl 0x10000fa100 dGeomSetCollideBits>) [0 dGeomSetCollideBits S1 A8])
        (const_int 0 [0])) backflip.c:72 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 220 219 221 2 (set (reg/f:DI 0 ax [404])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 221 220 222 2 (set (reg/f:DI 0 ax [orig:135 D.7547 ] [135])
        (mem/f/j:DI (reg/f:DI 0 ax [404]) [0 f_5(D)->m+0 S8 A64])) backflip.c:73 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [404])
        (nil)))
(insn 222 221 223 2 (set (reg:DF 2 cx [orig:136 D.7548 ] [136])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:135 D.7547 ] [135])
                (const_int 56 [0x38])) [0 _84->flipDepth+0 S8 A64])) backflip.c:73 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:135 D.7547 ] [135])
        (nil)))
(insn 223 222 224 2 (set (reg/f:DI 0 ax [405])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 224 223 225 2 (set (reg/f:DI 0 ax [orig:137 D.7547 ] [137])
        (mem/f/j:DI (reg/f:DI 0 ax [405]) [0 f_5(D)->m+0 S8 A64])) backflip.c:73 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [405])
        (nil)))
(insn 225 224 226 2 (set (reg:DF 1 dx [orig:138 D.7548 ] [138])
        (mem/j:DF (reg/f:DI 0 ax [orig:137 D.7547 ] [137]) [0 _86->radius1+0 S8 A64])) backflip.c:73 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:137 D.7547 ] [137])
        (nil)))
(insn 226 225 227 2 (set (reg/f:DI 0 ax [406])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 227 226 228 2 (set (reg:DF 0 ax [orig:139 D.7548 ] [139])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [406])
                (const_int 8 [0x8])) [0 f_5(D)->density+0 S8 A64])) backflip.c:73 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [406])
        (nil)))
(insn 228 227 229 2 (set (reg/f:DI 4 si [407])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:73 87 {*movdi_internal_rex64}
     (nil))
(insn 229 228 230 2 (parallel [
            (set (reg/f:DI 5 di [orig:140 D.7549 ] [140])
                (plus:DI (reg/f:DI 4 si [407])
                    (const_int 176 [0xb0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:73 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 4 si [407])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -520 [0xfffffffffffffdf8])) [0 f+0 S8 A64])
                (const_int 176 [0xb0]))
            (nil))))
(insn 230 229 840 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 2 cx [orig:136 D.7548 ] [136])) backflip.c:73 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 2 cx [orig:136 D.7548 ] [136])
        (nil)))
(insn 840 230 231 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:73 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 577)
        (nil)))
(insn 231 840 841 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:138 D.7548 ] [138])) backflip.c:73 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:138 D.7548 ] [138])
        (nil)))
(insn 841 231 232 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:73 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 578)
        (nil)))
(insn 232 841 233 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) backflip.c:73 89 {*movsi_internal}
     (nil))
(insn 233 232 842 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:139 D.7548 ] [139])) backflip.c:73 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:139 D.7548 ] [139])
        (nil)))
(insn 842 233 234 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:73 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 579)
        (nil)))
(insn 234 842 235 2 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:140 D.7549 ] [140])) backflip.c:73 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:140 D.7549 ] [140])
        (nil)))
(call_insn 235 234 236 2 (call (mem:QI (symbol_ref:DI ("dMassSetCylinder") [flags 0x41]  <function_decl 0x10000c4800 dMassSetCylinder>) [0 dMassSetCylinder S1 A8])
        (const_int 0 [0])) backflip.c:73 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:DF (use (reg:DF 22 xmm1))
                    (expr_list:DF (use (reg:DF 23 xmm2))
                        (nil)))))))
(insn 236 235 237 2 (set (reg:DI 0 ax [408])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 world+0 S8 A64])) backflip.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 237 236 238 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [408])) backflip.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [408])
        (nil)))
(call_insn 238 237 239 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dBodyCreate") [flags 0x41]  <function_decl 0x1000054700 dBodyCreate>) [0 dBodyCreate S1 A8])
            (const_int 0 [0]))) backflip.c:74 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 239 238 240 2 (set (reg/f:DI 0 ax [orig:141 D.7546 ] [141])
        (reg:DI 0 ax)) backflip.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 240 239 241 2 (set (reg/f:DI 1 dx [409])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:74 87 {*movdi_internal_rex64}
     (nil))
(insn 241 240 242 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [409])
                (const_int 24 [0x18])) [0 f_5(D)->wheel1Body+0 S8 A64])
        (reg/f:DI 0 ax [orig:141 D.7546 ] [141])) backflip.c:74 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [409])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:141 D.7546 ] [141])
            (nil))))
(insn 242 241 243 2 (set (reg/f:DI 0 ax [410])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 243 242 244 2 (parallel [
            (set (reg/f:DI 1 dx [orig:142 D.7549 ] [142])
                (plus:DI (reg/f:DI 0 ax [410])
                    (const_int 176 [0xb0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:75 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [410])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -520 [0xfffffffffffffdf8])) [0 f+0 S8 A64])
                (const_int 176 [0xb0]))
            (nil))))
(insn 244 243 245 2 (set (reg/f:DI 0 ax [411])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:75 87 {*movdi_internal_rex64}
     (nil))
(insn 245 244 246 2 (set (reg/f:DI 0 ax [orig:143 D.7546 ] [143])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [411])
                (const_int 24 [0x18])) [0 f_5(D)->wheel1Body+0 S8 A64])) backflip.c:75 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [411])
        (nil)))
(insn 246 245 247 2 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:142 D.7549 ] [142])) backflip.c:75 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:142 D.7549 ] [142])
        (nil)))
(insn 247 246 248 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:143 D.7546 ] [143])) backflip.c:75 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:143 D.7546 ] [143])
        (nil)))
(call_insn 248 247 249 2 (call (mem:QI (symbol_ref:DI ("dBodySetMass") [flags 0x41]  <function_decl 0x100005b200 dBodySetMass>) [0 dBodySetMass S1 A8])
        (const_int 0 [0])) backflip.c:75 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 249 248 250 2 (set (reg/f:DI 0 ax [412])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 250 249 251 2 (set (reg/f:DI 1 dx [orig:144 D.7546 ] [144])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [412])
                (const_int 24 [0x18])) [0 f_5(D)->wheel1Body+0 S8 A64])) backflip.c:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [412])
        (nil)))
(insn 251 250 252 2 (set (reg/f:DI 0 ax [413])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:76 87 {*movdi_internal_rex64}
     (nil))
(insn 252 251 253 2 (set (reg/f:DI 0 ax [orig:145 D.7550 ] [145])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [413])
                (const_int 448 [0x1c0])) [0 f_5(D)->wheel1Geom+0 S8 A64])) backflip.c:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [413])
        (nil)))
(insn 253 252 254 2 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:144 D.7546 ] [144])) backflip.c:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:144 D.7546 ] [144])
        (nil)))
(insn 254 253 255 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:145 D.7550 ] [145])) backflip.c:76 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:145 D.7550 ] [145])
        (nil)))
(call_insn 255 254 256 2 (call (mem:QI (symbol_ref:DI ("dGeomSetBody") [flags 0x41]  <function_decl 0x10000f3900 dGeomSetBody>) [0 dGeomSetBody S1 A8])
        (const_int 0 [0])) backflip.c:76 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 256 255 257 2 (set (reg/f:DI 0 ax [414])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 257 256 258 2 (set (reg:DF 2 cx [orig:146 D.7548 ] [146])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [414])
                (const_int 544 [0x220])) [0 f_5(D)->zOffset+0 S8 A64])) backflip.c:78 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [414])
        (nil)))
(insn 258 257 259 2 (set (reg/f:DI 0 ax [415])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 259 258 260 2 (set (reg:DF 1 dx [orig:147 D.7548 ] [147])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [415])
                (const_int 536 [0x218])) [0 f_5(D)->yOffset+0 S8 A64])) backflip.c:78 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [415])
        (nil)))
(insn 260 259 261 2 (set (reg/f:DI 0 ax [416])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 261 260 262 2 (set (reg:DF 0 ax [orig:148 D.7548 ] [148])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [416])
                (const_int 528 [0x210])) [0 f_5(D)->xOffset+0 S8 A64])) backflip.c:78 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [416])
        (nil)))
(insn 262 261 263 2 (set (reg/f:DI 4 si [417])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:78 87 {*movdi_internal_rex64}
     (nil))
(insn 263 262 264 2 (set (reg/f:DI 4 si [orig:149 D.7546 ] [149])
        (mem/f/j:DI (plus:DI (reg/f:DI 4 si [417])
                (const_int 24 [0x18])) [0 f_5(D)->wheel1Body+0 S8 A64])) backflip.c:78 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [417])
        (nil)))
(insn 264 263 843 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 2 cx [orig:146 D.7548 ] [146])) backflip.c:78 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 2 cx [orig:146 D.7548 ] [146])
        (nil)))
(insn 843 264 265 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:78 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 580)
        (nil)))
(insn 265 843 844 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:147 D.7548 ] [147])) backflip.c:78 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:147 D.7548 ] [147])
        (nil)))
(insn 844 265 266 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:78 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 581)
        (nil)))
(insn 266 844 845 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:148 D.7548 ] [148])) backflip.c:78 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:148 D.7548 ] [148])
        (nil)))
(insn 845 266 267 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:78 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 582)
        (nil)))
(insn 267 845 268 2 (set (reg:DI 5 di)
        (reg/f:DI 4 si [orig:149 D.7546 ] [149])) backflip.c:78 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:149 D.7546 ] [149])
        (nil)))
(call_insn 268 267 269 2 (call (mem:QI (symbol_ref:DI ("dBodySetPosition") [flags 0x41]  <function_decl 0x10000d6f00 dBodySetPosition>) [0 dBodySetPosition S1 A8])
        (const_int 0 [0])) backflip.c:78 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 269 268 270 2 (parallel [
            (set (reg:DI 0 ax [418])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:80 274 {*adddi_1}
     (nil))
(insn 270 269 271 2 (set (reg:DF 23 xmm2)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:80 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 271 270 272 2 (set (reg:DF 22 xmm1)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) backflip.c:80 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 272 271 273 2 (set (reg:DF 21 xmm0)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:80 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 273 272 274 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [418])) backflip.c:80 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [418])
        (nil)))
(call_insn 274 273 275 2 (call (mem:QI (symbol_ref:DI ("dRFromZAxis") [flags 0x41]  <function_decl 0x10000bb300 dRFromZAxis>) [0 dRFromZAxis S1 A8])
        (const_int 0 [0])) backflip.c:80 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 275 274 276 2 (set (reg/f:DI 0 ax [419])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:81 87 {*movdi_internal_rex64}
     (nil))
(insn 276 275 277 2 (set (reg/f:DI 0 ax [orig:150 D.7546 ] [150])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [419])
                (const_int 24 [0x18])) [0 f_5(D)->wheel1Body+0 S8 A64])) backflip.c:81 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [419])
        (nil)))
(insn 277 276 278 2 (parallel [
            (set (reg:DI 1 dx [420])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:81 274 {*adddi_1}
     (nil))
(insn 278 277 279 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [420])) backflip.c:81 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [420])
        (nil)))
(insn 279 278 280 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:150 D.7546 ] [150])) backflip.c:81 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:150 D.7546 ] [150])
        (nil)))
(call_insn 280 279 281 2 (call (mem:QI (symbol_ref:DI ("dBodySetRotation") [flags 0x41]  <function_decl 0x1000059400 dBodySetRotation>) [0 dBodySetRotation S1 A8])
        (const_int 0 [0])) backflip.c:81 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 281 280 282 2 (set (reg:DI 0 ax [421])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 world+0 S8 A64])) backflip.c:82 87 {*movdi_internal_rex64}
     (nil))
(insn 282 281 283 2 (set (reg:DI 4 si)
        (const_int 0 [0])) backflip.c:82 87 {*movdi_internal_rex64}
     (nil))
(insn 283 282 284 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [421])) backflip.c:82 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [421])
        (nil)))
(call_insn 284 283 285 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dJointCreateHinge") [flags 0x41]  <function_decl 0x100007fc00 dJointCreateHinge>) [0 dJointCreateHinge S1 A8])
            (const_int 0 [0]))) backflip.c:82 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 285 284 286 2 (set (reg/f:DI 0 ax [orig:151 D.7551 ] [151])
        (reg:DI 0 ax)) backflip.c:82 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 286 285 287 2 (set (reg/f:DI 1 dx [422])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:82 87 {*movdi_internal_rex64}
     (nil))
(insn 287 286 288 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [422])
                (const_int 480 [0x1e0])) [0 f_5(D)->wheel1Joint+0 S8 A64])
        (reg/f:DI 0 ax [orig:151 D.7551 ] [151])) backflip.c:82 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [422])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:151 D.7551 ] [151])
            (nil))))
(insn 288 287 289 2 (set (reg/f:DI 0 ax [423])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:84 87 {*movdi_internal_rex64}
     (nil))
(insn 289 288 290 2 (set (reg/f:DI 1 dx [orig:152 D.7546 ] [152])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [423])
                (const_int 24 [0x18])) [0 f_5(D)->wheel1Body+0 S8 A64])) backflip.c:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [423])
        (nil)))
(insn 290 289 291 2 (set (reg/f:DI 0 ax [424])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 t+0 S8 A64])) backflip.c:84 87 {*movdi_internal_rex64}
     (nil))
(insn 291 290 292 2 (set (reg/f:DI 2 cx [orig:153 D.7546 ] [153])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [424])
                (const_int 16 [0x10])) [0 t_102(D)->trackBody+0 S8 A64])) backflip.c:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [424])
        (nil)))
(insn 292 291 293 2 (set (reg/f:DI 0 ax [425])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:84 87 {*movdi_internal_rex64}
     (nil))
(insn 293 292 294 2 (set (reg/f:DI 0 ax [orig:154 D.7551 ] [154])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [425])
                (const_int 480 [0x1e0])) [0 f_5(D)->wheel1Joint+0 S8 A64])) backflip.c:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [425])
        (nil)))
(insn 294 293 295 2 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:152 D.7546 ] [152])) backflip.c:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:152 D.7546 ] [152])
        (nil)))
(insn 295 294 296 2 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:153 D.7546 ] [153])) backflip.c:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:153 D.7546 ] [153])
        (nil)))
(insn 296 295 297 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:154 D.7551 ] [154])) backflip.c:84 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:154 D.7551 ] [154])
        (nil)))
(call_insn 297 296 298 2 (call (mem:QI (symbol_ref:DI ("dJointAttach") [flags 0x41]  <function_decl 0x1000089700 dJointAttach>) [0 dJointAttach S1 A8])
        (const_int 0 [0])) backflip.c:84 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 298 297 299 2 (set (reg/f:DI 0 ax [426])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:86 87 {*movdi_internal_rex64}
     (nil))
(insn 299 298 300 2 (set (reg:DF 2 cx [orig:155 D.7548 ] [155])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [426])
                (const_int 544 [0x220])) [0 f_5(D)->zOffset+0 S8 A64])) backflip.c:86 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [426])
        (nil)))
(insn 300 299 301 2 (set (reg/f:DI 0 ax [427])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:86 87 {*movdi_internal_rex64}
     (nil))
(insn 301 300 302 2 (set (reg:DF 1 dx [orig:156 D.7548 ] [156])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [427])
                (const_int 536 [0x218])) [0 f_5(D)->yOffset+0 S8 A64])) backflip.c:86 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [427])
        (nil)))
(insn 302 301 303 2 (set (reg/f:DI 0 ax [428])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:86 87 {*movdi_internal_rex64}
     (nil))
(insn 303 302 304 2 (set (reg:DF 0 ax [orig:157 D.7548 ] [157])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [428])
                (const_int 528 [0x210])) [0 f_5(D)->xOffset+0 S8 A64])) backflip.c:86 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [428])
        (nil)))
(insn 304 303 305 2 (set (reg/f:DI 4 si [429])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:86 87 {*movdi_internal_rex64}
     (nil))
(insn 305 304 306 2 (set (reg/f:DI 4 si [orig:158 D.7551 ] [158])
        (mem/f/j:DI (plus:DI (reg/f:DI 4 si [429])
                (const_int 480 [0x1e0])) [0 f_5(D)->wheel1Joint+0 S8 A64])) backflip.c:86 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [429])
        (nil)))
(insn 306 305 846 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 2 cx [orig:155 D.7548 ] [155])) backflip.c:86 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 2 cx [orig:155 D.7548 ] [155])
        (nil)))
(insn 846 306 307 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:86 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 583)
        (nil)))
(insn 307 846 847 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:156 D.7548 ] [156])) backflip.c:86 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:156 D.7548 ] [156])
        (nil)))
(insn 847 307 308 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:86 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 584)
        (nil)))
(insn 308 847 848 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:157 D.7548 ] [157])) backflip.c:86 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:157 D.7548 ] [157])
        (nil)))
(insn 848 308 309 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:86 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 585)
        (nil)))
(insn 309 848 310 2 (set (reg:DI 5 di)
        (reg/f:DI 4 si [orig:158 D.7551 ] [158])) backflip.c:86 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:158 D.7551 ] [158])
        (nil)))
(call_insn 310 309 311 2 (call (mem:QI (symbol_ref:DI ("dJointSetHingeAnchor") [flags 0x41]  <function_decl 0x100008ef00 dJointSetHingeAnchor>) [0 dJointSetHingeAnchor S1 A8])
        (const_int 0 [0])) backflip.c:86 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 311 310 312 2 (set (reg/f:DI 0 ax [430])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:87 87 {*movdi_internal_rex64}
     (nil))
(insn 312 311 313 2 (set (reg/f:DI 0 ax [orig:159 D.7551 ] [159])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [430])
                (const_int 480 [0x1e0])) [0 f_5(D)->wheel1Joint+0 S8 A64])) backflip.c:87 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [430])
        (nil)))
(insn 313 312 314 2 (set (reg:DF 23 xmm2)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:87 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 314 313 315 2 (set (reg:DF 22 xmm1)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) backflip.c:87 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 315 314 316 2 (set (reg:DF 21 xmm0)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:87 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 316 315 317 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:159 D.7551 ] [159])) backflip.c:87 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:159 D.7551 ] [159])
        (nil)))
(call_insn 317 316 318 2 (call (mem:QI (symbol_ref:DI ("dJointSetHingeAxis") [flags 0x41]  <function_decl 0x100008f400 dJointSetHingeAxis>) [0 dJointSetHingeAxis S1 A8])
        (const_int 0 [0])) backflip.c:87 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 318 317 319 2 (set (reg/f:DI 0 ax [431])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 319 318 320 2 (set (reg/f:DI 0 ax [orig:160 D.7547 ] [160])
        (mem/f/j:DI (reg/f:DI 0 ax [431]) [0 f_5(D)->m+0 S8 A64])) backflip.c:92 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [431])
        (nil)))
(insn 320 319 321 2 (set (reg:DF 1 dx [orig:161 D.7548 ] [161])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:160 D.7547 ] [160])
                (const_int 56 [0x38])) [0 _110->flipDepth+0 S8 A64])) backflip.c:92 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:160 D.7547 ] [160])
        (nil)))
(insn 321 320 322 2 (set (reg/f:DI 0 ax [432])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 322 321 323 2 (set (reg/f:DI 0 ax [orig:162 D.7547 ] [162])
        (mem/f/j:DI (reg/f:DI 0 ax [432]) [0 f_5(D)->m+0 S8 A64])) backflip.c:92 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [432])
        (nil)))
(insn 323 322 324 2 (set (reg:DF 0 ax [orig:163 D.7548 ] [163])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:162 D.7547 ] [162])
                (const_int 8 [0x8])) [0 _112->radius2+0 S8 A64])) backflip.c:92 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:162 D.7547 ] [162])
        (nil)))
(insn 324 323 325 2 (set (reg:DI 2 cx [433])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -560 [0xfffffffffffffdd0])) [0 space+0 S8 A64])) backflip.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 325 324 849 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:161 D.7548 ] [161])) backflip.c:92 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:161 D.7548 ] [161])
        (nil)))
(insn 849 325 326 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:92 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 586)
        (nil)))
(insn 326 849 850 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:163 D.7548 ] [163])) backflip.c:92 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:163 D.7548 ] [163])
        (nil)))
(insn 850 326 327 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:92 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 587)
        (nil)))
(insn 327 850 328 2 (set (reg:DI 5 di)
        (reg:DI 2 cx [433])) backflip.c:92 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [433])
        (nil)))
(call_insn 328 327 329 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dCreateCylinder") [flags 0x41]  <function_decl 0x100004e400 dCreateCylinder>) [0 dCreateCylinder S1 A8])
            (const_int 0 [0]))) backflip.c:92 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_DEAD (reg:DF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (nil)))))
(insn 329 328 330 2 (set (reg/f:DI 0 ax [orig:164 D.7550 ] [164])
        (reg:DI 0 ax)) backflip.c:92 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 330 329 331 2 (set (reg/f:DI 1 dx [434])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:92 87 {*movdi_internal_rex64}
     (nil))
(insn 331 330 332 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [434])
                (const_int 456 [0x1c8])) [0 f_5(D)->wheel2Geom+0 S8 A64])
        (reg/f:DI 0 ax [orig:164 D.7550 ] [164])) backflip.c:92 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [434])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:164 D.7550 ] [164])
            (nil))))
(insn 332 331 333 2 (set (reg/f:DI 0 ax [435])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:93 87 {*movdi_internal_rex64}
     (nil))
(insn 333 332 334 2 (set (reg/f:DI 0 ax [orig:165 D.7550 ] [165])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [435])
                (const_int 456 [0x1c8])) [0 f_5(D)->wheel2Geom+0 S8 A64])) backflip.c:93 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [435])
        (nil)))
(insn 334 333 335 2 (set (reg:DI 4 si)
        (const_int 9 [0x9])) backflip.c:93 87 {*movdi_internal_rex64}
     (nil))
(insn 335 334 336 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:165 D.7550 ] [165])) backflip.c:93 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:165 D.7550 ] [165])
        (nil)))
(call_insn 336 335 337 2 (call (mem:QI (symbol_ref:DI ("dGeomSetCategoryBits") [flags 0x41]  <function_decl 0x10000f9d00 dGeomSetCategoryBits>) [0 dGeomSetCategoryBits S1 A8])
        (const_int 0 [0])) backflip.c:93 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 337 336 338 2 (set (reg/f:DI 0 ax [436])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:94 87 {*movdi_internal_rex64}
     (nil))
(insn 338 337 339 2 (set (reg/f:DI 0 ax [orig:166 D.7550 ] [166])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [436])
                (const_int 456 [0x1c8])) [0 f_5(D)->wheel2Geom+0 S8 A64])) backflip.c:94 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [436])
        (nil)))
(insn 339 338 340 2 (set (reg:DI 4 si)
        (const_int 18 [0x12])) backflip.c:94 87 {*movdi_internal_rex64}
     (nil))
(insn 340 339 341 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:166 D.7550 ] [166])) backflip.c:94 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:166 D.7550 ] [166])
        (nil)))
(call_insn 341 340 342 2 (call (mem:QI (symbol_ref:DI ("dGeomSetCollideBits") [flags 0x41]  <function_decl 0x10000fa100 dGeomSetCollideBits>) [0 dGeomSetCollideBits S1 A8])
        (const_int 0 [0])) backflip.c:94 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 342 341 343 2 (set (reg/f:DI 0 ax [437])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:95 87 {*movdi_internal_rex64}
     (nil))
(insn 343 342 344 2 (set (reg/f:DI 0 ax [orig:167 D.7547 ] [167])
        (mem/f/j:DI (reg/f:DI 0 ax [437]) [0 f_5(D)->m+0 S8 A64])) backflip.c:95 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [437])
        (nil)))
(insn 344 343 345 2 (set (reg:DF 2 cx [orig:168 D.7548 ] [168])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:167 D.7547 ] [167])
                (const_int 56 [0x38])) [0 _117->flipDepth+0 S8 A64])) backflip.c:95 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:167 D.7547 ] [167])
        (nil)))
(insn 345 344 346 2 (set (reg/f:DI 0 ax [438])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:95 87 {*movdi_internal_rex64}
     (nil))
(insn 346 345 347 2 (set (reg/f:DI 0 ax [orig:169 D.7547 ] [169])
        (mem/f/j:DI (reg/f:DI 0 ax [438]) [0 f_5(D)->m+0 S8 A64])) backflip.c:95 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [438])
        (nil)))
(insn 347 346 348 2 (set (reg:DF 1 dx [orig:170 D.7548 ] [170])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:169 D.7547 ] [169])
                (const_int 8 [0x8])) [0 _119->radius2+0 S8 A64])) backflip.c:95 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:169 D.7547 ] [169])
        (nil)))
(insn 348 347 349 2 (set (reg/f:DI 0 ax [439])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:95 87 {*movdi_internal_rex64}
     (nil))
(insn 349 348 350 2 (set (reg:DF 0 ax [orig:171 D.7548 ] [171])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [439])
                (const_int 8 [0x8])) [0 f_5(D)->density+0 S8 A64])) backflip.c:95 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [439])
        (nil)))
(insn 350 349 351 2 (set (reg/f:DI 4 si [440])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:95 87 {*movdi_internal_rex64}
     (nil))
(insn 351 350 352 2 (parallel [
            (set (reg/f:DI 5 di [orig:172 D.7549 ] [172])
                (plus:DI (reg/f:DI 4 si [440])
                    (const_int 312 [0x138])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:95 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 4 si [440])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -520 [0xfffffffffffffdf8])) [0 f+0 S8 A64])
                (const_int 312 [0x138]))
            (nil))))
(insn 352 351 851 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 2 cx [orig:168 D.7548 ] [168])) backflip.c:95 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 2 cx [orig:168 D.7548 ] [168])
        (nil)))
(insn 851 352 353 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:95 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 588)
        (nil)))
(insn 353 851 852 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:170 D.7548 ] [170])) backflip.c:95 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:170 D.7548 ] [170])
        (nil)))
(insn 852 353 354 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:95 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 589)
        (nil)))
(insn 354 852 355 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) backflip.c:95 89 {*movsi_internal}
     (nil))
(insn 355 354 853 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:171 D.7548 ] [171])) backflip.c:95 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:171 D.7548 ] [171])
        (nil)))
(insn 853 355 356 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:95 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 590)
        (nil)))
(insn 356 853 357 2 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:172 D.7549 ] [172])) backflip.c:95 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:172 D.7549 ] [172])
        (nil)))
(call_insn 357 356 358 2 (call (mem:QI (symbol_ref:DI ("dMassSetCylinder") [flags 0x41]  <function_decl 0x10000c4800 dMassSetCylinder>) [0 dMassSetCylinder S1 A8])
        (const_int 0 [0])) backflip.c:95 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:SI 4 si)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (expr_list:DF (use (reg:DF 22 xmm1))
                    (expr_list:DF (use (reg:DF 23 xmm2))
                        (nil)))))))
(insn 358 357 359 2 (set (reg:DI 0 ax [441])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 world+0 S8 A64])) backflip.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 359 358 360 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [441])) backflip.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [441])
        (nil)))
(call_insn 360 359 361 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dBodyCreate") [flags 0x41]  <function_decl 0x1000054700 dBodyCreate>) [0 dBodyCreate S1 A8])
            (const_int 0 [0]))) backflip.c:96 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 361 360 362 2 (set (reg/f:DI 0 ax [orig:173 D.7546 ] [173])
        (reg:DI 0 ax)) backflip.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 362 361 363 2 (set (reg/f:DI 1 dx [442])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:96 87 {*movdi_internal_rex64}
     (nil))
(insn 363 362 364 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [442])
                (const_int 32 [0x20])) [0 f_5(D)->wheel2Body+0 S8 A64])
        (reg/f:DI 0 ax [orig:173 D.7546 ] [173])) backflip.c:96 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [442])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:173 D.7546 ] [173])
            (nil))))
(insn 364 363 365 2 (set (reg/f:DI 0 ax [443])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:97 87 {*movdi_internal_rex64}
     (nil))
(insn 365 364 366 2 (parallel [
            (set (reg/f:DI 1 dx [orig:174 D.7549 ] [174])
                (plus:DI (reg/f:DI 0 ax [443])
                    (const_int 312 [0x138])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:97 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [443])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -520 [0xfffffffffffffdf8])) [0 f+0 S8 A64])
                (const_int 312 [0x138]))
            (nil))))
(insn 366 365 367 2 (set (reg/f:DI 0 ax [444])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:97 87 {*movdi_internal_rex64}
     (nil))
(insn 367 366 368 2 (set (reg/f:DI 0 ax [orig:175 D.7546 ] [175])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [444])
                (const_int 32 [0x20])) [0 f_5(D)->wheel2Body+0 S8 A64])) backflip.c:97 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [444])
        (nil)))
(insn 368 367 369 2 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:174 D.7549 ] [174])) backflip.c:97 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:174 D.7549 ] [174])
        (nil)))
(insn 369 368 370 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:175 D.7546 ] [175])) backflip.c:97 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:175 D.7546 ] [175])
        (nil)))
(call_insn 370 369 371 2 (call (mem:QI (symbol_ref:DI ("dBodySetMass") [flags 0x41]  <function_decl 0x100005b200 dBodySetMass>) [0 dBodySetMass S1 A8])
        (const_int 0 [0])) backflip.c:97 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 371 370 372 2 (set (reg/f:DI 0 ax [445])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:98 87 {*movdi_internal_rex64}
     (nil))
(insn 372 371 373 2 (set (reg/f:DI 1 dx [orig:176 D.7546 ] [176])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [445])
                (const_int 32 [0x20])) [0 f_5(D)->wheel2Body+0 S8 A64])) backflip.c:98 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [445])
        (nil)))
(insn 373 372 374 2 (set (reg/f:DI 0 ax [446])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:98 87 {*movdi_internal_rex64}
     (nil))
(insn 374 373 375 2 (set (reg/f:DI 0 ax [orig:177 D.7550 ] [177])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [446])
                (const_int 456 [0x1c8])) [0 f_5(D)->wheel2Geom+0 S8 A64])) backflip.c:98 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [446])
        (nil)))
(insn 375 374 376 2 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:176 D.7546 ] [176])) backflip.c:98 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:176 D.7546 ] [176])
        (nil)))
(insn 376 375 377 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:177 D.7550 ] [177])) backflip.c:98 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:177 D.7550 ] [177])
        (nil)))
(call_insn 377 376 378 2 (call (mem:QI (symbol_ref:DI ("dGeomSetBody") [flags 0x41]  <function_decl 0x10000f3900 dGeomSetBody>) [0 dGeomSetBody S1 A8])
        (const_int 0 [0])) backflip.c:98 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 378 377 379 2 (set (reg/f:DI 0 ax [447])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 379 378 380 2 (set (reg:DF 1 dx [orig:178 D.7548 ] [178])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [447])
                (const_int 544 [0x220])) [0 f_5(D)->zOffset+0 S8 A64])) backflip.c:101 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [447])
        (nil)))
(insn 380 379 381 2 (set (reg/f:DI 0 ax [448])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 381 380 382 2 (set (reg:DF 0 ax [orig:179 D.7548 ] [179])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [448])
                (const_int 536 [0x218])) [0 f_5(D)->yOffset+0 S8 A64])) backflip.c:101 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [448])
        (nil)))
(insn 382 381 383 2 (set (reg/f:DI 2 cx [449])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 383 382 384 2 (set (reg:DF 22 xmm1 [orig:180 D.7548 ] [180])
        (mem/j:DF (plus:DI (reg/f:DI 2 cx [449])
                (const_int 528 [0x210])) [0 f_5(D)->xOffset+0 S8 A64])) backflip.c:101 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [449])
        (nil)))
(insn 384 383 385 2 (set (reg/f:DI 2 cx [450])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 385 384 386 2 (set (reg/f:DI 2 cx [orig:181 D.7547 ] [181])
        (mem/f/j:DI (reg/f:DI 2 cx [450]) [0 f_5(D)->m+0 S8 A64])) backflip.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [450])
        (nil)))
(insn 386 385 387 2 (set (reg:DF 21 xmm0 [orig:182 D.7548 ] [182])
        (mem/j:DF (plus:DI (reg/f:DI 2 cx [orig:181 D.7547 ] [181])
                (const_int 16 [0x10])) [0 _131->distance+0 S8 A64])) backflip.c:101 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:181 D.7547 ] [181])
        (nil)))
(insn 387 386 388 2 (set (reg:DF 21 xmm0 [orig:183 D.7548 ] [183])
        (plus:DF (reg:DF 21 xmm0 [orig:182 D.7548 ] [182])
            (reg:DF 22 xmm1 [orig:180 D.7548 ] [180]))) backflip.c:101 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:182 D.7548 ] [182])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:180 D.7548 ] [180])
            (nil))))
(insn 388 387 389 2 (set (reg/f:DI 2 cx [451])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:101 87 {*movdi_internal_rex64}
     (nil))
(insn 389 388 390 2 (set (reg/f:DI 2 cx [orig:184 D.7546 ] [184])
        (mem/f/j:DI (plus:DI (reg/f:DI 2 cx [451])
                (const_int 32 [0x20])) [0 f_5(D)->wheel2Body+0 S8 A64])) backflip.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [451])
        (nil)))
(insn 390 389 854 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:178 D.7548 ] [178])) backflip.c:101 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:178 D.7548 ] [178])
        (nil)))
(insn 854 390 391 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:101 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 591)
        (nil)))
(insn 391 854 855 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:179 D.7548 ] [179])) backflip.c:101 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:179 D.7548 ] [179])
        (nil)))
(insn 855 391 392 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:101 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 592)
        (nil)))
(insn 392 855 393 2 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:183 D.7548 ] [183])) backflip.c:101 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:183 D.7548 ] [183])
        (nil)))
(insn 393 392 394 2 (set (reg:DI 5 di)
        (reg/f:DI 2 cx [orig:184 D.7546 ] [184])) backflip.c:101 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:184 D.7546 ] [184])
        (nil)))
(call_insn 394 393 395 2 (call (mem:QI (symbol_ref:DI ("dBodySetPosition") [flags 0x41]  <function_decl 0x10000d6f00 dBodySetPosition>) [0 dBodySetPosition S1 A8])
        (const_int 0 [0])) backflip.c:101 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 395 394 396 2 (parallel [
            (set (reg:DI 0 ax [452])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -208 [0xffffffffffffff30])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:103 274 {*adddi_1}
     (nil))
(insn 396 395 397 2 (set (reg:DF 23 xmm2)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:103 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 397 396 398 2 (set (reg:DF 22 xmm1)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) backflip.c:103 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 398 397 399 2 (set (reg:DF 21 xmm0)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:103 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 399 398 400 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [452])) backflip.c:103 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [452])
        (nil)))
(call_insn 400 399 401 2 (call (mem:QI (symbol_ref:DI ("dRFromZAxis") [flags 0x41]  <function_decl 0x10000bb300 dRFromZAxis>) [0 dRFromZAxis S1 A8])
        (const_int 0 [0])) backflip.c:103 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 401 400 402 2 (set (reg/f:DI 0 ax [453])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:104 87 {*movdi_internal_rex64}
     (nil))
(insn 402 401 403 2 (set (reg/f:DI 0 ax [orig:185 D.7546 ] [185])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [453])
                (const_int 32 [0x20])) [0 f_5(D)->wheel2Body+0 S8 A64])) backflip.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [453])
        (nil)))
(insn 403 402 404 2 (parallel [
            (set (reg:DI 1 dx [454])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -208 [0xffffffffffffff30])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:104 274 {*adddi_1}
     (nil))
(insn 404 403 405 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [454])) backflip.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [454])
        (nil)))
(insn 405 404 406 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:185 D.7546 ] [185])) backflip.c:104 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:185 D.7546 ] [185])
        (nil)))
(call_insn 406 405 407 2 (call (mem:QI (symbol_ref:DI ("dBodySetRotation") [flags 0x41]  <function_decl 0x1000059400 dBodySetRotation>) [0 dBodySetRotation S1 A8])
        (const_int 0 [0])) backflip.c:104 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 407 406 408 2 (set (reg:DI 0 ax [455])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 world+0 S8 A64])) backflip.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 408 407 409 2 (set (reg:DI 4 si)
        (const_int 0 [0])) backflip.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 409 408 410 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [455])) backflip.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [455])
        (nil)))
(call_insn 410 409 411 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dJointCreateHinge") [flags 0x41]  <function_decl 0x100007fc00 dJointCreateHinge>) [0 dJointCreateHinge S1 A8])
            (const_int 0 [0]))) backflip.c:105 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 411 410 412 2 (set (reg/f:DI 0 ax [orig:186 D.7551 ] [186])
        (reg:DI 0 ax)) backflip.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 412 411 413 2 (set (reg/f:DI 1 dx [456])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:105 87 {*movdi_internal_rex64}
     (nil))
(insn 413 412 414 2 (set (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [456])
                (const_int 488 [0x1e8])) [0 f_5(D)->wheel2Joint+0 S8 A64])
        (reg/f:DI 0 ax [orig:186 D.7551 ] [186])) backflip.c:105 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [456])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:186 D.7551 ] [186])
            (nil))))
(insn 414 413 415 2 (set (reg/f:DI 0 ax [457])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:107 87 {*movdi_internal_rex64}
     (nil))
(insn 415 414 416 2 (set (reg/f:DI 1 dx [orig:187 D.7546 ] [187])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [457])
                (const_int 32 [0x20])) [0 f_5(D)->wheel2Body+0 S8 A64])) backflip.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [457])
        (nil)))
(insn 416 415 417 2 (set (reg/f:DI 0 ax [458])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -544 [0xfffffffffffffde0])) [0 t+0 S8 A64])) backflip.c:107 87 {*movdi_internal_rex64}
     (nil))
(insn 417 416 418 2 (set (reg/f:DI 2 cx [orig:188 D.7546 ] [188])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [458])
                (const_int 16 [0x10])) [0 t_102(D)->trackBody+0 S8 A64])) backflip.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [458])
        (nil)))
(insn 418 417 419 2 (set (reg/f:DI 0 ax [459])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:107 87 {*movdi_internal_rex64}
     (nil))
(insn 419 418 420 2 (set (reg/f:DI 0 ax [orig:189 D.7551 ] [189])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [459])
                (const_int 488 [0x1e8])) [0 f_5(D)->wheel2Joint+0 S8 A64])) backflip.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [459])
        (nil)))
(insn 420 419 421 2 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:187 D.7546 ] [187])) backflip.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:187 D.7546 ] [187])
        (nil)))
(insn 421 420 422 2 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:188 D.7546 ] [188])) backflip.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:188 D.7546 ] [188])
        (nil)))
(insn 422 421 423 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:189 D.7551 ] [189])) backflip.c:107 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:189 D.7551 ] [189])
        (nil)))
(call_insn 423 422 424 2 (call (mem:QI (symbol_ref:DI ("dJointAttach") [flags 0x41]  <function_decl 0x1000089700 dJointAttach>) [0 dJointAttach S1 A8])
        (const_int 0 [0])) backflip.c:107 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 424 423 425 2 (set (reg/f:DI 0 ax [460])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:110 87 {*movdi_internal_rex64}
     (nil))
(insn 425 424 426 2 (set (reg:DF 1 dx [orig:190 D.7548 ] [190])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [460])
                (const_int 544 [0x220])) [0 f_5(D)->zOffset+0 S8 A64])) backflip.c:110 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [460])
        (nil)))
(insn 426 425 427 2 (set (reg/f:DI 0 ax [461])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:110 87 {*movdi_internal_rex64}
     (nil))
(insn 427 426 428 2 (set (reg:DF 0 ax [orig:191 D.7548 ] [191])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [461])
                (const_int 536 [0x218])) [0 f_5(D)->yOffset+0 S8 A64])) backflip.c:110 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [461])
        (nil)))
(insn 428 427 429 2 (set (reg/f:DI 2 cx [462])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:110 87 {*movdi_internal_rex64}
     (nil))
(insn 429 428 430 2 (set (reg:DF 22 xmm1 [orig:192 D.7548 ] [192])
        (mem/j:DF (plus:DI (reg/f:DI 2 cx [462])
                (const_int 528 [0x210])) [0 f_5(D)->xOffset+0 S8 A64])) backflip.c:110 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [462])
        (nil)))
(insn 430 429 431 2 (set (reg/f:DI 2 cx [463])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:110 87 {*movdi_internal_rex64}
     (nil))
(insn 431 430 432 2 (set (reg/f:DI 2 cx [orig:193 D.7547 ] [193])
        (mem/f/j:DI (reg/f:DI 2 cx [463]) [0 f_5(D)->m+0 S8 A64])) backflip.c:110 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [463])
        (nil)))
(insn 432 431 433 2 (set (reg:DF 21 xmm0 [orig:194 D.7548 ] [194])
        (mem/j:DF (plus:DI (reg/f:DI 2 cx [orig:193 D.7547 ] [193])
                (const_int 16 [0x10])) [0 _143->distance+0 S8 A64])) backflip.c:110 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:193 D.7547 ] [193])
        (nil)))
(insn 433 432 434 2 (set (reg:DF 21 xmm0 [orig:195 D.7548 ] [195])
        (plus:DF (reg:DF 21 xmm0 [orig:194 D.7548 ] [194])
            (reg:DF 22 xmm1 [orig:192 D.7548 ] [192]))) backflip.c:110 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:194 D.7548 ] [194])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:192 D.7548 ] [192])
            (nil))))
(insn 434 433 435 2 (set (reg/f:DI 2 cx [464])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:110 87 {*movdi_internal_rex64}
     (nil))
(insn 435 434 436 2 (set (reg/f:DI 2 cx [orig:196 D.7551 ] [196])
        (mem/f/j:DI (plus:DI (reg/f:DI 2 cx [464])
                (const_int 488 [0x1e8])) [0 f_5(D)->wheel2Joint+0 S8 A64])) backflip.c:110 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [464])
        (nil)))
(insn 436 435 856 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:190 D.7548 ] [190])) backflip.c:110 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:190 D.7548 ] [190])
        (nil)))
(insn 856 436 437 2 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:110 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 593)
        (nil)))
(insn 437 856 857 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:191 D.7548 ] [191])) backflip.c:110 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:191 D.7548 ] [191])
        (nil)))
(insn 857 437 438 2 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:110 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 594)
        (nil)))
(insn 438 857 439 2 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:195 D.7548 ] [195])) backflip.c:110 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:195 D.7548 ] [195])
        (nil)))
(insn 439 438 440 2 (set (reg:DI 5 di)
        (reg/f:DI 2 cx [orig:196 D.7551 ] [196])) backflip.c:110 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:196 D.7551 ] [196])
        (nil)))
(call_insn 440 439 441 2 (call (mem:QI (symbol_ref:DI ("dJointSetHingeAnchor") [flags 0x41]  <function_decl 0x100008ef00 dJointSetHingeAnchor>) [0 dJointSetHingeAnchor S1 A8])
        (const_int 0 [0])) backflip.c:110 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 441 440 442 2 (set (reg/f:DI 0 ax [465])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:111 87 {*movdi_internal_rex64}
     (nil))
(insn 442 441 443 2 (set (reg/f:DI 0 ax [orig:197 D.7551 ] [197])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [465])
                (const_int 488 [0x1e8])) [0 f_5(D)->wheel2Joint+0 S8 A64])) backflip.c:111 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [465])
        (nil)))
(insn 443 442 444 2 (set (reg:DF 23 xmm2)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:111 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 444 443 445 2 (set (reg:DF 22 xmm1)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) backflip.c:111 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 445 444 446 2 (set (reg:DF 21 xmm0)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:111 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 446 445 447 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:197 D.7551 ] [197])) backflip.c:111 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:197 D.7551 ] [197])
        (nil)))
(call_insn 447 446 448 2 (call (mem:QI (symbol_ref:DI ("dJointSetHingeAxis") [flags 0x41]  <function_decl 0x100008f400 dJointSetHingeAxis>) [0 dJointSetHingeAxis S1 A8])
        (const_int 0 [0])) backflip.c:111 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 448 447 449 2 (set (reg/f:DI 0 ax [466])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:112 87 {*movdi_internal_rex64}
     (nil))
(insn 449 448 450 2 (set (reg/f:DI 1 dx [orig:198 D.7551 ] [198])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [466])
                (const_int 488 [0x1e8])) [0 f_5(D)->wheel2Joint+0 S8 A64])) backflip.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [466])
        (nil)))
(insn 450 449 451 2 (set (reg:DF 0 ax [467])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S8 A64])) backflip.c:112 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 451 450 858 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [467])) backflip.c:112 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [467])
        (nil)))
(insn 858 451 452 2 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:112 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 595)
        (nil)))
(insn 452 858 453 2 (set (reg:SI 4 si)
        (const_int 5 [0x5])) backflip.c:112 89 {*movsi_internal}
     (nil))
(insn 453 452 454 2 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:198 D.7551 ] [198])) backflip.c:112 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:198 D.7551 ] [198])
        (nil)))
(call_insn 454 453 455 2 (call (mem:QI (symbol_ref:DI ("dJointSetHingeParam") [flags 0x41]  <function_decl 0x100008f900 dJointSetHingeParam>) [0 dJointSetHingeParam S1 A8])
        (const_int 0 [0])) backflip.c:112 656 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:SI 4 si)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 455 454 456 2 (set (reg:DF 0 ax [468])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S8 A64])) backflip.c:118 133 {*movdf_internal_rex64}
     (nil))
(insn 456 455 457 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -488 [0xfffffffffffffe18])) [0 gf+0 S8 A64])
        (reg:DF 0 ax [468])) backflip.c:118 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [468])
        (nil)))
(insn 457 456 458 2 (set (reg:DF 0 ax [469])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:120 133 {*movdf_internal_rex64}
     (nil))
(insn 458 457 459 2 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -480 [0xfffffffffffffe20])) [0 grouser_shift+0 S8 A64])
        (reg:DF 0 ax [469])) backflip.c:120 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [469])
        (nil)))
(insn 459 458 818 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])
        (const_int 0 [0])) backflip.c:121 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 818 459 819 2 (set (pc)
        (label_ref 621)) backflip.c:121 650 {jump}
     (nil)
 -> 621)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 819 818 626)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515
(code_label 626 819 462 3 5 "" [1 uses])
(note 462 626 463 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 463 462 464 3 (set (reg/f:DI 0 ax [470])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 464 463 465 3 (set (reg/f:DI 0 ax [orig:201 D.7553 ] [201])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [470])
                (const_int 504 [0x1f8])) [0 f_5(D)->grouserGeom+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [470])
        (nil)))
(insn 465 464 466 3 (set (reg:DI 1 dx [471])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 466 465 467 3 (parallel [
            (set (reg:DI 1 dx [orig:202 D.7552 ] [202])
                (ashift:DI (reg:DI 1 dx [471])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:122 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [471])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 467 466 468 3 (parallel [
            (set (reg/f:DI 3 bx [orig:203 D.7553 ] [203])
                (plus:DI (reg/f:DI 0 ax [orig:201 D.7553 ] [201])
                    (reg:DI 1 dx [orig:202 D.7552 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:122 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:202 D.7552 ] [202])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:201 D.7553 ] [201])
            (nil))))
(insn 468 467 469 3 (set (reg/f:DI 0 ax [472])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 469 468 470 3 (set (reg/f:DI 0 ax [orig:204 D.7547 ] [204])
        (mem/f/j:DI (reg/f:DI 0 ax [472]) [0 f_5(D)->m+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [472])
        (nil)))
(insn 470 469 471 3 (set (reg:DF 21 xmm0 [orig:205 D.7548 ] [205])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:204 D.7547 ] [204])
                (const_int 32 [0x20])) [0 _157->grouserWidth+0 S8 A64])) backflip.c:122 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:204 D.7547 ] [204])
        (nil)))
(insn 471 470 472 3 (set (reg:DF 21 xmm0 [orig:206 D.7548 ] [206])
        (mult:DF (reg:DF 21 xmm0 [orig:205 D.7548 ] [205])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -488 [0xfffffffffffffe18])) [0 gf+0 S8 A64]))) backflip.c:122 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:205 D.7548 ] [205])
        (nil)))
(insn 472 471 473 3 (set (reg/f:DI 0 ax [473])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 473 472 474 3 (set (reg/f:DI 0 ax [orig:207 D.7547 ] [207])
        (mem/f/j:DI (reg/f:DI 0 ax [473]) [0 f_5(D)->m+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [473])
        (nil)))
(insn 474 473 475 3 (set (reg:DF 1 dx [orig:208 D.7548 ] [208])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:207 D.7547 ] [207])
                (const_int 56 [0x38])) [0 _160->flipDepth+0 S8 A64])) backflip.c:122 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:207 D.7547 ] [207])
        (nil)))
(insn 475 474 476 3 (set (reg/f:DI 0 ax [474])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 476 475 477 3 (set (reg/f:DI 0 ax [orig:209 D.7547 ] [209])
        (mem/f/j:DI (reg/f:DI 0 ax [474]) [0 f_5(D)->m+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [474])
        (nil)))
(insn 477 476 478 3 (set (reg:DF 0 ax [orig:210 D.7548 ] [210])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:209 D.7547 ] [209])
                (const_int 40 [0x28])) [0 _162->grouserHeight+0 S8 A64])) backflip.c:122 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:209 D.7547 ] [209])
        (nil)))
(insn 478 477 479 3 (set (reg:DI 2 cx [475])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -560 [0xfffffffffffffdd0])) [0 space+0 S8 A64])) backflip.c:122 87 {*movdi_internal_rex64}
     (nil))
(insn 479 478 480 3 (set (reg:DF 23 xmm2)
        (reg:DF 21 xmm0 [orig:206 D.7548 ] [206])) backflip.c:122 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:206 D.7548 ] [206])
        (nil)))
(insn 480 479 859 3 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:208 D.7548 ] [208])) backflip.c:122 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:208 D.7548 ] [208])
        (nil)))
(insn 859 480 481 3 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:122 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 596)
        (nil)))
(insn 481 859 860 3 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:210 D.7548 ] [210])) backflip.c:122 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:210 D.7548 ] [210])
        (nil)))
(insn 860 481 482 3 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:122 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 597)
        (nil)))
(insn 482 860 483 3 (set (reg:DI 5 di)
        (reg:DI 2 cx [475])) backflip.c:122 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [475])
        (nil)))
(call_insn 483 482 484 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dCreateBox") [flags 0x41]  <function_decl 0x1000041200 dCreateBox>) [0 dCreateBox S1 A8])
            (const_int 0 [0]))) backflip.c:122 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 484 483 485 3 (set (reg/f:DI 0 ax [orig:211 D.7550 ] [211])
        (reg:DI 0 ax)) backflip.c:122 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 485 484 486 3 (set (mem/f:DI (reg/f:DI 3 bx [orig:203 D.7553 ] [203]) [0 *_156+0 S8 A64])
        (reg/f:DI 0 ax [orig:211 D.7550 ] [211])) backflip.c:122 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:211 D.7550 ] [211])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:203 D.7553 ] [203])
            (nil))))
(insn 486 485 487 3 (set (reg/f:DI 0 ax [476])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:123 87 {*movdi_internal_rex64}
     (nil))
(insn 487 486 488 3 (set (reg/f:DI 0 ax [orig:212 D.7553 ] [212])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [476])
                (const_int 504 [0x1f8])) [0 f_5(D)->grouserGeom+0 S8 A64])) backflip.c:123 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [476])
        (nil)))
(insn 488 487 489 3 (set (reg:DI 1 dx [477])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:123 87 {*movdi_internal_rex64}
     (nil))
(insn 489 488 490 3 (parallel [
            (set (reg:DI 1 dx [orig:213 D.7552 ] [213])
                (ashift:DI (reg:DI 1 dx [477])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:123 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [477])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 490 489 491 3 (parallel [
            (set (reg/f:DI 0 ax [orig:214 D.7553 ] [214])
                (plus:DI (reg/f:DI 0 ax [orig:212 D.7553 ] [212])
                    (reg:DI 1 dx [orig:213 D.7552 ] [213])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:123 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:213 D.7552 ] [213])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:212 D.7553 ] [212])
            (nil))))
(insn 491 490 492 3 (set (reg/f:DI 0 ax [orig:215 D.7550 ] [215])
        (mem/f:DI (reg/f:DI 0 ax [orig:214 D.7553 ] [214]) [0 *_167+0 S8 A64])) backflip.c:123 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:214 D.7553 ] [214])
        (nil)))
(insn 492 491 493 3 (set (reg:DI 4 si)
        (const_int 2 [0x2])) backflip.c:123 87 {*movdi_internal_rex64}
     (nil))
(insn 493 492 494 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:215 D.7550 ] [215])) backflip.c:123 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:215 D.7550 ] [215])
        (nil)))
(call_insn 494 493 495 3 (call (mem:QI (symbol_ref:DI ("dGeomSetCategoryBits") [flags 0x41]  <function_decl 0x10000f9d00 dGeomSetCategoryBits>) [0 dGeomSetCategoryBits S1 A8])
        (const_int 0 [0])) backflip.c:123 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 495 494 496 3 (set (reg/f:DI 0 ax [478])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:124 87 {*movdi_internal_rex64}
     (nil))
(insn 496 495 497 3 (set (reg/f:DI 0 ax [orig:216 D.7553 ] [216])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [478])
                (const_int 504 [0x1f8])) [0 f_5(D)->grouserGeom+0 S8 A64])) backflip.c:124 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [478])
        (nil)))
(insn 497 496 498 3 (set (reg:DI 1 dx [479])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:124 87 {*movdi_internal_rex64}
     (nil))
(insn 498 497 499 3 (parallel [
            (set (reg:DI 1 dx [orig:217 D.7552 ] [217])
                (ashift:DI (reg:DI 1 dx [479])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:124 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [479])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 499 498 500 3 (parallel [
            (set (reg/f:DI 0 ax [orig:218 D.7553 ] [218])
                (plus:DI (reg/f:DI 0 ax [orig:216 D.7553 ] [216])
                    (reg:DI 1 dx [orig:217 D.7552 ] [217])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:124 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:217 D.7552 ] [217])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:216 D.7553 ] [216])
            (nil))))
(insn 500 499 501 3 (set (reg/f:DI 0 ax [orig:219 D.7550 ] [219])
        (mem/f:DI (reg/f:DI 0 ax [orig:218 D.7553 ] [218]) [0 *_171+0 S8 A64])) backflip.c:124 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:218 D.7553 ] [218])
        (nil)))
(insn 501 500 502 3 (set (reg:DI 4 si)
        (const_int 29 [0x1d])) backflip.c:124 87 {*movdi_internal_rex64}
     (nil))
(insn 502 501 503 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:219 D.7550 ] [219])) backflip.c:124 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:219 D.7550 ] [219])
        (nil)))
(call_insn 503 502 504 3 (call (mem:QI (symbol_ref:DI ("dGeomSetCollideBits") [flags 0x41]  <function_decl 0x10000fa100 dGeomSetCollideBits>) [0 dGeomSetCollideBits S1 A8])
        (const_int 0 [0])) backflip.c:124 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 504 503 505 3 (set (reg/f:DI 0 ax [480])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 505 504 506 3 (set (reg/f:DI 0 ax [orig:220 D.7547 ] [220])
        (mem/f/j:DI (reg/f:DI 0 ax [480]) [0 f_5(D)->m+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [480])
        (nil)))
(insn 506 505 861 3 (set (reg:DF 21 xmm0 [orig:221 D.7548 ] [221])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:220 D.7547 ] [220])
                (const_int 32 [0x20])) [0 _173->grouserWidth+0 S8 A64])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:220 D.7547 ] [220])
        (nil)))
(insn 861 506 507 3 (set (reg:DF 22 xmm1 [orig:222 D.7548 ] [222])
        (reg:DF 21 xmm0 [orig:221 D.7548 ] [221])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:221 D.7548 ] [221])
        (nil)))
(insn 507 861 862 3 (set (reg:DF 22 xmm1 [orig:222 D.7548 ] [222])
        (mult:DF (reg:DF 22 xmm1 [orig:222 D.7548 ] [222])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -488 [0xfffffffffffffe18])) [0 gf+0 S8 A64]))) backflip.c:125 778 {*fop_df_comm_sse}
     (nil))
(insn 862 507 508 3 (set (reg:DF 22 xmm1 [orig:222 D.7548 ] [222])
        (reg:DF 22 xmm1 [orig:222 D.7548 ] [222])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:222 D.7548 ] [222])
        (nil)))
(insn 508 862 509 3 (set (reg/f:DI 0 ax [481])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 509 508 510 3 (set (reg/f:DI 0 ax [orig:223 D.7547 ] [223])
        (mem/f/j:DI (reg/f:DI 0 ax [481]) [0 f_5(D)->m+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [481])
        (nil)))
(insn 510 509 511 3 (set (reg:DF 2 cx [orig:224 D.7548 ] [224])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:223 D.7547 ] [223])
                (const_int 56 [0x38])) [0 _176->flipDepth+0 S8 A64])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:223 D.7547 ] [223])
        (nil)))
(insn 511 510 512 3 (set (reg/f:DI 0 ax [482])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 512 511 513 3 (set (reg/f:DI 0 ax [orig:225 D.7547 ] [225])
        (mem/f/j:DI (reg/f:DI 0 ax [482]) [0 f_5(D)->m+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [482])
        (nil)))
(insn 513 512 514 3 (set (reg:DF 1 dx [orig:226 D.7548 ] [226])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:225 D.7547 ] [225])
                (const_int 40 [0x28])) [0 _178->grouserHeight+0 S8 A64])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:225 D.7547 ] [225])
        (nil)))
(insn 514 513 515 3 (set (reg/f:DI 0 ax [483])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 515 514 516 3 (set (reg:DF 23 xmm2 [orig:227 D.7548 ] [227])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [483])
                (const_int 8 [0x8])) [0 f_5(D)->density+0 S8 A64])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [483])
        (nil)))
(insn 516 515 517 3 (set (reg:DF 21 xmm0 [484])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S8 A64])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 517 516 518 3 (set (reg:DF 21 xmm0 [orig:228 D.7548 ] [228])
        (mult:DF (reg:DF 21 xmm0 [484])
            (reg:DF 23 xmm2 [orig:227 D.7548 ] [227]))) backflip.c:125 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [484])
        (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:227 D.7548 ] [227])
            (nil))))
(insn 518 517 519 3 (set (reg/f:DI 0 ax [485])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 519 518 520 3 (set (reg/f:DI 4 si [orig:229 D.7549 ] [229])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [485])
                (const_int 520 [0x208])) [0 f_5(D)->grouserMass+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [485])
        (nil)))
(insn 520 519 521 3 (set (reg:DI 0 ax [486])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 521 520 522 3 (set (reg:DI 0 ax [487])
        (reg:DI 0 ax [486])) backflip.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [486])
        (nil)))
(insn 522 521 523 3 (parallel [
            (set (reg:DI 0 ax [488])
                (ashift:DI (reg:DI 0 ax [487])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:125 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [487])
        (nil)))
(insn 523 522 863 3 (set (reg:DI 0 ax [487])
        (reg:DI 0 ax [488])) backflip.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [488])
        (nil)))
(insn 863 523 524 3 (set (reg:DI 5 di [489])
        (reg:DI 0 ax [487])) backflip.c:125 87 {*movdi_internal_rex64}
     (nil))
(insn 524 863 864 3 (parallel [
            (set (reg:DI 5 di [489])
                (ashift:DI (reg:DI 5 di [489])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:125 513 {*ashldi3_1}
     (nil))
(insn 864 524 525 3 (set (reg:DI 5 di [489])
        (reg:DI 5 di [489])) backflip.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [489])
        (nil)))
(insn 525 864 526 3 (parallel [
            (set (reg:DI 0 ax [orig:230 D.7552 ] [230])
                (plus:DI (reg:DI 0 ax [487])
                    (reg:DI 5 di [489])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:125 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 5 di [489])
        (expr_list:REG_DEAD (reg:DI 0 ax [487])
            (nil))))
(insn 526 525 527 3 (parallel [
            (set (reg/f:DI 0 ax [orig:231 D.7549 ] [231])
                (plus:DI (reg:DI 0 ax [orig:230 D.7552 ] [230])
                    (reg/f:DI 4 si [orig:229 D.7549 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:125 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:230 D.7552 ] [230])
        (expr_list:REG_DEAD (reg/f:DI 4 si [orig:229 D.7549 ] [229])
            (nil))))
(insn 527 526 528 3 (set (reg:DF 24 xmm3)
        (reg:DF 22 xmm1 [orig:222 D.7548 ] [222])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:222 D.7548 ] [222])
        (nil)))
(insn 528 527 865 3 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 2 cx [orig:224 D.7548 ] [224])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 2 cx [orig:224 D.7548 ] [224])
        (nil)))
(insn 865 528 529 3 (set (reg:DF 23 xmm2)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 600)
        (nil)))
(insn 529 865 866 3 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 1 dx [orig:226 D.7548 ] [226])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 1 dx [orig:226 D.7548 ] [226])
        (nil)))
(insn 866 529 530 3 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 601)
        (nil)))
(insn 530 866 531 3 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:228 D.7548 ] [228])) backflip.c:125 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:228 D.7548 ] [228])
        (nil)))
(insn 531 530 532 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:231 D.7549 ] [231])) backflip.c:125 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:231 D.7549 ] [231])
        (nil)))
(call_insn 532 531 533 3 (call (mem:QI (symbol_ref:DI ("dMassSetBox") [flags 0x41]  <function_decl 0x10000c4a00 dMassSetBox>) [0 dMassSetBox S1 A8])
        (const_int 0 [0])) backflip.c:125 656 {*call}
     (expr_list:REG_DEAD (reg:DF 24 xmm3)
        (expr_list:REG_DEAD (reg:DF 23 xmm2)
            (expr_list:REG_DEAD (reg:DF 22 xmm1)
                (expr_list:REG_DEAD (reg:DF 21 xmm0)
                    (expr_list:REG_DEAD (reg:DI 5 di)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (expr_list:DF (use (reg:DF 24 xmm3))
                        (nil)))))))
(insn 533 532 534 3 (set (reg/f:DI 0 ax [490])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 534 533 535 3 (set (reg/f:DI 0 ax [orig:232 D.7554 ] [232])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [490])
                (const_int 496 [0x1f0])) [0 f_5(D)->grouserBody+0 S8 A64])) backflip.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [490])
        (nil)))
(insn 535 534 536 3 (set (reg:DI 1 dx [491])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 536 535 537 3 (parallel [
            (set (reg:DI 1 dx [orig:233 D.7552 ] [233])
                (ashift:DI (reg:DI 1 dx [491])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:126 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [491])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 537 536 538 3 (parallel [
            (set (reg/f:DI 3 bx [orig:234 D.7554 ] [234])
                (plus:DI (reg/f:DI 0 ax [orig:232 D.7554 ] [232])
                    (reg:DI 1 dx [orig:233 D.7552 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:126 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:233 D.7552 ] [233])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:232 D.7554 ] [232])
            (nil))))
(insn 538 537 539 3 (set (reg:DI 0 ax [492])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 world+0 S8 A64])) backflip.c:126 87 {*movdi_internal_rex64}
     (nil))
(insn 539 538 540 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [492])) backflip.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [492])
        (nil)))
(call_insn 540 539 541 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dBodyCreate") [flags 0x41]  <function_decl 0x1000054700 dBodyCreate>) [0 dBodyCreate S1 A8])
            (const_int 0 [0]))) backflip.c:126 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 541 540 542 3 (set (reg/f:DI 0 ax [orig:235 D.7546 ] [235])
        (reg:DI 0 ax)) backflip.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 542 541 543 3 (set (mem/f:DI (reg/f:DI 3 bx [orig:234 D.7554 ] [234]) [0 *_187+0 S8 A64])
        (reg/f:DI 0 ax [orig:235 D.7546 ] [235])) backflip.c:126 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:235 D.7546 ] [235])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:234 D.7554 ] [234])
            (nil))))
(insn 543 542 544 3 (set (reg/f:DI 0 ax [493])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:127 87 {*movdi_internal_rex64}
     (nil))
(insn 544 543 545 3 (set (reg/f:DI 1 dx [orig:236 D.7549 ] [236])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [493])
                (const_int 520 [0x208])) [0 f_5(D)->grouserMass+0 S8 A64])) backflip.c:127 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [493])
        (nil)))
(insn 545 544 546 3 (set (reg:DI 0 ax [494])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:127 87 {*movdi_internal_rex64}
     (nil))
(insn 546 545 547 3 (set (reg:DI 0 ax [495])
        (reg:DI 0 ax [494])) backflip.c:127 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [494])
        (nil)))
(insn 547 546 548 3 (parallel [
            (set (reg:DI 0 ax [496])
                (ashift:DI (reg:DI 0 ax [495])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:127 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [495])
        (nil)))
(insn 548 547 867 3 (set (reg:DI 0 ax [495])
        (reg:DI 0 ax [496])) backflip.c:127 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [496])
        (nil)))
(insn 867 548 549 3 (set (reg:DI 2 cx [497])
        (reg:DI 0 ax [495])) backflip.c:127 87 {*movdi_internal_rex64}
     (nil))
(insn 549 867 868 3 (parallel [
            (set (reg:DI 2 cx [497])
                (ashift:DI (reg:DI 2 cx [497])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:127 513 {*ashldi3_1}
     (nil))
(insn 868 549 550 3 (set (reg:DI 2 cx [497])
        (reg:DI 2 cx [497])) backflip.c:127 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [497])
        (nil)))
(insn 550 868 551 3 (parallel [
            (set (reg:DI 0 ax [orig:237 D.7552 ] [237])
                (plus:DI (reg:DI 0 ax [495])
                    (reg:DI 2 cx [497])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:127 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [497])
        (expr_list:REG_DEAD (reg:DI 0 ax [495])
            (nil))))
(insn 551 550 552 3 (parallel [
            (set (reg/f:DI 1 dx [orig:238 D.7555 ] [238])
                (plus:DI (reg/f:DI 1 dx [orig:236 D.7549 ] [236])
                    (reg:DI 0 ax [orig:237 D.7552 ] [237])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:127 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:237 D.7552 ] [237])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:236 D.7549 ] [236])
            (nil))))
(insn 552 551 553 3 (set (reg/f:DI 0 ax [498])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:127 87 {*movdi_internal_rex64}
     (nil))
(insn 553 552 554 3 (set (reg/f:DI 0 ax [orig:239 D.7554 ] [239])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [498])
                (const_int 496 [0x1f0])) [0 f_5(D)->grouserBody+0 S8 A64])) backflip.c:127 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [498])
        (nil)))
(insn 554 553 555 3 (set (reg:DI 2 cx [499])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:127 87 {*movdi_internal_rex64}
     (nil))
(insn 555 554 556 3 (parallel [
            (set (reg:DI 2 cx [orig:240 D.7552 ] [240])
                (ashift:DI (reg:DI 2 cx [499])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:127 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [499])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 556 555 557 3 (parallel [
            (set (reg/f:DI 0 ax [orig:241 D.7554 ] [241])
                (plus:DI (reg/f:DI 0 ax [orig:239 D.7554 ] [239])
                    (reg:DI 2 cx [orig:240 D.7552 ] [240])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:127 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:240 D.7552 ] [240])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:239 D.7554 ] [239])
            (nil))))
(insn 557 556 558 3 (set (reg/f:DI 0 ax [orig:242 D.7546 ] [242])
        (mem/f:DI (reg/f:DI 0 ax [orig:241 D.7554 ] [241]) [0 *_194+0 S8 A64])) backflip.c:127 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:241 D.7554 ] [241])
        (nil)))
(insn 558 557 559 3 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:238 D.7555 ] [238])) backflip.c:127 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:238 D.7555 ] [238])
        (nil)))
(insn 559 558 560 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:242 D.7546 ] [242])) backflip.c:127 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:242 D.7546 ] [242])
        (nil)))
(call_insn 560 559 561 3 (call (mem:QI (symbol_ref:DI ("dBodySetMass") [flags 0x41]  <function_decl 0x100005b200 dBodySetMass>) [0 dBodySetMass S1 A8])
        (const_int 0 [0])) backflip.c:127 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 561 560 562 3 (set (reg/f:DI 0 ax [500])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:128 87 {*movdi_internal_rex64}
     (nil))
(insn 562 561 563 3 (set (reg/f:DI 0 ax [orig:243 D.7554 ] [243])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [500])
                (const_int 496 [0x1f0])) [0 f_5(D)->grouserBody+0 S8 A64])) backflip.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [500])
        (nil)))
(insn 563 562 564 3 (set (reg:DI 1 dx [501])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:128 87 {*movdi_internal_rex64}
     (nil))
(insn 564 563 565 3 (parallel [
            (set (reg:DI 1 dx [orig:244 D.7552 ] [244])
                (ashift:DI (reg:DI 1 dx [501])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:128 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [501])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 565 564 566 3 (parallel [
            (set (reg/f:DI 0 ax [orig:245 D.7554 ] [245])
                (plus:DI (reg/f:DI 0 ax [orig:243 D.7554 ] [243])
                    (reg:DI 1 dx [orig:244 D.7552 ] [244])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:128 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:244 D.7552 ] [244])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:243 D.7554 ] [243])
            (nil))))
(insn 566 565 567 3 (set (reg/f:DI 1 dx [orig:246 D.7546 ] [246])
        (mem/f:DI (reg/f:DI 0 ax [orig:245 D.7554 ] [245]) [0 *_198+0 S8 A64])) backflip.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:245 D.7554 ] [245])
        (nil)))
(insn 567 566 568 3 (set (reg/f:DI 0 ax [502])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:128 87 {*movdi_internal_rex64}
     (nil))
(insn 568 567 569 3 (set (reg/f:DI 0 ax [orig:247 D.7553 ] [247])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [502])
                (const_int 504 [0x1f8])) [0 f_5(D)->grouserGeom+0 S8 A64])) backflip.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [502])
        (nil)))
(insn 569 568 570 3 (set (reg:DI 2 cx [503])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:128 87 {*movdi_internal_rex64}
     (nil))
(insn 570 569 571 3 (parallel [
            (set (reg:DI 2 cx [orig:248 D.7552 ] [248])
                (ashift:DI (reg:DI 2 cx [503])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:128 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [503])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 571 570 572 3 (parallel [
            (set (reg/f:DI 0 ax [orig:249 D.7553 ] [249])
                (plus:DI (reg/f:DI 0 ax [orig:247 D.7553 ] [247])
                    (reg:DI 2 cx [orig:248 D.7552 ] [248])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:128 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:248 D.7552 ] [248])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:247 D.7553 ] [247])
            (nil))))
(insn 572 571 573 3 (set (reg/f:DI 0 ax [orig:250 D.7550 ] [250])
        (mem/f:DI (reg/f:DI 0 ax [orig:249 D.7553 ] [249]) [0 *_202+0 S8 A64])) backflip.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:249 D.7553 ] [249])
        (nil)))
(insn 573 572 574 3 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:246 D.7546 ] [246])) backflip.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:246 D.7546 ] [246])
        (nil)))
(insn 574 573 575 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:250 D.7550 ] [250])) backflip.c:128 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:250 D.7550 ] [250])
        (nil)))
(call_insn 575 574 576 3 (call (mem:QI (symbol_ref:DI ("dGeomSetBody") [flags 0x41]  <function_decl 0x10000f3900 dGeomSetBody>) [0 dGeomSetBody S1 A8])
        (const_int 0 [0])) backflip.c:128 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 576 575 577 3 (set (reg/f:DI 0 ax [504])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:130 87 {*movdi_internal_rex64}
     (nil))
(insn 577 576 578 3 (set (reg/f:DI 0 ax [orig:251 D.7547 ] [251])
        (mem/f/j:DI (reg/f:DI 0 ax [504]) [0 f_5(D)->m+0 S8 A64])) backflip.c:130 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [504])
        (nil)))
(insn 578 577 579 3 (parallel [
            (set (reg:DI 2 cx [505])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:130 274 {*adddi_1}
     (nil))
(insn 579 578 580 3 (parallel [
            (set (reg:DI 1 dx [506])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:130 274 {*adddi_1}
     (nil))
(insn 580 579 581 3 (set (reg:DI 4 si [507])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:130 87 {*movdi_internal_rex64}
     (nil))
(insn 581 580 582 3 (set (reg:DI 2 cx)
        (reg:DI 2 cx [505])) backflip.c:130 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [505])
        (nil)))
(insn 582 581 583 3 (set (reg:DI 1 dx)
        (reg:DI 1 dx [506])) backflip.c:130 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [506])
        (nil)))
(insn 583 582 584 3 (set (reg:DI 4 si)
        (reg:DI 4 si [507])) backflip.c:130 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [507])
        (nil)))
(insn 584 583 585 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:251 D.7547 ] [251])) backflip.c:130 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:251 D.7547 ] [251])
        (nil)))
(call_insn 585 584 586 3 (call (mem:QI (symbol_ref:DI ("track_kinematic_model_compute_grouser_transform_3D") [flags 0x41]  <function_decl 0x1000090300 track_kinematic_model_compute_grouser_transform_3D>) [0 track_kinematic_model_compute_grouser_transform_3D S1 A8])
        (const_int 0 [0])) backflip.c:130 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 586 585 587 3 (set (reg/f:DI 0 ax [508])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:131 87 {*movdi_internal_rex64}
     (nil))
(insn 587 586 588 3 (set (reg:DF 22 xmm1 [orig:252 D.7548 ] [252])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [508])
                (const_int 544 [0x220])) [0 f_5(D)->zOffset+0 S8 A64])) backflip.c:131 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [508])
        (nil)))
(insn 588 587 869 3 (set (reg:DF 21 xmm0 [orig:253 D.7548 ] [253])
        (mem/j/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -416 [0xfffffffffffffe60])) [0 pos+16 S8 A64])) backflip.c:131 133 {*movdf_internal_rex64}
     (nil))
(insn 869 588 589 3 (set (reg:DF 23 xmm2 [orig:254 D.7548 ] [254])
        (reg:DF 22 xmm1 [orig:252 D.7548 ] [252])) backflip.c:131 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:252 D.7548 ] [252])
        (nil)))
(insn 589 869 870 3 (set (reg:DF 23 xmm2 [orig:254 D.7548 ] [254])
        (plus:DF (reg:DF 23 xmm2 [orig:254 D.7548 ] [254])
            (reg:DF 21 xmm0 [orig:253 D.7548 ] [253]))) backflip.c:131 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:253 D.7548 ] [253])
        (nil)))
(insn 870 589 590 3 (set (reg:DF 23 xmm2 [orig:254 D.7548 ] [254])
        (reg:DF 23 xmm2 [orig:254 D.7548 ] [254])) backflip.c:131 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:254 D.7548 ] [254])
        (nil)))
(insn 590 870 591 3 (set (reg/f:DI 0 ax [509])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:131 87 {*movdi_internal_rex64}
     (nil))
(insn 591 590 592 3 (set (reg:DF 22 xmm1 [orig:255 D.7548 ] [255])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [509])
                (const_int 536 [0x218])) [0 f_5(D)->yOffset+0 S8 A64])) backflip.c:131 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [509])
        (nil)))
(insn 592 591 593 3 (set (reg:DF 21 xmm0 [orig:256 D.7548 ] [256])
        (mem/j/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -424 [0xfffffffffffffe58])) [0 pos+8 S8 A64])) backflip.c:131 133 {*movdf_internal_rex64}
     (nil))
(insn 593 592 594 3 (set (reg:DF 22 xmm1 [orig:257 D.7548 ] [257])
        (plus:DF (reg:DF 22 xmm1 [orig:255 D.7548 ] [255])
            (reg:DF 21 xmm0 [orig:256 D.7548 ] [256]))) backflip.c:131 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:256 D.7548 ] [256])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:255 D.7548 ] [255])
            (nil))))
(insn 594 593 595 3 (set (reg/f:DI 0 ax [510])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:131 87 {*movdi_internal_rex64}
     (nil))
(insn 595 594 596 3 (set (reg:DF 24 xmm3 [orig:258 D.7548 ] [258])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [510])
                (const_int 528 [0x210])) [0 f_5(D)->xOffset+0 S8 A64])) backflip.c:131 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [510])
        (nil)))
(insn 596 595 597 3 (set (reg:DF 21 xmm0 [orig:259 D.7548 ] [259])
        (mem/j/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -432 [0xfffffffffffffe50])) [0 pos+0 S8 A64])) backflip.c:131 133 {*movdf_internal_rex64}
     (nil))
(insn 597 596 598 3 (set (reg:DF 21 xmm0 [orig:260 D.7548 ] [260])
        (plus:DF (reg:DF 21 xmm0 [orig:259 D.7548 ] [259])
            (reg:DF 24 xmm3 [orig:258 D.7548 ] [258]))) backflip.c:131 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:259 D.7548 ] [259])
        (expr_list:REG_DEAD (reg:DF 24 xmm3 [orig:258 D.7548 ] [258])
            (nil))))
(insn 598 597 599 3 (set (reg:DF 21 xmm0 [orig:261 D.7548 ] [261])
        (plus:DF (reg:DF 21 xmm0 [orig:260 D.7548 ] [260])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -480 [0xfffffffffffffe20])) [0 grouser_shift+0 S8 A64]))) backflip.c:131 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:260 D.7548 ] [260])
        (nil)))
(insn 599 598 600 3 (set (reg/f:DI 0 ax [511])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:131 87 {*movdi_internal_rex64}
     (nil))
(insn 600 599 601 3 (set (reg/f:DI 0 ax [orig:262 D.7554 ] [262])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [511])
                (const_int 496 [0x1f0])) [0 f_5(D)->grouserBody+0 S8 A64])) backflip.c:131 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [511])
        (nil)))
(insn 601 600 602 3 (set (reg:DI 1 dx [512])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:131 87 {*movdi_internal_rex64}
     (nil))
(insn 602 601 603 3 (parallel [
            (set (reg:DI 1 dx [orig:263 D.7552 ] [263])
                (ashift:DI (reg:DI 1 dx [512])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:131 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [512])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 603 602 604 3 (parallel [
            (set (reg/f:DI 0 ax [orig:264 D.7554 ] [264])
                (plus:DI (reg/f:DI 0 ax [orig:262 D.7554 ] [262])
                    (reg:DI 1 dx [orig:263 D.7552 ] [263])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:131 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:263 D.7552 ] [263])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:262 D.7554 ] [262])
            (nil))))
(insn 604 603 605 3 (set (reg/f:DI 0 ax [orig:265 D.7546 ] [265])
        (mem/f:DI (reg/f:DI 0 ax [orig:264 D.7554 ] [264]) [0 *_217+0 S8 A64])) backflip.c:131 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:264 D.7554 ] [264])
        (nil)))
(insn 605 604 606 3 (set (reg:DF 23 xmm2)
        (reg:DF 23 xmm2 [orig:254 D.7548 ] [254])) backflip.c:131 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:254 D.7548 ] [254])
        (nil)))
(insn 606 605 607 3 (set (reg:DF 22 xmm1)
        (reg:DF 22 xmm1 [orig:257 D.7548 ] [257])) backflip.c:131 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:257 D.7548 ] [257])
        (nil)))
(insn 607 606 608 3 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:261 D.7548 ] [261])) backflip.c:131 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:261 D.7548 ] [261])
        (nil)))
(insn 608 607 609 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:265 D.7546 ] [265])) backflip.c:131 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:265 D.7546 ] [265])
        (nil)))
(call_insn 609 608 610 3 (call (mem:QI (symbol_ref:DI ("dBodySetPosition") [flags 0x41]  <function_decl 0x10000d6f00 dBodySetPosition>) [0 dBodySetPosition S1 A8])
        (const_int 0 [0])) backflip.c:131 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 610 609 611 3 (set (reg/f:DI 0 ax [513])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:132 87 {*movdi_internal_rex64}
     (nil))
(insn 611 610 612 3 (set (reg/f:DI 0 ax [orig:266 D.7554 ] [266])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [513])
                (const_int 496 [0x1f0])) [0 f_5(D)->grouserBody+0 S8 A64])) backflip.c:132 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [513])
        (nil)))
(insn 612 611 613 3 (set (reg:DI 1 dx [514])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:132 87 {*movdi_internal_rex64}
     (nil))
(insn 613 612 614 3 (parallel [
            (set (reg:DI 1 dx [orig:267 D.7552 ] [267])
                (ashift:DI (reg:DI 1 dx [514])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:132 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [514])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 614 613 615 3 (parallel [
            (set (reg/f:DI 0 ax [orig:268 D.7554 ] [268])
                (plus:DI (reg/f:DI 0 ax [orig:266 D.7554 ] [266])
                    (reg:DI 1 dx [orig:267 D.7552 ] [267])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:132 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:267 D.7552 ] [267])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:266 D.7554 ] [266])
            (nil))))
(insn 615 614 616 3 (set (reg/f:DI 0 ax [orig:269 D.7546 ] [269])
        (mem/f:DI (reg/f:DI 0 ax [orig:268 D.7554 ] [268]) [0 *_221+0 S8 A64])) backflip.c:132 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:268 D.7554 ] [268])
        (nil)))
(insn 616 615 617 3 (parallel [
            (set (reg:DI 1 dx [515])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:132 274 {*adddi_1}
     (nil))
(insn 617 616 618 3 (set (reg:DI 4 si)
        (reg:DI 1 dx [515])) backflip.c:132 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [515])
        (nil)))
(insn 618 617 619 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:269 D.7546 ] [269])) backflip.c:132 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:269 D.7546 ] [269])
        (nil)))
(call_insn 619 618 620 3 (call (mem:QI (symbol_ref:DI ("dBodySetRotation") [flags 0x41]  <function_decl 0x1000059400 dBodySetRotation>) [0 dBodySetRotation S1 A8])
        (const_int 0 [0])) backflip.c:132 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 620 619 621 3 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:121 274 {*adddi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 199 200 516
(code_label 621 620 622 4 4 "" [1 uses])
(note 622 621 623 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 623 622 624 4 (set (reg/f:DI 0 ax [516])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:121 87 {*movdi_internal_rex64}
     (nil))
(insn 624 623 625 4 (set (reg/f:DI 0 ax [orig:199 D.7547 ] [199])
        (mem/f/j:DI (reg/f:DI 0 ax [516]) [0 f_5(D)->m+0 S8 A64])) backflip.c:121 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [516])
        (nil)))
(insn 625 624 627 4 (set (reg:DI 0 ax [orig:200 D.7552 ] [200])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:199 D.7547 ] [199])
                (const_int 24 [0x18])) [0 _152->numGrousers+0 S8 A64])) backflip.c:121 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:199 D.7547 ] [199])
        (nil)))
(insn 627 625 628 4 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:200 D.7552 ] [200])
            (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64]))) backflip.c:121 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:200 D.7552 ] [200])
        (nil)))
(jump_insn 628 627 629 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 626)
            (pc))) backflip.c:121 612 {*jcc_1}
     (nil)
 -> 626)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 629 628 630 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 630 629 820 5 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])
        (const_int 0 [0])) backflip.c:136 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 820 630 821 5 (set (pc)
        (label_ref 801)) backflip.c:136 650 {jump}
     (nil)
 -> 801)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 821 820 806)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 272 273 274 517 518 519 520 521
(code_label 806 821 633 6 11 "" [1 uses])
(note 633 806 634 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 634 633 635 6 (set (reg:DI 0 ax [517])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:137 87 {*movdi_internal_rex64}
     (nil))
(insn 635 634 636 6 (parallel [
            (set (reg:DI 1 dx [orig:272 D.7552 ] [272])
                (plus:DI (reg:DI 0 ax [517])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:137 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [517])
        (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 1 [0x1]))
            (nil))))
(insn 636 635 637 6 (set (reg/f:DI 0 ax [518])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:137 87 {*movdi_internal_rex64}
     (nil))
(insn 637 636 638 6 (set (reg/f:DI 0 ax [orig:273 D.7547 ] [273])
        (mem/f/j:DI (reg/f:DI 0 ax [518]) [0 f_5(D)->m+0 S8 A64])) backflip.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [518])
        (nil)))
(insn 638 637 871 6 (set (reg:DI 2 cx [orig:274 D.7552 ] [274])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:273 D.7547 ] [273])
                (const_int 24 [0x18])) [0 _228->numGrousers+0 S8 A64])) backflip.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:273 D.7547 ] [273])
        (nil)))
(insn 871 638 639 6 (set (reg:DI 0 ax [520])
        (reg:DI 1 dx [orig:272 D.7552 ] [272])) backflip.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:272 D.7552 ] [272])
        (nil)))
(insn 639 871 640 6 (parallel [
            (set (reg:DI 0 ax [520])
                (udiv:DI (reg:DI 0 ax [520])
                    (reg:DI 2 cx [orig:274 D.7552 ] [274])))
            (set (reg:DI 1 dx [519])
                (umod:DI (reg:DI 0 ax [520])
                    (reg:DI 2 cx [orig:274 D.7552 ] [274])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:137 376 {*udivmoddi4}
     (expr_list:REG_UNUSED (reg:DI 0 ax [520])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:274 D.7552 ] [274])
            (nil))))
(insn 640 639 641 6 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -472 [0xfffffffffffffe28])) [0 j+0 S8 A64])
        (reg:DI 1 dx [519])) backflip.c:137 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [519])
        (nil)))
(insn 641 640 642 6 (set (reg:DI 0 ax [521])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 642 641 643 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [521])
            (const_int 0 [0]))) backflip.c:139 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 643 642 812 6 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 647)
            (pc))) backflip.c:139 612 {*jcc_1}
     (nil)
 -> 647)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 521

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 521
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 521
;; lr  def 	 275
(note 812 643 644 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 644 812 822 7 (set (reg:DF 21 xmm0 [orig:275 D.7548 ] [275])
        (float:DF (reg:DI 0 ax [521]))) backflip.c:139 243 {*floatdidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:DI 0 ax [521])
        (nil)))
(jump_insn 822 644 823 7 (set (pc)
        (label_ref 653)) 650 {jump}
     (nil)
 -> 653)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275

(barrier 823 822 647)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 521
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 521
;; lr  def 	 17 [flags] 275 522 523 524
(code_label 647 823 813 8 7 "" [1 uses])
(note 813 647 872 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 872 813 648 8 (set (reg:DI 1 dx [523])
        (reg:DI 0 ax [521])) backflip.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 648 872 873 8 (parallel [
            (set (reg:DI 1 dx [523])
                (lshiftrt:DI (reg:DI 1 dx [523])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:139 547 {*lshrdi3_1}
     (nil))
(insn 873 648 649 8 (set (reg:DI 1 dx [523])
        (reg:DI 1 dx [523])) backflip.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [523])
        (nil)))
(insn 649 873 650 8 (parallel [
            (set (reg:DI 0 ax [524])
                (and:DI (reg:DI 0 ax [521])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:139 392 {*anddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [521])
        (nil)))
(insn 650 649 651 8 (parallel [
            (set (reg:DI 1 dx [523])
                (ior:DI (reg:DI 1 dx [523])
                    (reg:DI 0 ax [524])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:139 414 {*iordi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [524])
        (nil)))
(insn 651 650 652 8 (set (reg:DF 21 xmm0 [522])
        (float:DF (reg:DI 1 dx [523]))) backflip.c:139 243 {*floatdidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:DI 1 dx [523])
        (nil)))
(insn 652 651 653 8 (set (reg:DF 21 xmm0 [orig:275 D.7548 ] [275])
        (plus:DF (reg:DF 21 xmm0 [522])
            (reg:DF 21 xmm0 [522]))) backflip.c:139 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [522])
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 276 277 525
(code_label 653 652 814 9 8 "" [1 uses])
(note 814 653 654 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 654 814 655 9 (set (reg/f:DI 0 ax [525])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 655 654 656 9 (set (reg/f:DI 0 ax [orig:276 D.7547 ] [276])
        (mem/f/j:DI (reg/f:DI 0 ax [525]) [0 f_5(D)->m+0 S8 A64])) backflip.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [525])
        (nil)))
(insn 656 655 657 9 (set (reg:DI 0 ax [orig:277 D.7552 ] [277])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:276 D.7547 ] [276])
                (const_int 24 [0x18])) [0 _232->numGrousers+0 S8 A64])) backflip.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:276 D.7547 ] [276])
        (nil)))
(insn 657 656 658 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:277 D.7552 ] [277])
            (const_int 0 [0]))) backflip.c:139 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 658 657 815 9 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) backflip.c:139 612 {*jcc_1}
     (nil)
 -> 662)
;;  succ:       11
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275 277

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275 277
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 277
;; lr  def 	 278
(note 815 658 659 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 659 815 824 10 (set (reg:DF 22 xmm1 [orig:278 D.7548 ] [278])
        (float:DF (reg:DI 0 ax [orig:277 D.7552 ] [277]))) backflip.c:139 243 {*floatdidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:277 D.7552 ] [277])
        (nil)))
(jump_insn 824 659 825 10 (set (pc)
        (label_ref 668)) 650 {jump}
     (nil)
 -> 668)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275 278

(barrier 825 824 662)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275 277
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 277
;; lr  def 	 17 [flags] 278 526 527 528
(code_label 662 825 816 11 9 "" [1 uses])
(note 816 662 874 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 874 816 663 11 (set (reg:DI 1 dx [527])
        (reg:DI 0 ax [orig:277 D.7552 ] [277])) backflip.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 663 874 875 11 (parallel [
            (set (reg:DI 1 dx [527])
                (lshiftrt:DI (reg:DI 1 dx [527])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:139 547 {*lshrdi3_1}
     (nil))
(insn 875 663 664 11 (set (reg:DI 1 dx [527])
        (reg:DI 1 dx [527])) backflip.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [527])
        (nil)))
(insn 664 875 665 11 (parallel [
            (set (reg:DI 0 ax [528])
                (and:DI (reg:DI 0 ax [orig:277 D.7552 ] [277])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:139 392 {*anddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:277 D.7552 ] [277])
        (nil)))
(insn 665 664 666 11 (parallel [
            (set (reg:DI 1 dx [527])
                (ior:DI (reg:DI 1 dx [527])
                    (reg:DI 0 ax [528])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:139 414 {*iordi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [528])
        (nil)))
(insn 666 665 667 11 (set (reg:DF 22 xmm1 [526])
        (float:DF (reg:DI 1 dx [527]))) backflip.c:139 243 {*floatdidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:DI 1 dx [527])
        (nil)))
(insn 667 666 668 11 (set (reg:DF 22 xmm1 [orig:278 D.7548 ] [278])
        (plus:DF (reg:DF 22 xmm1 [526])
            (reg:DF 22 xmm1 [526]))) backflip.c:139 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [526])
        (nil)))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275 278

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              10 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275 278
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562
(code_label 668 667 817 12 10 "" [1 uses])
(note 817 668 669 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 669 817 670 12 (set (reg:DF 21 xmm0 [orig:279 D.7548 ] [279])
        (div:DF (reg:DF 21 xmm0 [orig:275 D.7548 ] [275])
            (reg:DF 22 xmm1 [orig:278 D.7548 ] [278]))) backflip.c:139 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:278 D.7548 ] [278])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:275 D.7548 ] [275])
            (nil))))
(insn 670 669 671 12 (set (reg/f:DI 0 ax [529])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:139 87 {*movdi_internal_rex64}
     (nil))
(insn 671 670 672 12 (set (reg/f:DI 0 ax [orig:280 D.7547 ] [280])
        (mem/f/j:DI (reg/f:DI 0 ax [529]) [0 f_5(D)->m+0 S8 A64])) backflip.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [529])
        (nil)))
(insn 672 671 673 12 (parallel [
            (set (reg:DI 2 cx [530])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:139 274 {*adddi_1}
     (nil))
(insn 673 672 674 12 (parallel [
            (set (reg:DI 1 dx [531])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -432 [0xfffffffffffffe50])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:139 274 {*adddi_1}
     (nil))
(insn 674 673 675 12 (parallel [
            (set (reg:DI 4 si [532])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -520 [0xfffffffffffffdf8])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:139 274 {*adddi_1}
     (nil))
(insn 675 674 676 12 (set (reg:DI 2 cx)
        (reg:DI 2 cx [530])) backflip.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [530])
        (nil)))
(insn 676 675 677 12 (set (reg:DI 1 dx)
        (reg:DI 1 dx [531])) backflip.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [531])
        (nil)))
(insn 677 676 678 12 (set (reg:DI 4 si)
        (reg:DI 4 si [532])) backflip.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [532])
        (nil)))
(insn 678 677 679 12 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:279 D.7548 ] [279])) backflip.c:139 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:279 D.7548 ] [279])
        (nil)))
(insn 679 678 680 12 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:280 D.7547 ] [280])) backflip.c:139 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:280 D.7547 ] [280])
        (nil)))
(call_insn 680 679 681 12 (call (mem:QI (symbol_ref:DI ("track_kinematic_model_get_point_on_path") [flags 0x41]  <function_decl 0x1000090100 track_kinematic_model_get_point_on_path>) [0 track_kinematic_model_get_point_on_path S1 A8])
        (const_int 0 [0])) backflip.c:139 656 {*call}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                        (nil)))))))
(insn 681 680 682 12 (set (reg:DF 21 xmm0 [orig:281 a.0 ] [281])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 a+0 S8 A64])) backflip.c:140 133 {*movdf_internal_rex64}
     (nil))
(insn 682 681 683 12 (set (reg:DF 22 xmm1 [533])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) backflip.c:140 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.5707963267948965579989817342720925807952880859375e+0 [0x0.c90fdaa22168cp+1])
        (nil)))
(insn 683 682 684 12 (set (reg:DF 21 xmm0 [orig:282 D.7548 ] [282])
        (minus:DF (reg:DF 21 xmm0 [orig:281 a.0 ] [281])
            (reg:DF 22 xmm1 [533]))) backflip.c:140 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [533])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:281 a.0 ] [281])
            (nil))))
(insn 684 683 685 12 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:282 D.7548 ] [282])) backflip.c:140 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:282 D.7548 ] [282])
        (nil)))
(call_insn/u 685 684 686 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x10000fa700 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) backflip.c:140 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 686 685 876 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 21 xmm0)) backflip.c:140 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 876 686 687 12 (set (reg:DF 0 ax [534])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:140 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 607)
        (nil)))
(insn 687 876 688 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -464 [0xfffffffffffffe30])) [0 dx+0 S8 A64])
        (reg:DF 0 ax [534])) backflip.c:140 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [534])
        (nil)))
(insn 688 687 689 12 (set (reg:DF 21 xmm0 [orig:283 a.1 ] [283])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 a+0 S8 A64])) backflip.c:141 133 {*movdf_internal_rex64}
     (nil))
(insn 689 688 690 12 (set (reg:DF 22 xmm1 [535])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) backflip.c:141 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.5707963267948965579989817342720925807952880859375e+0 [0x0.c90fdaa22168cp+1])
        (nil)))
(insn 690 689 691 12 (set (reg:DF 21 xmm0 [orig:284 D.7548 ] [284])
        (minus:DF (reg:DF 21 xmm0 [orig:283 a.1 ] [283])
            (reg:DF 22 xmm1 [535]))) backflip.c:141 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [535])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:283 a.1 ] [283])
            (nil))))
(insn 691 690 692 12 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:284 D.7548 ] [284])) backflip.c:141 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:284 D.7548 ] [284])
        (nil)))
(call_insn/u 692 691 693 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x1000045d00 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) backflip.c:141 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 693 692 877 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 21 xmm0)) backflip.c:141 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 877 693 694 12 (set (reg:DF 0 ax [536])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:141 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 608)
        (nil)))
(insn 694 877 695 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -456 [0xfffffffffffffe38])) [0 dz+0 S8 A64])
        (reg:DF 0 ax [536])) backflip.c:141 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [536])
        (nil)))
(insn 695 694 696 12 (set (reg:DF 22 xmm1 [orig:285 px.2 ] [285])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -520 [0xfffffffffffffdf8])) [0 px+0 S8 A64])) backflip.c:142 133 {*movdf_internal_rex64}
     (nil))
(insn 696 695 697 12 (set (reg/f:DI 0 ax [537])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:142 87 {*movdi_internal_rex64}
     (nil))
(insn 697 696 698 12 (set (reg/f:DI 0 ax [orig:286 D.7547 ] [286])
        (mem/f/j:DI (reg/f:DI 0 ax [537]) [0 f_5(D)->m+0 S8 A64])) backflip.c:142 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [537])
        (nil)))
(insn 698 697 699 12 (set (reg:DF 21 xmm0 [orig:287 D.7548 ] [287])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:286 D.7547 ] [286])
                (const_int 32 [0x20])) [0 _244->grouserWidth+0 S8 A64])) backflip.c:142 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:286 D.7547 ] [286])
        (nil)))
(insn 699 698 700 12 (set (reg:DF 21 xmm0 [orig:288 D.7548 ] [288])
        (mult:DF (reg:DF 21 xmm0 [orig:287 D.7548 ] [287])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -488 [0xfffffffffffffe18])) [0 gf+0 S8 A64]))) backflip.c:142 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:287 D.7548 ] [287])
        (nil)))
(insn 700 699 701 12 (set (reg:DF 23 xmm2 [538])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) backflip.c:142 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 701 700 702 12 (set (reg:DF 21 xmm0 [orig:289 D.7548 ] [289])
        (mult:DF (reg:DF 21 xmm0 [orig:288 D.7548 ] [288])
            (reg:DF 23 xmm2 [538]))) backflip.c:142 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [538])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:288 D.7548 ] [288])
            (nil))))
(insn 702 701 878 12 (set (reg:DF 21 xmm0 [orig:290 D.7548 ] [290])
        (mult:DF (reg:DF 21 xmm0 [orig:289 D.7548 ] [289])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -464 [0xfffffffffffffe30])) [0 dx+0 S8 A64]))) backflip.c:142 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:289 D.7548 ] [289])
        (nil)))
(insn 878 702 703 12 (set (reg:DF 22 xmm1 [539])
        (reg:DF 22 xmm1 [orig:285 px.2 ] [285])) backflip.c:142 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:285 px.2 ] [285])
        (nil)))
(insn 703 878 879 12 (set (reg:DF 22 xmm1 [539])
        (minus:DF (reg:DF 22 xmm1 [539])
            (reg:DF 21 xmm0 [orig:290 D.7548 ] [290]))) backflip.c:142 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:290 D.7548 ] [290])
        (nil)))
(insn 879 703 704 12 (set (reg:DF 21 xmm0 [539])
        (reg:DF 22 xmm1 [539])) backflip.c:142 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [539])
        (nil)))
(insn 704 879 705 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -448 [0xfffffffffffffe40])) [0 qx+0 S8 A64])
        (reg:DF 21 xmm0 [539])) backflip.c:142 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [539])
        (nil)))
(insn 705 704 706 12 (set (reg:DF 22 xmm1 [orig:291 pz.3 ] [291])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -432 [0xfffffffffffffe50])) [0 pz+0 S8 A64])) backflip.c:143 133 {*movdf_internal_rex64}
     (nil))
(insn 706 705 707 12 (set (reg/f:DI 0 ax [540])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:143 87 {*movdi_internal_rex64}
     (nil))
(insn 707 706 708 12 (set (reg/f:DI 0 ax [orig:292 D.7547 ] [292])
        (mem/f/j:DI (reg/f:DI 0 ax [540]) [0 f_5(D)->m+0 S8 A64])) backflip.c:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [540])
        (nil)))
(insn 708 707 709 12 (set (reg:DF 21 xmm0 [orig:293 D.7548 ] [293])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:292 D.7547 ] [292])
                (const_int 32 [0x20])) [0 _251->grouserWidth+0 S8 A64])) backflip.c:143 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:292 D.7547 ] [292])
        (nil)))
(insn 709 708 710 12 (set (reg:DF 21 xmm0 [orig:294 D.7548 ] [294])
        (mult:DF (reg:DF 21 xmm0 [orig:293 D.7548 ] [293])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -488 [0xfffffffffffffe18])) [0 gf+0 S8 A64]))) backflip.c:143 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:293 D.7548 ] [293])
        (nil)))
(insn 710 709 711 12 (set (reg:DF 23 xmm2 [541])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) backflip.c:143 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 711 710 712 12 (set (reg:DF 21 xmm0 [orig:295 D.7548 ] [295])
        (mult:DF (reg:DF 21 xmm0 [orig:294 D.7548 ] [294])
            (reg:DF 23 xmm2 [541]))) backflip.c:143 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [541])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:294 D.7548 ] [294])
            (nil))))
(insn 712 711 880 12 (set (reg:DF 21 xmm0 [orig:296 D.7548 ] [296])
        (mult:DF (reg:DF 21 xmm0 [orig:295 D.7548 ] [295])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -456 [0xfffffffffffffe38])) [0 dz+0 S8 A64]))) backflip.c:143 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:295 D.7548 ] [295])
        (nil)))
(insn 880 712 713 12 (set (reg:DF 22 xmm1 [542])
        (reg:DF 22 xmm1 [orig:291 pz.3 ] [291])) backflip.c:143 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:291 pz.3 ] [291])
        (nil)))
(insn 713 880 881 12 (set (reg:DF 22 xmm1 [542])
        (minus:DF (reg:DF 22 xmm1 [542])
            (reg:DF 21 xmm0 [orig:296 D.7548 ] [296]))) backflip.c:143 785 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:296 D.7548 ] [296])
        (nil)))
(insn 881 713 714 12 (set (reg:DF 21 xmm0 [542])
        (reg:DF 22 xmm1 [542])) backflip.c:143 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [542])
        (nil)))
(insn 714 881 715 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -440 [0xfffffffffffffe48])) [0 qz+0 S8 A64])
        (reg:DF 21 xmm0 [542])) backflip.c:143 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [542])
        (nil)))
(insn 715 714 716 12 (set (reg/f:DI 0 ax [543])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:144 87 {*movdi_internal_rex64}
     (nil))
(insn 716 715 717 12 (set (reg/f:DI 0 ax [orig:297 D.7547 ] [297])
        (mem/f/j:DI (reg/f:DI 0 ax [543]) [0 f_5(D)->m+0 S8 A64])) backflip.c:144 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [543])
        (nil)))
(insn 717 716 718 12 (set (reg:DF 21 xmm0 [orig:298 D.7548 ] [298])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:297 D.7547 ] [297])
                (const_int 32 [0x20])) [0 _257->grouserWidth+0 S8 A64])) backflip.c:144 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:297 D.7547 ] [297])
        (nil)))
(insn 718 717 719 12 (set (reg:DF 21 xmm0 [orig:299 D.7548 ] [299])
        (mult:DF (reg:DF 21 xmm0 [orig:298 D.7548 ] [298])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -488 [0xfffffffffffffe18])) [0 gf+0 S8 A64]))) backflip.c:144 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:298 D.7548 ] [298])
        (nil)))
(insn 719 718 720 12 (set (reg:DF 22 xmm1 [544])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) backflip.c:144 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 720 719 721 12 (set (reg:DF 21 xmm0 [orig:300 D.7548 ] [300])
        (mult:DF (reg:DF 21 xmm0 [orig:299 D.7548 ] [299])
            (reg:DF 22 xmm1 [544]))) backflip.c:144 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [544])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:299 D.7548 ] [299])
            (nil))))
(insn 721 720 722 12 (set (reg:DF 21 xmm0 [orig:301 D.7548 ] [301])
        (mult:DF (reg:DF 21 xmm0 [orig:300 D.7548 ] [300])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -464 [0xfffffffffffffe30])) [0 dx+0 S8 A64]))) backflip.c:144 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:300 D.7548 ] [300])
        (nil)))
(insn 722 721 723 12 (set (reg:DF 22 xmm1 [orig:302 px.4 ] [302])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -520 [0xfffffffffffffdf8])) [0 px+0 S8 A64])) backflip.c:144 133 {*movdf_internal_rex64}
     (nil))
(insn 723 722 724 12 (set (reg:DF 21 xmm0 [orig:303 px.5 ] [303])
        (plus:DF (reg:DF 21 xmm0 [orig:301 D.7548 ] [301])
            (reg:DF 22 xmm1 [orig:302 px.4 ] [302]))) backflip.c:144 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:302 px.4 ] [302])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:301 D.7548 ] [301])
            (nil))))
(insn 724 723 725 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -520 [0xfffffffffffffdf8])) [0 px+0 S8 A64])
        (reg:DF 21 xmm0 [orig:303 px.5 ] [303])) backflip.c:144 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:303 px.5 ] [303])
        (nil)))
(insn 725 724 726 12 (set (reg/f:DI 0 ax [545])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:145 87 {*movdi_internal_rex64}
     (nil))
(insn 726 725 727 12 (set (reg/f:DI 0 ax [orig:304 D.7547 ] [304])
        (mem/f/j:DI (reg/f:DI 0 ax [545]) [0 f_5(D)->m+0 S8 A64])) backflip.c:145 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [545])
        (nil)))
(insn 727 726 728 12 (set (reg:DF 21 xmm0 [orig:305 D.7548 ] [305])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:304 D.7547 ] [304])
                (const_int 32 [0x20])) [0 _264->grouserWidth+0 S8 A64])) backflip.c:145 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:304 D.7547 ] [304])
        (nil)))
(insn 728 727 729 12 (set (reg:DF 21 xmm0 [orig:306 D.7548 ] [306])
        (mult:DF (reg:DF 21 xmm0 [orig:305 D.7548 ] [305])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -488 [0xfffffffffffffe18])) [0 gf+0 S8 A64]))) backflip.c:145 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:305 D.7548 ] [305])
        (nil)))
(insn 729 728 730 12 (set (reg:DF 22 xmm1 [546])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) backflip.c:145 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 730 729 731 12 (set (reg:DF 21 xmm0 [orig:307 D.7548 ] [307])
        (mult:DF (reg:DF 21 xmm0 [orig:306 D.7548 ] [306])
            (reg:DF 22 xmm1 [546]))) backflip.c:145 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [546])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:306 D.7548 ] [306])
            (nil))))
(insn 731 730 732 12 (set (reg:DF 21 xmm0 [orig:308 D.7548 ] [308])
        (mult:DF (reg:DF 21 xmm0 [orig:307 D.7548 ] [307])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -456 [0xfffffffffffffe38])) [0 dz+0 S8 A64]))) backflip.c:145 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:307 D.7548 ] [307])
        (nil)))
(insn 732 731 733 12 (set (reg:DF 22 xmm1 [orig:309 pz.6 ] [309])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -432 [0xfffffffffffffe50])) [0 pz+0 S8 A64])) backflip.c:145 133 {*movdf_internal_rex64}
     (nil))
(insn 733 732 734 12 (set (reg:DF 21 xmm0 [orig:310 pz.7 ] [310])
        (plus:DF (reg:DF 21 xmm0 [orig:308 D.7548 ] [308])
            (reg:DF 22 xmm1 [orig:309 pz.6 ] [309]))) backflip.c:145 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:309 pz.6 ] [309])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:308 D.7548 ] [308])
            (nil))))
(insn 734 733 735 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -432 [0xfffffffffffffe50])) [0 pz+0 S8 A64])
        (reg:DF 21 xmm0 [orig:310 pz.7 ] [310])) backflip.c:145 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:310 pz.7 ] [310])
        (nil)))
(insn 735 734 736 12 (set (reg/f:DI 0 ax [547])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 736 735 737 12 (set (reg/f:DI 0 ax [orig:311 D.7556 ] [311])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [547])
                (const_int 512 [0x200])) [0 f_5(D)->grouserJoint+0 S8 A64])) backflip.c:146 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [547])
        (nil)))
(insn 737 736 738 12 (set (reg:DI 1 dx [548])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 738 737 739 12 (parallel [
            (set (reg:DI 1 dx [orig:312 D.7552 ] [312])
                (ashift:DI (reg:DI 1 dx [548])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:146 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [548])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 739 738 740 12 (parallel [
            (set (reg/f:DI 3 bx [orig:313 D.7556 ] [313])
                (plus:DI (reg/f:DI 0 ax [orig:311 D.7556 ] [311])
                    (reg:DI 1 dx [orig:312 D.7552 ] [312])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:146 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:312 D.7552 ] [312])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:311 D.7556 ] [311])
            (nil))))
(insn 740 739 741 12 (set (reg:DI 0 ax [549])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -552 [0xfffffffffffffdd8])) [0 world+0 S8 A64])) backflip.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 741 740 742 12 (set (reg:DI 4 si)
        (const_int 0 [0])) backflip.c:146 87 {*movdi_internal_rex64}
     (nil))
(insn 742 741 743 12 (set (reg:DI 5 di)
        (reg:DI 0 ax [549])) backflip.c:146 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [549])
        (nil)))
(call_insn 743 742 744 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dJointCreateHinge") [flags 0x41]  <function_decl 0x100007fc00 dJointCreateHinge>) [0 dJointCreateHinge S1 A8])
            (const_int 0 [0]))) backflip.c:146 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 744 743 745 12 (set (reg/f:DI 0 ax [orig:314 D.7551 ] [314])
        (reg:DI 0 ax)) backflip.c:146 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 745 744 746 12 (set (mem/f:DI (reg/f:DI 3 bx [orig:313 D.7556 ] [313]) [0 *_273+0 S8 A64])
        (reg/f:DI 0 ax [orig:314 D.7551 ] [314])) backflip.c:146 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:314 D.7551 ] [314])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:313 D.7556 ] [313])
            (nil))))
(insn 746 745 747 12 (set (reg/f:DI 0 ax [550])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 747 746 748 12 (set (reg/f:DI 0 ax [orig:315 D.7554 ] [315])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [550])
                (const_int 496 [0x1f0])) [0 f_5(D)->grouserBody+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [550])
        (nil)))
(insn 748 747 749 12 (set (reg:DI 1 dx [551])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -472 [0xfffffffffffffe28])) [0 j+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 749 748 750 12 (parallel [
            (set (reg:DI 1 dx [orig:316 D.7552 ] [316])
                (ashift:DI (reg:DI 1 dx [551])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:147 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [551])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -456 [0xfffffffffffffe38])) [0 j+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 750 749 751 12 (parallel [
            (set (reg/f:DI 0 ax [orig:317 D.7554 ] [317])
                (plus:DI (reg/f:DI 0 ax [orig:315 D.7554 ] [315])
                    (reg:DI 1 dx [orig:316 D.7552 ] [316])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:147 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:316 D.7552 ] [316])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:315 D.7554 ] [315])
            (nil))))
(insn 751 750 752 12 (set (reg/f:DI 1 dx [orig:318 D.7546 ] [318])
        (mem/f:DI (reg/f:DI 0 ax [orig:317 D.7554 ] [317]) [0 *_277+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:317 D.7554 ] [317])
        (nil)))
(insn 752 751 753 12 (set (reg/f:DI 0 ax [552])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 753 752 754 12 (set (reg/f:DI 0 ax [orig:319 D.7554 ] [319])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [552])
                (const_int 496 [0x1f0])) [0 f_5(D)->grouserBody+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [552])
        (nil)))
(insn 754 753 755 12 (set (reg:DI 2 cx [553])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 755 754 756 12 (parallel [
            (set (reg:DI 2 cx [orig:320 D.7552 ] [320])
                (ashift:DI (reg:DI 2 cx [553])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:147 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [553])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 756 755 757 12 (parallel [
            (set (reg/f:DI 0 ax [orig:321 D.7554 ] [321])
                (plus:DI (reg/f:DI 0 ax [orig:319 D.7554 ] [319])
                    (reg:DI 2 cx [orig:320 D.7552 ] [320])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:147 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:320 D.7552 ] [320])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:319 D.7554 ] [319])
            (nil))))
(insn 757 756 758 12 (set (reg/f:DI 2 cx [orig:322 D.7546 ] [322])
        (mem/f:DI (reg/f:DI 0 ax [orig:321 D.7554 ] [321]) [0 *_281+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:321 D.7554 ] [321])
        (nil)))
(insn 758 757 759 12 (set (reg/f:DI 0 ax [554])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 759 758 760 12 (set (reg/f:DI 0 ax [orig:323 D.7556 ] [323])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [554])
                (const_int 512 [0x200])) [0 f_5(D)->grouserJoint+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [554])
        (nil)))
(insn 760 759 761 12 (set (reg:DI 4 si [555])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (nil))
(insn 761 760 762 12 (parallel [
            (set (reg:DI 4 si [orig:324 D.7552 ] [324])
                (ashift:DI (reg:DI 4 si [555])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:147 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 4 si [555])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 762 761 763 12 (parallel [
            (set (reg/f:DI 0 ax [orig:325 D.7556 ] [325])
                (plus:DI (reg/f:DI 0 ax [orig:323 D.7556 ] [323])
                    (reg:DI 4 si [orig:324 D.7552 ] [324])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:147 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:324 D.7552 ] [324])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:323 D.7556 ] [323])
            (nil))))
(insn 763 762 764 12 (set (reg/f:DI 0 ax [orig:326 D.7551 ] [326])
        (mem/f:DI (reg/f:DI 0 ax [orig:325 D.7556 ] [325]) [0 *_285+0 S8 A64])) backflip.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:325 D.7556 ] [325])
        (nil)))
(insn 764 763 765 12 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:318 D.7546 ] [318])) backflip.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:318 D.7546 ] [318])
        (nil)))
(insn 765 764 766 12 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:322 D.7546 ] [322])) backflip.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:322 D.7546 ] [322])
        (nil)))
(insn 766 765 767 12 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:326 D.7551 ] [326])) backflip.c:147 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:326 D.7551 ] [326])
        (nil)))
(call_insn 767 766 768 12 (call (mem:QI (symbol_ref:DI ("dJointAttach") [flags 0x41]  <function_decl 0x1000089700 dJointAttach>) [0 dJointAttach S1 A8])
        (const_int 0 [0])) backflip.c:147 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 768 767 769 12 (set (reg/f:DI 0 ax [556])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 769 768 770 12 (set (reg:DF 22 xmm1 [orig:327 D.7548 ] [327])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [556])
                (const_int 544 [0x220])) [0 f_5(D)->zOffset+0 S8 A64])) backflip.c:148 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [556])
        (nil)))
(insn 770 769 771 12 (set (reg:DF 21 xmm0 [orig:328 pz.8 ] [328])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -432 [0xfffffffffffffe50])) [0 pz+0 S8 A64])) backflip.c:148 133 {*movdf_internal_rex64}
     (nil))
(insn 771 770 772 12 (set (reg:DF 22 xmm1 [orig:329 D.7548 ] [329])
        (plus:DF (reg:DF 22 xmm1 [orig:327 D.7548 ] [327])
            (reg:DF 21 xmm0 [orig:328 pz.8 ] [328]))) backflip.c:148 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:328 pz.8 ] [328])
        (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:327 D.7548 ] [327])
            (nil))))
(insn 772 771 773 12 (set (reg/f:DI 0 ax [557])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 773 772 774 12 (set (reg:DF 0 ax [orig:330 D.7548 ] [330])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [557])
                (const_int 536 [0x218])) [0 f_5(D)->yOffset+0 S8 A64])) backflip.c:148 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [557])
        (nil)))
(insn 774 773 775 12 (set (reg/f:DI 1 dx [558])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 775 774 776 12 (set (reg:DF 23 xmm2 [orig:331 D.7548 ] [331])
        (mem/j:DF (plus:DI (reg/f:DI 1 dx [558])
                (const_int 528 [0x210])) [0 f_5(D)->xOffset+0 S8 A64])) backflip.c:148 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [558])
        (nil)))
(insn 776 775 777 12 (set (reg:DF 21 xmm0 [orig:332 px.9 ] [332])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -520 [0xfffffffffffffdf8])) [0 px+0 S8 A64])) backflip.c:148 133 {*movdf_internal_rex64}
     (nil))
(insn 777 776 778 12 (set (reg:DF 21 xmm0 [orig:333 D.7548 ] [333])
        (plus:DF (reg:DF 21 xmm0 [orig:332 px.9 ] [332])
            (reg:DF 23 xmm2 [orig:331 D.7548 ] [331]))) backflip.c:148 778 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:332 px.9 ] [332])
        (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:331 D.7548 ] [331])
            (nil))))
(insn 778 777 779 12 (set (reg/f:DI 1 dx [559])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 779 778 780 12 (set (reg/f:DI 1 dx [orig:334 D.7556 ] [334])
        (mem/f/j:DI (plus:DI (reg/f:DI 1 dx [559])
                (const_int 512 [0x200])) [0 f_5(D)->grouserJoint+0 S8 A64])) backflip.c:148 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [559])
        (nil)))
(insn 780 779 781 12 (set (reg:DI 2 cx [560])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:148 87 {*movdi_internal_rex64}
     (nil))
(insn 781 780 782 12 (parallel [
            (set (reg:DI 2 cx [orig:335 D.7552 ] [335])
                (ashift:DI (reg:DI 2 cx [560])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:148 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [560])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 782 781 783 12 (parallel [
            (set (reg/f:DI 1 dx [orig:336 D.7556 ] [336])
                (plus:DI (reg/f:DI 1 dx [orig:334 D.7556 ] [334])
                    (reg:DI 2 cx [orig:335 D.7552 ] [335])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:148 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:335 D.7552 ] [335])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:334 D.7556 ] [334])
            (nil))))
(insn 783 782 784 12 (set (reg/f:DI 1 dx [orig:337 D.7551 ] [337])
        (mem/f:DI (reg/f:DI 1 dx [orig:336 D.7556 ] [336]) [0 *_296+0 S8 A64])) backflip.c:148 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:336 D.7556 ] [336])
        (nil)))
(insn 784 783 785 12 (set (reg:DF 23 xmm2)
        (reg:DF 22 xmm1 [orig:329 D.7548 ] [329])) backflip.c:148 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:329 D.7548 ] [329])
        (nil)))
(insn 785 784 882 12 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])
        (reg:DF 0 ax [orig:330 D.7548 ] [330])) backflip.c:148 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:330 D.7548 ] [330])
        (nil)))
(insn 882 785 786 12 (set (reg:DF 22 xmm1)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -568 [0xfffffffffffffdc8])) [0 %sfp+-568 S8 A64])) backflip.c:148 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 611)
        (nil)))
(insn 786 882 787 12 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:333 D.7548 ] [333])) backflip.c:148 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:333 D.7548 ] [333])
        (nil)))
(insn 787 786 788 12 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:337 D.7551 ] [337])) backflip.c:148 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:337 D.7551 ] [337])
        (nil)))
(call_insn 788 787 789 12 (call (mem:QI (symbol_ref:DI ("dJointSetHingeAnchor") [flags 0x41]  <function_decl 0x100008ef00 dJointSetHingeAnchor>) [0 dJointSetHingeAnchor S1 A8])
        (const_int 0 [0])) backflip.c:148 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 789 788 790 12 (set (reg/f:DI 0 ax [561])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:149 87 {*movdi_internal_rex64}
     (nil))
(insn 790 789 791 12 (set (reg/f:DI 0 ax [orig:338 D.7556 ] [338])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [561])
                (const_int 512 [0x200])) [0 f_5(D)->grouserJoint+0 S8 A64])) backflip.c:149 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [561])
        (nil)))
(insn 791 790 792 12 (set (reg:DI 1 dx [562])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])) backflip.c:149 87 {*movdi_internal_rex64}
     (nil))
(insn 792 791 793 12 (parallel [
            (set (reg:DI 1 dx [orig:339 D.7552 ] [339])
                (ashift:DI (reg:DI 1 dx [562])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:149 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [562])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -496 [0xfffffffffffffe10])) [0 i+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 793 792 794 12 (parallel [
            (set (reg/f:DI 0 ax [orig:340 D.7556 ] [340])
                (plus:DI (reg/f:DI 0 ax [orig:338 D.7556 ] [338])
                    (reg:DI 1 dx [orig:339 D.7552 ] [339])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:149 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:339 D.7552 ] [339])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:338 D.7556 ] [338])
            (nil))))
(insn 794 793 795 12 (set (reg/f:DI 0 ax [orig:341 D.7551 ] [341])
        (mem/f:DI (reg/f:DI 0 ax [orig:340 D.7556 ] [340]) [0 *_300+0 S8 A64])) backflip.c:149 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:340 D.7556 ] [340])
        (nil)))
(insn 795 794 796 12 (set (reg:DF 23 xmm2)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:149 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 796 795 797 12 (set (reg:DF 22 xmm1)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) backflip.c:149 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 797 796 798 12 (set (reg:DF 21 xmm0)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) backflip.c:149 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 798 797 799 12 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:341 D.7551 ] [341])) backflip.c:149 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:341 D.7551 ] [341])
        (nil)))
(call_insn 799 798 800 12 (call (mem:QI (symbol_ref:DI ("dJointSetHingeAxis") [flags 0x41]  <function_decl 0x100008f400 dJointSetHingeAxis>) [0 dJointSetHingeAxis S1 A8])
        (const_int 0 [0])) backflip.c:149 656 {*call}
     (expr_list:REG_DEAD (reg:DF 23 xmm2)
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (expr_list:DF (use (reg:DF 23 xmm2))
                    (nil))))))
(insn 800 799 801 12 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:136 274 {*adddi_1}
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 270 271 563
(code_label 801 800 802 13 6 "" [1 uses])
(note 802 801 803 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 803 802 804 13 (set (reg/f:DI 0 ax [563])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [0 f+0 S8 A64])) backflip.c:136 87 {*movdi_internal_rex64}
     (nil))
(insn 804 803 805 13 (set (reg/f:DI 0 ax [orig:270 D.7547 ] [270])
        (mem/f/j:DI (reg/f:DI 0 ax [563]) [0 f_5(D)->m+0 S8 A64])) backflip.c:136 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [563])
        (nil)))
(insn 805 804 807 13 (set (reg:DI 0 ax [orig:271 D.7552 ] [271])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:270 D.7547 ] [270])
                (const_int 24 [0x18])) [0 _225->numGrousers+0 S8 A64])) backflip.c:136 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:270 D.7547 ] [270])
        (nil)))
(insn 807 805 808 13 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:271 D.7552 ] [271])
            (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -512 [0xfffffffffffffe00])) [0 i+0 S8 A64]))) backflip.c:136 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:271 D.7552 ] [271])
        (nil)))
(jump_insn 808 807 809 13 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 806)
            (pc))) backflip.c:136 612 {*jcc_1}
     (nil)
 -> 806)
;;  succ:       6
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 809 808 0 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function back_flip_destroy (back_flip_destroy, funcdef_no=59, decl_uid=6982, cgraph_uid=59)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


back_flip_destroy

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,3u} r7={1d,2u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 25{18d,7u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])
        (reg:DI 5 di [ t ])) backflip.c:156 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ t ])
        (nil)))
(note 3 2 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function back_flip_deinit (back_flip_deinit, funcdef_no=60, decl_uid=6984, cgraph_uid=60)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rzw {*call}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 11
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 23
changing reg in insn 26
changing reg in insn 27
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 28.


back_flip_deinit

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={18d,11u} r1={7d} r2={7d} r4={7d} r5={13d,7u} r6={1d,9u} r7={1d,8u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={6d} r18={6d} r19={6d} r20={1d,1u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} 
;;    total ref usage 335{299d,36u,0e} in 24{18 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])
        (reg:DI 5 di [ t ])) backflip.c:160 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ t ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:161 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [orig:59 D.7559 ] [59])
        (mem/f/j:DI (reg/f:DI 0 ax [64]) [0 t_1(D)->m+0 S8 A64])) backflip.c:161 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [64])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:59 D.7559 ] [59])) backflip.c:161 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.7559 ] [59])
        (nil)))
(call_insn 9 8 10 2 (call (mem:QI (symbol_ref:DI ("track_kinematic_model_deinit") [flags 0x41]  <function_decl 0x100007d000 track_kinematic_model_deinit>) [0 track_kinematic_model_deinit S1 A8])
        (const_int 0 [0])) backflip.c:161 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 0 ax [65])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:162 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [orig:60 D.7560 ] [60])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [65])
                (const_int 496 [0x1f0])) [0 t_1(D)->grouserBody+0 S8 A64])) backflip.c:162 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:60 D.7560 ] [60])) backflip.c:162 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.7560 ] [60])
        (nil)))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x10000b1100 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) backflip.c:162 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:163 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 0 ax [orig:61 D.7561 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [66])
                (const_int 504 [0x1f8])) [0 t_1(D)->grouserGeom+0 S8 A64])) backflip.c:163 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:61 D.7561 ] [61])) backflip.c:163 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.7561 ] [61])
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x10000b1100 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) backflip.c:163 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 18 17 19 2 (set (reg/f:DI 0 ax [67])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:164 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [orig:62 D.7562 ] [62])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [67])
                (const_int 512 [0x200])) [0 t_1(D)->grouserJoint+0 S8 A64])) backflip.c:164 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:62 D.7562 ] [62])) backflip.c:164 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.7562 ] [62])
        (nil)))
(call_insn 21 20 22 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x10000b1100 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) backflip.c:164 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 0 ax [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:165 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 0 ax [orig:63 D.7563 ] [63])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [68])
                (const_int 520 [0x208])) [0 t_1(D)->grouserMass+0 S8 A64])) backflip.c:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [68])
        (nil)))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:63 D.7563 ] [63])) backflip.c:165 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.7563 ] [63])
        (nil)))
(call_insn 25 24 26 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x10000b1100 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) backflip.c:165 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 2 (set (reg:DI 0 ax [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])) backflip.c:166 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [69])) backflip.c:166 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [69])
        (nil)))
(call_insn 28 27 0 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x10000b1100 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) backflip.c:166 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function back_flip_draw (back_flip_draw, funcdef_no=61, decl_uid=6987, cgraph_uid=61)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 21:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 22:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rzw {*call}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 27:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =x  (1) xm {*truncdfsf_fast_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 29:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =x  (1) xm {*truncdfsf_fast_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 52:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) rzw {*call}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 58:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =x  (1) xm {*truncdfsf_fast_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 60:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =x  (1) xm {*truncdfsf_fast_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) rzw {*call}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 92:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 99:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rzw {*call}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 103:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) rzw {*call}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 110:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) r  (1) rm {*cmpdi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 123:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 128:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 129:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 134:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 137:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) rzw {*call}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 141:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 142:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 143:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 148:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 149:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 153:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 154:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 159:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 162:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) rzw {*call}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 166:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) rzw {*call}
New elimination table:
Can't eliminate 16 to 7 (offset=160, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=144, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 14
changing reg in insn 15
changing reg in insn 20
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 33
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 34
changing reg in insn 39
changing reg in insn 40
changing reg in insn 45
changing reg in insn 46
changing reg in insn 51
changing reg in insn 56
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 64
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 65
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 117
changing reg in insn 74
changing reg in insn 77
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 79
changing reg in insn 84
changing reg in insn 87
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 88
changing reg in insn 88
changing reg in insn 89
changing reg in insn 94
changing reg in insn 97
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 101
changing reg in insn 124
changing reg in insn 125
changing reg in insn 130
changing reg in insn 131
changing reg in insn 136
changing reg in insn 139
changing reg in insn 149
changing reg in insn 150
changing reg in insn 155
changing reg in insn 156
changing reg in insn 161
changing reg in insn 164
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 22
changing reg in insn 24
changing reg in insn 31
changing reg in insn 35
changing reg in insn 32
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 54
changing reg in insn 53
changing reg in insn 55
changing reg in insn 62
changing reg in insn 66
changing reg in insn 63
changing reg in insn 67
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 99
changing reg in insn 100
changing reg in insn 103
changing reg in insn 106
changing reg in insn 104
changing reg in insn 107
changing reg in insn 105
changing reg in insn 108
changing reg in insn 113
changing reg in insn 114
changing reg in insn 123
changing reg in insn 124
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 141
changing reg in insn 144
changing reg in insn 142
changing reg in insn 145
changing reg in insn 143
changing reg in insn 146
changing reg in insn 148
changing reg in insn 149
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 163
changing reg in insn 166
changing reg in insn 169
changing reg in insn 167
changing reg in insn 170
changing reg in insn 168
changing reg in insn 171
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 126.
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 151.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 165.
verify found no changes in insn with uid = 172.


back_flip_draw

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1]
;;  ref usage 	r0={75d,64u} r1={42d,21u} r2={26d,5u} r4={31d,11u} r5={41d,21u} r6={1d,67u} r7={1d,27u} r8={20d} r9={20d} r10={20d} r11={20d} r12={20d} r13={20d} r14={20d} r15={20d} r17={39d,2u} r18={20d} r19={20d} r20={1d,1u,3e} r21={29d,8u} r22={25d,4u} r23={21d} r24={21d} r25={21d} r26={21d} r27={21d} r28={21d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={21d} r38={21d} r39={20d} r40={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} 
;;    total ref usage 1273{1039d,231u,3e} in 161{141 regular + 20 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])
        (reg:DI 5 di [ t ])) backflip.c:169 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ t ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 draw_planes+0 S4 A32])
        (reg:SI 4 si [ draw_planes ])) backflip.c:169 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ draw_planes ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:171 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [orig:59 D.7564 ] [59])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [93])
                (const_int 448 [0x1c0])) [0 t_2(D)->wheel1Geom+0 S8 A64])) backflip.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [93])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:59 D.7564 ] [59])) backflip.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.7564 ] [59])
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetPosition") [flags 0x41]  <function_decl 0x10000f4100 dGeomGetPosition>) [0 dGeomGetPosition S1 A8])
            (const_int 0 [0]))) backflip.c:171 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 0 ax [94])
        (reg:DI 0 ax)) backflip.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 pos+0 S8 A64])
        (reg:DI 0 ax [94])) backflip.c:171 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [94])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:172 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [orig:60 D.7564 ] [60])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [95])
                (const_int 448 [0x1c0])) [0 t_2(D)->wheel1Geom+0 S8 A64])) backflip.c:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [95])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:60 D.7564 ] [60])) backflip.c:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.7564 ] [60])
        (nil)))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetRotation") [flags 0x41]  <function_decl 0x1000088c00 dGeomGetRotation>) [0 dGeomGetRotation S1 A8])
            (const_int 0 [0]))) backflip.c:172 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 0 ax [96])
        (reg:DI 0 ax)) backflip.c:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 R+0 S8 A64])
        (reg:DI 0 ax [96])) backflip.c:172 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [96])
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:174 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 0 ax [orig:61 D.7564 ] [61])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [97])
                (const_int 448 [0x1c0])) [0 t_2(D)->wheel1Geom+0 S8 A64])) backflip.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [97])
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 1 dx [98])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:174 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 2 cx [99])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:174 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [98])) backflip.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [98])
        (nil)))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [99])) backflip.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [99])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:61 D.7564 ] [61])) backflip.c:174 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.7564 ] [61])
        (nil)))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("dGeomCylinderGetParams") [flags 0x41]  <function_decl 0x100004e900 dGeomCylinderGetParams>) [0 dGeomCylinderGetParams S1 A8])
        (const_int 0 [0])) backflip.c:174 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 27 26 28 2 (set (reg:DF 21 xmm0 [orig:62 radius.10 ] [62])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 radius+0 S8 A64])) backflip.c:175 133 {*movdf_internal_rex64}
     (nil))
(insn 28 27 29 2 (set (reg:SF 22 xmm1 [orig:63 D.7565 ] [63])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:62 radius.10 ] [62]))) backflip.c:175 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:62 radius.10 ] [62])
        (nil)))
(insn 29 28 30 2 (set (reg:DF 21 xmm0 [orig:64 length.11 ] [64])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) backflip.c:175 133 {*movdf_internal_rex64}
     (nil))
(insn 30 29 31 2 (set (reg:SF 21 xmm0 [orig:65 D.7565 ] [65])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:64 length.11 ] [64]))) backflip.c:175 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:64 length.11 ] [64])
        (nil)))
(insn 31 30 32 2 (set (reg:DI 1 dx [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 R+0 S8 A64])) backflip.c:175 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 2 (set (reg:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 pos+0 S8 A64])) backflip.c:175 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 2 (set (reg:SF 22 xmm1)
        (reg:SF 22 xmm1 [orig:63 D.7565 ] [63])) backflip.c:175 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:63 D.7565 ] [63])
        (nil)))
(insn 34 33 35 2 (set (reg:SF 21 xmm0)
        (reg:SF 21 xmm0 [orig:65 D.7565 ] [65])) backflip.c:175 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:65 D.7565 ] [65])
        (nil)))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [100])) backflip.c:175 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [100])
        (nil)))
(insn 36 35 37 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [101])) backflip.c:175 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [101])
        (nil)))
(call_insn 37 36 38 2 (call (mem:QI (symbol_ref:DI ("dsDrawCylinderD") [flags 0x41]  <function_decl 0x7f616810cb00 dsDrawCylinderD>) [0 dsDrawCylinderD S1 A8])
        (const_int 0 [0])) backflip.c:175 656 {*call}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_DEAD (reg:SF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:SF (use (reg:SF 21 xmm0))
                (expr_list:SF (use (reg:SF 22 xmm1))
                    (nil))))))
(insn 38 37 39 2 (set (reg/f:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:180 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 2 (set (reg/f:DI 0 ax [orig:66 D.7564 ] [66])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [102])
                (const_int 456 [0x1c8])) [0 t_2(D)->wheel2Geom+0 S8 A64])) backflip.c:180 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [102])
        (nil)))
(insn 40 39 41 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:66 D.7564 ] [66])) backflip.c:180 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.7564 ] [66])
        (nil)))
(call_insn 41 40 42 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetPosition") [flags 0x41]  <function_decl 0x10000f4100 dGeomGetPosition>) [0 dGeomGetPosition S1 A8])
            (const_int 0 [0]))) backflip.c:180 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 42 41 43 2 (set (reg:DI 0 ax [103])
        (reg:DI 0 ax)) backflip.c:180 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 43 42 44 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 pos+0 S8 A64])
        (reg:DI 0 ax [103])) backflip.c:180 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [103])
        (nil)))
(insn 44 43 45 2 (set (reg/f:DI 0 ax [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:181 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 2 (set (reg/f:DI 0 ax [orig:67 D.7564 ] [67])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [104])
                (const_int 456 [0x1c8])) [0 t_2(D)->wheel2Geom+0 S8 A64])) backflip.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [104])
        (nil)))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:67 D.7564 ] [67])) backflip.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.7564 ] [67])
        (nil)))
(call_insn 47 46 48 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetRotation") [flags 0x41]  <function_decl 0x1000088c00 dGeomGetRotation>) [0 dGeomGetRotation S1 A8])
            (const_int 0 [0]))) backflip.c:181 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 48 47 49 2 (set (reg:DI 0 ax [105])
        (reg:DI 0 ax)) backflip.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 49 48 50 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 R+0 S8 A64])
        (reg:DI 0 ax [105])) backflip.c:181 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [105])
        (nil)))
(insn 50 49 51 2 (set (reg/f:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:183 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 2 (set (reg/f:DI 0 ax [orig:68 D.7564 ] [68])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [106])
                (const_int 456 [0x1c8])) [0 t_2(D)->wheel2Geom+0 S8 A64])) backflip.c:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [106])
        (nil)))
(insn 52 51 53 2 (parallel [
            (set (reg:DI 1 dx [107])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:183 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 2 cx [108])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:183 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 2 (set (reg:DI 1 dx)
        (reg:DI 1 dx [107])) backflip.c:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [107])
        (nil)))
(insn 55 54 56 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [108])) backflip.c:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [108])
        (nil)))
(insn 56 55 57 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:68 D.7564 ] [68])) backflip.c:183 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 D.7564 ] [68])
        (nil)))
(call_insn 57 56 58 2 (call (mem:QI (symbol_ref:DI ("dGeomCylinderGetParams") [flags 0x41]  <function_decl 0x100004e900 dGeomCylinderGetParams>) [0 dGeomCylinderGetParams S1 A8])
        (const_int 0 [0])) backflip.c:183 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 58 57 59 2 (set (reg:DF 21 xmm0 [orig:69 radius.12 ] [69])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 radius+0 S8 A64])) backflip.c:184 133 {*movdf_internal_rex64}
     (nil))
(insn 59 58 60 2 (set (reg:SF 22 xmm1 [orig:70 D.7565 ] [70])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:69 radius.12 ] [69]))) backflip.c:184 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:69 radius.12 ] [69])
        (nil)))
(insn 60 59 61 2 (set (reg:DF 21 xmm0 [orig:71 length.13 ] [71])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 length+0 S8 A64])) backflip.c:184 133 {*movdf_internal_rex64}
     (nil))
(insn 61 60 62 2 (set (reg:SF 21 xmm0 [orig:72 D.7565 ] [72])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:71 length.13 ] [71]))) backflip.c:184 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:71 length.13 ] [71])
        (nil)))
(insn 62 61 63 2 (set (reg:DI 1 dx [109])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 R+0 S8 A64])) backflip.c:184 87 {*movdi_internal_rex64}
     (nil))
(insn 63 62 64 2 (set (reg:DI 0 ax [110])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 pos+0 S8 A64])) backflip.c:184 87 {*movdi_internal_rex64}
     (nil))
(insn 64 63 65 2 (set (reg:SF 22 xmm1)
        (reg:SF 22 xmm1 [orig:70 D.7565 ] [70])) backflip.c:184 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:70 D.7565 ] [70])
        (nil)))
(insn 65 64 66 2 (set (reg:SF 21 xmm0)
        (reg:SF 21 xmm0 [orig:72 D.7565 ] [72])) backflip.c:184 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:72 D.7565 ] [72])
        (nil)))
(insn 66 65 67 2 (set (reg:DI 4 si)
        (reg:DI 1 dx [109])) backflip.c:184 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [109])
        (nil)))
(insn 67 66 68 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [110])) backflip.c:184 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [110])
        (nil)))
(call_insn 68 67 69 2 (call (mem:QI (symbol_ref:DI ("dsDrawCylinderD") [flags 0x41]  <function_decl 0x7f616810cb00 dsDrawCylinderD>) [0 dsDrawCylinderD S1 A8])
        (const_int 0 [0])) backflip.c:184 656 {*call}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_DEAD (reg:SF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:SF (use (reg:SF 21 xmm0))
                (expr_list:SF (use (reg:SF 22 xmm1))
                    (nil))))))
(insn 69 68 177 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64])
        (const_int 0 [0])) backflip.c:188 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 177 69 178 2 (set (pc)
        (label_ref 111)) backflip.c:188 650 {jump}
     (nil)
 -> 111)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 178 177 116)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 75 76 77 78 79 80 81 82 83 84 85 86 111 112 113 114 115 116 117 118 119 120 121 122
(code_label 116 178 72 3 16 "" [1 uses])
(note 72 116 73 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 3 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 74 73 75 3 (set (reg/f:DI 0 ax [orig:75 D.7568 ] [75])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [111])
                (const_int 504 [0x1f8])) [0 t_2(D)->grouserGeom+0 S8 A64])) backflip.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [111])
        (nil)))
(insn 75 74 76 3 (set (reg:DI 1 dx [112])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64])) backflip.c:189 87 {*movdi_internal_rex64}
     (nil))
(insn 76 75 77 3 (parallel [
            (set (reg:DI 1 dx [orig:76 D.7567 ] [76])
                (ashift:DI (reg:DI 1 dx [112])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:189 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [112])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 77 76 78 3 (parallel [
            (set (reg/f:DI 0 ax [orig:77 D.7568 ] [77])
                (plus:DI (reg/f:DI 0 ax [orig:75 D.7568 ] [75])
                    (reg:DI 1 dx [orig:76 D.7567 ] [76])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:189 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:76 D.7567 ] [76])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:75 D.7568 ] [75])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 78 77 79 3 (set (reg/f:DI 0 ax [orig:78 D.7564 ] [78])
        (mem/f:DI (reg/f:DI 0 ax [orig:77 D.7568 ] [77]) [0 *_26+0 S8 A64])) backflip.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:77 D.7568 ] [77])
        (nil)))
(insn 79 78 80 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:78 D.7564 ] [78])) backflip.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:78 D.7564 ] [78])
        (nil)))
(call_insn 80 79 81 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetPosition") [flags 0x41]  <function_decl 0x10000f4100 dGeomGetPosition>) [0 dGeomGetPosition S1 A8])
            (const_int 0 [0]))) backflip.c:189 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 3 (set (reg:DI 0 ax [113])
        (reg:DI 0 ax)) backflip.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 82 81 83 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 pos+0 S8 A64])
        (reg:DI 0 ax [113])) backflip.c:189 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [113])
        (nil)))
(insn 83 82 84 3 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 84 83 85 3 (set (reg/f:DI 0 ax [orig:79 D.7568 ] [79])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [114])
                (const_int 504 [0x1f8])) [0 t_2(D)->grouserGeom+0 S8 A64])) backflip.c:190 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [114])
        (nil)))
(insn 85 84 86 3 (set (reg:DI 1 dx [115])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64])) backflip.c:190 87 {*movdi_internal_rex64}
     (nil))
(insn 86 85 87 3 (parallel [
            (set (reg:DI 1 dx [orig:80 D.7567 ] [80])
                (ashift:DI (reg:DI 1 dx [115])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:190 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [115])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 87 86 88 3 (parallel [
            (set (reg/f:DI 0 ax [orig:81 D.7568 ] [81])
                (plus:DI (reg/f:DI 0 ax [orig:79 D.7568 ] [79])
                    (reg:DI 1 dx [orig:80 D.7567 ] [80])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:190 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:80 D.7567 ] [80])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:79 D.7568 ] [79])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 88 87 89 3 (set (reg/f:DI 0 ax [orig:82 D.7564 ] [82])
        (mem/f:DI (reg/f:DI 0 ax [orig:81 D.7568 ] [81]) [0 *_31+0 S8 A64])) backflip.c:190 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:81 D.7568 ] [81])
        (nil)))
(insn 89 88 90 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:82 D.7564 ] [82])) backflip.c:190 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:82 D.7564 ] [82])
        (nil)))
(call_insn 90 89 91 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetRotation") [flags 0x41]  <function_decl 0x1000088c00 dGeomGetRotation>) [0 dGeomGetRotation S1 A8])
            (const_int 0 [0]))) backflip.c:190 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 91 90 92 3 (set (reg:DI 0 ax [116])
        (reg:DI 0 ax)) backflip.c:190 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 92 91 93 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 R+0 S8 A64])
        (reg:DI 0 ax [116])) backflip.c:190 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [116])
        (nil)))
(insn 93 92 94 3 (set (reg/f:DI 0 ax [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:192 87 {*movdi_internal_rex64}
     (nil))
(insn 94 93 95 3 (set (reg/f:DI 0 ax [orig:83 D.7568 ] [83])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [117])
                (const_int 504 [0x1f8])) [0 t_2(D)->grouserGeom+0 S8 A64])) backflip.c:192 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [117])
        (nil)))
(insn 95 94 96 3 (set (reg:DI 1 dx [118])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64])) backflip.c:192 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 3 (parallel [
            (set (reg:DI 1 dx [orig:84 D.7567 ] [84])
                (ashift:DI (reg:DI 1 dx [118])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:192 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [118])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 97 96 98 3 (parallel [
            (set (reg/f:DI 0 ax [orig:85 D.7568 ] [85])
                (plus:DI (reg/f:DI 0 ax [orig:83 D.7568 ] [83])
                    (reg:DI 1 dx [orig:84 D.7567 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:192 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:84 D.7567 ] [84])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:83 D.7568 ] [83])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 98 97 99 3 (set (reg/f:DI 0 ax [orig:86 D.7564 ] [86])
        (mem/f:DI (reg/f:DI 0 ax [orig:85 D.7568 ] [85]) [0 *_36+0 S8 A64])) backflip.c:192 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:85 D.7568 ] [85])
        (nil)))
(insn 99 98 100 3 (parallel [
            (set (reg:DI 1 dx [119])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:192 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 99 101 3 (set (reg:DI 4 si)
        (reg:DI 1 dx [119])) backflip.c:192 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [119])
        (nil)))
(insn 101 100 102 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:86 D.7564 ] [86])) backflip.c:192 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:86 D.7564 ] [86])
        (nil)))
(call_insn 102 101 103 3 (call (mem:QI (symbol_ref:DI ("dGeomBoxGetLengths") [flags 0x41]  <function_decl 0x1000041800 dGeomBoxGetLengths>) [0 dGeomBoxGetLengths S1 A8])
        (const_int 0 [0])) backflip.c:192 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 103 102 104 3 (parallel [
            (set (reg:DI 1 dx [120])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:193 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 104 103 105 3 (set (reg:DI 2 cx [121])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 R+0 S8 A64])) backflip.c:193 87 {*movdi_internal_rex64}
     (nil))
(insn 105 104 106 3 (set (reg:DI 0 ax [122])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 pos+0 S8 A64])) backflip.c:193 87 {*movdi_internal_rex64}
     (nil))
(insn 106 105 107 3 (set (reg:DI 1 dx)
        (reg:DI 1 dx [120])) backflip.c:193 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [120])
        (nil)))
(insn 107 106 108 3 (set (reg:DI 4 si)
        (reg:DI 2 cx [121])) backflip.c:193 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [121])
        (nil)))
(insn 108 107 109 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [122])) backflip.c:193 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [122])
        (nil)))
(call_insn 109 108 110 3 (call (mem:QI (symbol_ref:DI ("dsDrawBoxD") [flags 0x41]  <function_decl 0x7f616810c800 dsDrawBoxD>) [0 dsDrawBoxD S1 A8])
        (const_int 0 [0])) backflip.c:193 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 110 109 111 3 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:188 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 73 74 123
(code_label 111 110 112 4 15 "" [1 uses])
(note 112 111 113 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 4 (set (reg/f:DI 0 ax [123])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:188 87 {*movdi_internal_rex64}
     (nil))
(insn 114 113 115 4 (set (reg/f:DI 0 ax [orig:73 D.7566 ] [73])
        (mem/f/j:DI (reg/f:DI 0 ax [123]) [0 t_2(D)->m+0 S8 A64])) backflip.c:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [123])
        (nil)))
(insn 115 114 117 4 (set (reg:DI 0 ax [orig:74 D.7567 ] [74])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:73 D.7566 ] [73])
                (const_int 24 [0x18])) [0 _22->numGrousers+0 S8 A64])) backflip.c:188 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:73 D.7566 ] [73])
        (nil)))
(insn 117 115 118 4 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:74 D.7567 ] [74])
            (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [0 i+0 S8 A64]))) backflip.c:188 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:74 D.7567 ] [74])
        (nil)))
(jump_insn 118 117 119 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) backflip.c:188 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 116)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 119 118 120 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])) [0 draw_planes+0 S4 A32])
            (const_int 0 [0]))) backflip.c:197 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 121 120 122 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 175)
            (pc))) backflip.c:197 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 175)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 87 88 89 90 91 92 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141
(note 122 121 123 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 6 (set (reg/f:DI 0 ax [124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:200 87 {*movdi_internal_rex64}
     (nil))
(insn 124 123 125 6 (set (reg/f:DI 0 ax [orig:87 D.7564 ] [87])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [124])
                (const_int 464 [0x1d0])) [0 t_2(D)->planeGeom1+0 S8 A64])) backflip.c:200 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [124])
        (nil)))
(insn 125 124 126 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 D.7564 ] [87])) backflip.c:200 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 D.7564 ] [87])
        (nil)))
(call_insn 126 125 127 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetPosition") [flags 0x41]  <function_decl 0x10000f4100 dGeomGetPosition>) [0 dGeomGetPosition S1 A8])
            (const_int 0 [0]))) backflip.c:200 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 127 126 128 6 (set (reg:DI 0 ax [125])
        (reg:DI 0 ax)) backflip.c:200 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 128 127 129 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pos+0 S8 A64])
        (reg:DI 0 ax [125])) backflip.c:200 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [125])
        (nil)))
(insn 129 128 130 6 (set (reg/f:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:201 87 {*movdi_internal_rex64}
     (nil))
(insn 130 129 131 6 (set (reg/f:DI 0 ax [orig:88 D.7564 ] [88])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [126])
                (const_int 464 [0x1d0])) [0 t_2(D)->planeGeom1+0 S8 A64])) backflip.c:201 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [126])
        (nil)))
(insn 131 130 132 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:88 D.7564 ] [88])) backflip.c:201 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:88 D.7564 ] [88])
        (nil)))
(call_insn 132 131 133 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetRotation") [flags 0x41]  <function_decl 0x1000088c00 dGeomGetRotation>) [0 dGeomGetRotation S1 A8])
            (const_int 0 [0]))) backflip.c:201 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 133 132 134 6 (set (reg:DI 0 ax [127])
        (reg:DI 0 ax)) backflip.c:201 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 134 133 135 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 R+0 S8 A64])
        (reg:DI 0 ax [127])) backflip.c:201 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [127])
        (nil)))
(insn 135 134 136 6 (set (reg/f:DI 0 ax [128])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:203 87 {*movdi_internal_rex64}
     (nil))
(insn 136 135 137 6 (set (reg/f:DI 0 ax [orig:89 D.7564 ] [89])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [128])
                (const_int 464 [0x1d0])) [0 t_2(D)->planeGeom1+0 S8 A64])) backflip.c:203 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [128])
        (nil)))
(insn 137 136 138 6 (parallel [
            (set (reg:DI 1 dx [129])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:203 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 138 137 139 6 (set (reg:DI 4 si)
        (reg:DI 1 dx [129])) backflip.c:203 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [129])
        (nil)))
(insn 139 138 140 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:89 D.7564 ] [89])) backflip.c:203 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 D.7564 ] [89])
        (nil)))
(call_insn 140 139 141 6 (call (mem:QI (symbol_ref:DI ("dGeomBoxGetLengths") [flags 0x41]  <function_decl 0x1000041800 dGeomBoxGetLengths>) [0 dGeomBoxGetLengths S1 A8])
        (const_int 0 [0])) backflip.c:203 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 141 140 142 6 (parallel [
            (set (reg:DI 1 dx [130])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:204 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 142 141 143 6 (set (reg:DI 2 cx [131])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 R+0 S8 A64])) backflip.c:204 87 {*movdi_internal_rex64}
     (nil))
(insn 143 142 144 6 (set (reg:DI 0 ax [132])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pos+0 S8 A64])) backflip.c:204 87 {*movdi_internal_rex64}
     (nil))
(insn 144 143 145 6 (set (reg:DI 1 dx)
        (reg:DI 1 dx [130])) backflip.c:204 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [130])
        (nil)))
(insn 145 144 146 6 (set (reg:DI 4 si)
        (reg:DI 2 cx [131])) backflip.c:204 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [131])
        (nil)))
(insn 146 145 147 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [132])) backflip.c:204 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [132])
        (nil)))
(call_insn 147 146 148 6 (call (mem:QI (symbol_ref:DI ("dsDrawBoxD") [flags 0x41]  <function_decl 0x7f616810c800 dsDrawBoxD>) [0 dsDrawBoxD S1 A8])
        (const_int 0 [0])) backflip.c:204 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
(insn 148 147 149 6 (set (reg/f:DI 0 ax [133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:208 87 {*movdi_internal_rex64}
     (nil))
(insn 149 148 150 6 (set (reg/f:DI 0 ax [orig:90 D.7564 ] [90])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [133])
                (const_int 472 [0x1d8])) [0 t_2(D)->planeGeom2+0 S8 A64])) backflip.c:208 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [133])
        (nil)))
(insn 150 149 151 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:90 D.7564 ] [90])) backflip.c:208 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 D.7564 ] [90])
        (nil)))
(call_insn 151 150 152 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetPosition") [flags 0x41]  <function_decl 0x10000f4100 dGeomGetPosition>) [0 dGeomGetPosition S1 A8])
            (const_int 0 [0]))) backflip.c:208 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 152 151 153 6 (set (reg:DI 0 ax [134])
        (reg:DI 0 ax)) backflip.c:208 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 153 152 154 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pos+0 S8 A64])
        (reg:DI 0 ax [134])) backflip.c:208 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [134])
        (nil)))
(insn 154 153 155 6 (set (reg/f:DI 0 ax [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:209 87 {*movdi_internal_rex64}
     (nil))
(insn 155 154 156 6 (set (reg/f:DI 0 ax [orig:91 D.7564 ] [91])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [135])
                (const_int 472 [0x1d8])) [0 t_2(D)->planeGeom2+0 S8 A64])) backflip.c:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [135])
        (nil)))
(insn 156 155 157 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:91 D.7564 ] [91])) backflip.c:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:91 D.7564 ] [91])
        (nil)))
(call_insn 157 156 158 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dGeomGetRotation") [flags 0x41]  <function_decl 0x1000088c00 dGeomGetRotation>) [0 dGeomGetRotation S1 A8])
            (const_int 0 [0]))) backflip.c:209 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 158 157 159 6 (set (reg:DI 0 ax [136])
        (reg:DI 0 ax)) backflip.c:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 159 158 160 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 R+0 S8 A64])
        (reg:DI 0 ax [136])) backflip.c:209 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [136])
        (nil)))
(insn 160 159 161 6 (set (reg/f:DI 0 ax [137])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 t+0 S8 A64])) backflip.c:211 87 {*movdi_internal_rex64}
     (nil))
(insn 161 160 162 6 (set (reg/f:DI 0 ax [orig:92 D.7564 ] [92])
        (mem/f/j:DI (plus:DI (reg/f:DI 0 ax [137])
                (const_int 472 [0x1d8])) [0 t_2(D)->planeGeom2+0 S8 A64])) backflip.c:211 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [137])
        (nil)))
(insn 162 161 163 6 (parallel [
            (set (reg:DI 1 dx [138])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:211 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 163 162 164 6 (set (reg:DI 4 si)
        (reg:DI 1 dx [138])) backflip.c:211 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [138])
        (nil)))
(insn 164 163 165 6 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:92 D.7564 ] [92])) backflip.c:211 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:92 D.7564 ] [92])
        (nil)))
(call_insn 165 164 166 6 (call (mem:QI (symbol_ref:DI ("dGeomBoxGetLengths") [flags 0x41]  <function_decl 0x1000041800 dGeomBoxGetLengths>) [0 dGeomBoxGetLengths S1 A8])
        (const_int 0 [0])) backflip.c:211 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 166 165 167 6 (parallel [
            (set (reg:DI 1 dx [139])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) backflip.c:212 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 167 166 168 6 (set (reg:DI 2 cx [140])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 R+0 S8 A64])) backflip.c:212 87 {*movdi_internal_rex64}
     (nil))
(insn 168 167 169 6 (set (reg:DI 0 ax [141])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 pos+0 S8 A64])) backflip.c:212 87 {*movdi_internal_rex64}
     (nil))
(insn 169 168 170 6 (set (reg:DI 1 dx)
        (reg:DI 1 dx [139])) backflip.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [139])
        (nil)))
(insn 170 169 171 6 (set (reg:DI 4 si)
        (reg:DI 2 cx [140])) backflip.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [140])
        (nil)))
(insn 171 170 172 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [141])) backflip.c:212 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [141])
        (nil)))
(call_insn 172 171 175 6 (call (mem:QI (symbol_ref:DI ("dsDrawBoxD") [flags 0x41]  <function_decl 0x7f616810c800 dsDrawBoxD>) [0 dsDrawBoxD S1 A8])
        (const_int 0 [0])) backflip.c:212 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 175 172 176 7 14 "" [1 uses])
(note 176 175 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

